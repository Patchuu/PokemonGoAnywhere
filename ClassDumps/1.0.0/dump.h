//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Activity {
CDUnknownFunctionPointerType *_vptr$MessageLite;
struct InternalMetadataWithArena _internal_metadata_;
_Bool _is_default_instance_;
long long start_time_ms_;
int unknown_;
int walking_;
int running_;
int stationary_;
int automotive_;
int tilting_;
int cycling_;
int status_;
int _cached_size_;
};

struct ArenaStringPtr {
struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> *ptr_;
};

struct AudioBuffer {
unsigned int _field1;
unsigned int _field2;
void *_field3;
};

struct AudioBufferList {
unsigned int _field1;
struct AudioBuffer _field2[1];
};

struct CGPoint {
double x;
double y;
};

struct CGRect {
struct CGPoint origin;
struct CGSize size;
};

struct CGSize {
double width;
double height;
};

struct CMVideoSampling {
void *cvTextureCache;
void *cvTextureCacheTexture;
void *cvImageBuffer;
};

struct ChannelGroupI;

struct ChannelPool;

struct CompassHeading {
struct CompassHeadingData _field1;
};

struct CompassHeadingData {
double _field1;
double _field2;
};

struct CreateToolbarResult {
id _field1;
id _field2;
};

struct DSPResampler;

struct FMOD_OS_CRITICALSECTION;

struct FMOD_OS_LIBRARY;

struct FMOD_OS_SEMAPHORE;

struct FMOD_OUTPUT_DESCRIPTION_EX {
char *_field1;
unsigned int _field2;
int _field3;
CDUnknownFunctionPointerType _field4;
CDUnknownFunctionPointerType _field5;
CDUnknownFunctionPointerType _field6;
CDUnknownFunctionPointerType _field7;
CDUnknownFunctionPointerType _field8;
CDUnknownFunctionPointerType _field9;
CDUnknownFunctionPointerType _field10;
CDUnknownFunctionPointerType _field11;
CDUnknownFunctionPointerType _field12;
CDUnknownFunctionPointerType _field13;
struct LinkedListNode *_field14;
struct LinkedListNode *_field15;
void *_field16;
int _field17;
int _field18;
struct FMOD_OS_LIBRARY *_field19;
unsigned int _field20;
CDUnknownFunctionPointerType _field21;
CDUnknownFunctionPointerType _field22;
CDUnknownFunctionPointerType _field23;
CDUnknownFunctionPointerType _field24;
CDUnknownFunctionPointerType _field25;
CDUnknownFunctionPointerType _field26;
CDUnknownFunctionPointerType _field27;
CDUnknownFunctionPointerType _field28;
CDUnknownFunctionPointerType _field29;
CDUnknownFunctionPointerType _field30;
CDUnknownFunctionPointerType _field31;
CDUnknownFunctionPointerType _field32;
CDUnknownFunctionPointerType _field33;
CDUnknownFunctionPointerType _field34;
CDUnknownFunctionPointerType _field35;
CDUnknownFunctionPointerType _field36;
CDUnknownFunctionPointerType _field37;
CDUnknownFunctionPointerType _field38;
CDUnknownFunctionPointerType _field39;
CDUnknownFunctionPointerType _field40;
CDUnknownFunctionPointerType _field41;
};

struct FMOD_RECORDING_INFO {
struct LinkedListNode *_field1;
struct LinkedListNode *_field2;
void *_field3;
int _field4;
int _field5;
struct {
unsigned int _field1;
unsigned short _field2;
unsigned short _field3;
unsigned char _field4[8];
} _field6;
_Bool _field7;
int _field8;
_Bool _field9;
int _field10;
unsigned int _field11;
unsigned int _field12;
struct SoundI *_field13;
int _field14;
int _field15;
struct DSPResampler *_field16;
float *_field17;
unsigned int _field18;
void *_field19;
};

struct Global;

struct InternalMetadataWithArena {
void *ptr_;
};

struct IosActivityProvider {
CDUnknownFunctionPointerType *_field1;
struct mutex _field2;
struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>> _field3;
id _field4;
};

struct IosBillingDelegate;

struct IosSensorProvider {
CDUnknownFunctionPointerType *_field1;
struct mutex _field2;
struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>> _field3;
struct shared_ptr<nia::hardware::location::LocationProvider> _field4;
id _field5;
};

struct LinkedListNode;

struct Location {
struct LocationData _field1;
};

struct LocationData {
double _field1;
double _field2;
double _field3;
double _field4;
double _field5;
int _field6;
int _field7;
};

struct LocationParameters {
_Bool run_in_background;
double desired_location_accuracy_m;
int gps_update_time_ms;
int net_update_time_ms;
double min_update_distance_m;
};

struct LocationProvider {
CDUnknownFunctionPointerType *_field1;
struct mutex _field2;
struct mutex _field3;
struct mutex _field4;
struct Location _field5;
struct CompassHeading _field6;
struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>> _field7;
struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>> _field8;
};

struct LocationUpdate {
CDUnknownFunctionPointerType *_vptr$MessageLite;
struct InternalMetadataWithArena _internal_metadata_;
_Bool _is_default_instance_;
struct ArenaStringPtr name_;
long long timestamp_ms_;
float altitude_;
float latitude_;
float longitude_;
float device_speed_;
float device_course_;
float horizontal_accuracy_;
float vertical_accuracy_;
int provider_status_;
long long floor_;
int location_type_;
int _cached_size_;
};

struct OpaqueAudioComponentInstance;

struct OutputCoreAudio {
CDUnknownFunctionPointerType *_field1;
struct LinkedListNode *_field2;
struct LinkedListNode *_field3;
void *_field4;
unsigned int _field5;
struct SystemI *_field6;
struct Global *_field7;
void *_field8;
CDUnknownFunctionPointerType _field9;
_Bool _field10;
struct ChannelPool *_field11;
_Bool _field12;
_Bool _field13;
struct SystemI *_field14;
int _field15;
struct ChannelGroupI *_field16;
int _field17;
_Bool _field18;
int _field19;
int _field20;
struct FMOD_OS_CRITICALSECTION *_field21;
struct FMOD_RECORDING_INFO _field22;
struct FMOD_RECORDING_INFO *_field23;
struct FMOD_OUTPUT_DESCRIPTION_EX _field24;
unsigned int _field25;
unsigned int _field26;
unsigned int _field27;
unsigned int _field28;
unsigned int _field29;
struct OpaqueAudioComponentInstance *_field30;
_Bool _field31;
struct Thread _field32;
char *_field33;
unsigned int _field34;
unsigned int _field35;
unsigned int _field36;
unsigned int _field37;
unsigned int _field38;
_Bool _field39;
struct OpaqueAudioComponentInstance *_field40;
char *_field41;
char *_field42;
struct AudioBufferList _field43;
int _field44;
int _field45;
int _field46;
unsigned int _field47;
_Bool _field48;
};

struct PLCrashHostInfoVersion {
unsigned long long major;
unsigned long long minor;
unsigned long long revision;
};

struct PLCrashReporterCallbacks {
unsigned short _field1;
void *_field2;
CDUnknownFunctionPointerType _field3;
};

struct RenderSurfaceBase;

struct RenderingSurfaceParams {
int _field1;
int _field2;
int _field3;
int _field4;
int _field5;
int _field6;
};

struct SensorUpdate {
CDUnknownFunctionPointerType *_vptr$MessageLite;
struct InternalMetadataWithArena _internal_metadata_;
_Bool _is_default_instance_;
long long timestamp_;
double acceleration_x_;
double acceleration_y_;
double acceleration_z_;
double magnetic_field_x_;
double magnetic_field_y_;
double magnetic_field_z_;
double attitude_pitch_;
double attitude_yaw_;
double attitude_roll_;
double rotation_rate_x_;
double rotation_rate_y_;
int magnetic_field_accuracy_;
int status_;
double rotation_rate_z_;
double gravity_x_;
double gravity_y_;
double gravity_z_;
int _cached_size_;
};

struct SoundI;

struct SystemI;

struct Thread {
CDUnknownFunctionPointerType *_field1;
_Bool _field2;
char _field3[256];
void *_field4;
_Bool _field5;
void *_field6;
void *_field7;
struct FMOD_OS_SEMAPHORE *_field8;
struct FMOD_OS_SEMAPHORE *_field9;
CDUnknownFunctionPointerType _field10;
int _field11;
};

struct UnityDisplaySurfaceBase {
struct RenderSurfaceBase *_field1;
struct RenderSurfaceBase *_field2;
struct RenderSurfaceBase *_field3;
struct RenderSurfaceBase *_field4;
void *_field5;
void *_field6;
void *_field7;
unsigned int _field8;
unsigned int _field9;
unsigned int _field10;
unsigned int _field11;
int _field12;
int _field13;
int _field14;
int _field15;
int _field16;
int _field17;
};

struct UnityDisplaySurfaceGLES {
struct RenderSurfaceBase *_field1;
struct RenderSurfaceBase *_field2;
struct RenderSurfaceBase *_field3;
struct RenderSurfaceBase *_field4;
void *_field5;
void *_field6;
void *_field7;
unsigned int _field8;
unsigned int _field9;
unsigned int _field10;
unsigned int _field11;
int _field12;
int _field13;
int _field14;
int _field15;
int _field16;
int _field17;
id _field18;
id _field19;
unsigned int _field20;
unsigned int _field21;
unsigned int _field22;
unsigned int _field23;
unsigned int _field24;
unsigned int _field25;
struct RenderSurfaceBase *_field26;
unsigned int _field27;
unsigned int _field28;
unsigned int _field29;
};

struct UnityDisplaySurfaceMTL {
struct RenderSurfaceBase *_field1;
struct RenderSurfaceBase *_field2;
struct RenderSurfaceBase *_field3;
struct RenderSurfaceBase *_field4;
void *_field5;
void *_field6;
void *_field7;
unsigned int _field8;
unsigned int _field9;
unsigned int _field10;
unsigned int _field11;
int _field12;
int _field13;
int _field14;
int _field15;
int _field16;
int _field17;
id _field18;
id _field19;
id _field20;
id _field21;
id _field22;
id _field23;
id _field24;
id _field25;
id _field26;
unsigned int _field27;
unsigned int _field28;
};

struct UnityFrameStats {
unsigned long long _field1;
unsigned long long _field2;
unsigned long long _field3;
unsigned long long _field4;
unsigned long long _field5;
unsigned long long _field6;
unsigned long long _field7;
unsigned long long _field8;
unsigned long long _field9;
int _field10;
int _field11;
unsigned long long _field12;
int _field13;
int _field14;
int _field15;
unsigned long long _field16;
int _field17;
int _field18;
int _field19;
int _field20;
int _field21;
int _field22;
int _field23;
int _field24;
};

struct _NSRange {
unsigned long long _field1;
unsigned long long _field2;
};

struct _PLCrashReportDecoder {
struct _Plcrash__CrashReport *_field1;
};

struct _Plcrash__CrashReport {
struct _ProtobufCMessage _field1;
struct _Plcrash__CrashReport__SystemInfo *_field2;
struct _Plcrash__CrashReport__ApplicationInfo *_field3;
unsigned long long _field4;
struct _Plcrash__CrashReport__Thread **_field5;
unsigned long long _field6;
struct _Plcrash__CrashReport__BinaryImage **_field7;
struct _Plcrash__CrashReport__Exception *_field8;
struct _Plcrash__CrashReport__Signal *_field9;
struct _Plcrash__CrashReport__ProcessInfo *_field10;
struct _Plcrash__CrashReport__MachineInfo *_field11;
struct _Plcrash__CrashReport__ReportInfo *_field12;
};

struct _Plcrash__CrashReport__BinaryImage;

struct _Plcrash__CrashReport__Exception {
struct _ProtobufCMessage _field1;
char *_field2;
char *_field3;
unsigned long long _field4;
struct _Plcrash__CrashReport__Thread__StackFrame **_field5;
};

struct _Plcrash__CrashReport__MachineInfo {
struct _ProtobufCMessage _field1;
char *_field2;
struct _Plcrash__CrashReport__Processor *_field3;
unsigned int _field4;
unsigned int _field5;
};

struct _Plcrash__CrashReport__ProcessInfo {
struct _ProtobufCMessage _field1;
char *_field2;
unsigned int _field3;
char *_field4;
char *_field5;
unsigned int _field6;
int _field7;
int _field8;
unsigned long long _field9;
};

struct _Plcrash__CrashReport__Processor {
struct _ProtobufCMessage _field1;
int _field2;
int _field3;
unsigned long long _field4;
unsigned long long _field5;
};

struct _Plcrash__CrashReport__ReportInfo;

struct _Plcrash__CrashReport__Signal {
struct _ProtobufCMessage _field1;
char *_field2;
char *_field3;
unsigned long long _field4;
struct _Plcrash__CrashReport__Signal__MachException *_field5;
};

struct _Plcrash__CrashReport__Signal__MachException {
struct _ProtobufCMessage _field1;
unsigned long long _field2;
unsigned long long _field3;
unsigned long long *_field4;
};

struct _Plcrash__CrashReport__Symbol {
struct _ProtobufCMessage _field1;
char *_field2;
unsigned long long _field3;
int _field4;
unsigned long long _field5;
};

struct _Plcrash__CrashReport__Thread;

struct _Plcrash__CrashReport__Thread__StackFrame {
struct _ProtobufCMessage _field1;
unsigned long long _field2;
struct _Plcrash__CrashReport__Symbol *_field3;
};

struct _ProtobufCMessage {
struct _ProtobufCMessageDescriptor *_field1;
unsigned int _field2;
struct _ProtobufCMessageUnknownField *_field3;
};

struct _ProtobufCMessageDescriptor;

struct _ProtobufCMessageUnknownField;

struct __darwin_sigaltstack {
void *ss_sp;
unsigned long long ss_size;
int ss_flags;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
struct __tree_node_base<void *> *_field1;
};

struct _opaque_pthread_mutex_t {
long long _field1;
char _field2[56];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>;

struct cr_found_class_t {
char *_field1;
unsigned int _field2;
};

struct in_addr {
unsigned int _field1;
};

struct mutex {
struct _opaque_pthread_mutex_t _field1;
};

struct plcrash_exception_server_context {
unsigned int _field1;
unsigned int _field2;
unsigned int _field3;
unsigned int _field4;
CDUnknownFunctionPointerType _field5;
void *_field6;
struct _opaque_pthread_mutex_t _field7;
struct _opaque_pthread_cond_t {
long long _field1;
char _field2[40];
} _field8;
unsigned int _field9;
_Bool _field10;
};

struct plcrash_mach_exception_port_set {
unsigned int count;
unsigned int masks[14];
unsigned int ports[14];
int behaviors[14];
int flavors[14];
};

struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>> {
struct __tree<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>> {
struct __tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>, void *> *_field1;
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>, void *>>> {
struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
} _field2;
struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::Activity &)>>>> {
unsigned long long _field1;
} _field3;
} _field1;
};

struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>> {
struct __tree<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>> {
struct __tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>, void *> *_field1;
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>, void *>>> {
struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
} _field2;
struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::GpsSatellite &)>>>> {
unsigned long long _field1;
} _field3;
} _field1;
};

struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>> {
struct __tree<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>> {
struct __tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>, void *> *_field1;
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>, void *>>> {
struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
} _field2;
struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::LocationUpdate &)>>>> {
unsigned long long _field1;
} _field3;
} _field1;
};

struct set<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>> {
struct __tree<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>, std::__1::allocator<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>> {
struct __tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>, void *> *_field1;
struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>, void *>>> {
struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
} _field2;
struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<std::__1::function<void (const nia::hardware::SensorUpdate &)>>>> {
unsigned long long _field1;
} _field3;
} _field1;
};

struct shared_ptr<nia::game::iap::ios::IosBillingDelegate> {
struct IosBillingDelegate *__ptr_;
struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<nia::hardware::location::LocationProvider> {
struct LocationProvider *_field1;
struct __shared_weak_count *_field2;
};

struct sockaddr_in {
unsigned char _field1;
unsigned char _field2;
unsigned short _field3;
struct in_addr _field4;
char _field5[8];
};

struct timeval {
long long tv_sec;
int tv_usec;
};

#pragma mark Typedef'd Structures

typedef struct {
unsigned long long _field1;
id *_field2;
unsigned long long *_field3;
unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
char *_field1;
char *_field2;
long long _field3;
long long _field4;
long long _field5;
_Bool _field6;
_Bool _field7;
} CDStruct_4c437055;

typedef struct {
long long value;
int timescale;
unsigned int flags;
long long epoch;
} CDStruct_1b6d18a9;

// Template types
typedef struct shared_ptr<nia::game::iap::ios::IosBillingDelegate> {
struct IosBillingDelegate *__ptr_;
struct __shared_weak_count *__cntrl_;
} shared_ptr_ec83ff60;

#pragma mark -

//
// File: /Users/sc-wcobb-osx/Dropbox/Xcode/Cydia/PokemonGoAnywhere/Jailed/pokemongoanywhere/IPA/Payload/pokemongo.app/pokemongo
// UUID: 132E0125-E142-3C9A-82B2-4378C5ED3EEA
//
//                           Arch: arm64
//                 Source version: 0.0.0.0.0
//            Minimum iOS version: 8.0.0
//                    SDK version: 9.3.0
//
// Objective-C Garbage Collection: Unsupported
//

@protocol ADBannerViewDelegate <NSObject>

@optional
- (void)bannerViewActionDidFinish:(ADBannerView *)arg1;
- (_Bool)bannerViewActionShouldBegin:(ADBannerView *)arg1 willLeaveApplication:(_Bool)arg2;
- (void)bannerView:(ADBannerView *)arg1 didFailToReceiveAdWithError:(NSError *)arg2;
- (void)bannerViewDidLoadAd:(ADBannerView *)arg1;
- (void)bannerViewWillLoadAd:(ADBannerView *)arg1;
@end

@protocol ADInterstitialAdDelegate <NSObject>
- (void)interstitialAd:(ADInterstitialAd *)arg1 didFailWithError:(NSError *)arg2;
- (void)interstitialAdDidUnload:(ADInterstitialAd *)arg1;

@optional
- (void)interstitialAdActionDidFinish:(ADInterstitialAd *)arg1;
- (_Bool)interstitialAdActionShouldBegin:(ADInterstitialAd *)arg1 willLeaveApplication:(_Bool)arg2;
- (void)interstitialAdDidLoad:(ADInterstitialAd *)arg1;
- (void)interstitialAdWillLoad:(ADInterstitialAd *)arg1;
@end

@protocol AVCaptureVideoDataOutputSampleBufferDelegate <NSObject>

@optional
- (void)captureOutput:(AVCaptureOutput *)arg1 didDropSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(AVCaptureConnection *)arg3;
- (void)captureOutput:(AVCaptureOutput *)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(AVCaptureConnection *)arg3;
@end

@protocol CBCentralManagerDelegate <NSObject>
- (void)centralManagerDidUpdateState:(CBCentralManager *)arg1;

@optional
- (void)centralManager:(CBCentralManager *)arg1 didDisconnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didFailToConnectPeripheral:(CBPeripheral *)arg2 error:(NSError *)arg3;
- (void)centralManager:(CBCentralManager *)arg1 didConnectPeripheral:(CBPeripheral *)arg2;
- (void)centralManager:(CBCentralManager *)arg1 didDiscoverPeripheral:(CBPeripheral *)arg2 advertisementData:(NSDictionary *)arg3 RSSI:(NSNumber *)arg4;
- (void)centralManager:(CBCentralManager *)arg1 willRestoreState:(NSDictionary *)arg2;
@end

@protocol CBPeripheralDelegate <NSObject>

@optional
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForDescriptor:(CBDescriptor *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverDescriptorsForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateNotificationStateForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didWriteValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didUpdateValueForCharacteristic:(CBCharacteristic *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverCharacteristicsForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverIncludedServicesForService:(CBService *)arg2 error:(NSError *)arg3;
- (void)peripheral:(CBPeripheral *)arg1 didDiscoverServices:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didReadRSSI:(NSNumber *)arg2 error:(NSError *)arg3;
- (void)peripheralDidUpdateRSSI:(CBPeripheral *)arg1 error:(NSError *)arg2;
- (void)peripheral:(CBPeripheral *)arg1 didModifyServices:(NSArray *)arg2;
- (void)peripheralDidUpdateName:(CBPeripheral *)arg1;
@end

@protocol CLLocationManagerDelegate <NSObject>

@optional
- (void)locationManager:(CLLocationManager *)arg1 didVisit:(CLVisit *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didFinishDeferredUpdatesWithError:(NSError *)arg2;
- (void)locationManagerDidResumeLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManagerDidPauseLocationUpdates:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didStartMonitoringForRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(CLLocationManager *)arg1 monitoringDidFailForRegion:(CLRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didFailWithError:(NSError *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didExitRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didEnterRegion:(CLRegion *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 rangingBeaconsDidFailForRegion:(CLBeaconRegion *)arg2 withError:(NSError *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didRangeBeacons:(NSArray *)arg2 inRegion:(CLBeaconRegion *)arg3;
- (void)locationManager:(CLLocationManager *)arg1 didDetermineState:(long long)arg2 forRegion:(CLRegion *)arg3;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(CLLocationManager *)arg1;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateHeading:(CLHeading *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateLocations:(NSArray *)arg2;
- (void)locationManager:(CLLocationManager *)arg1 didUpdateToLocation:(CLLocation *)arg2 fromLocation:(CLLocation *)arg3;
@end

@protocol CRNetStatObserver
- (void)logNetworkRequest:(CRRequestState *)arg1;
@end

@protocol GKGameCenterControllerDelegate <NSObject>
- (void)gameCenterViewControllerDidFinish:(GKGameCenterViewController *)arg1;
@end

@protocol GTMFetcherAuthorizationProtocol <NSObject>
@property(readonly) NSString *userEmail;
- (_Bool)isAuthorizedRequest:(NSURLRequest *)arg1;
- (_Bool)isAuthorizingRequest:(NSURLRequest *)arg1;
- (void)stopAuthorizationForRequest:(NSURLRequest *)arg1;
- (void)stopAuthorization;
- (void)authorizeRequest:(NSMutableURLRequest *)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;

@optional
@property __weak id <GTMSessionFetcherServiceProtocol> fetcherService;
@property _Bool shouldAuthorizeAllRequests;
@property(readonly) _Bool canAuthorize;
- (_Bool)primeForRefresh;
- (void)authorizeRequest:(NSMutableURLRequest *)arg1 completionHandler:(void (^)(NSError *))arg2;
@end

@protocol GTMSessionFetcherServiceProtocol <NSObject>
@property(readonly) NSOperationQueue *delegateQueue;
@property _Bool reuseSession;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue;
- (id <NSURLSessionDelegate>)sessionDelegate;
- (NSURLSession *)sessionForFetcherCreation;
- (NSURLSession *)session;
- (_Bool)isDelayingFetcher:(GTMSessionFetcher *)arg1;
- (GTMSessionFetcher *)fetcherWithRequest:(NSURLRequest *)arg1;
- (void)fetcherDidStop:(GTMSessionFetcher *)arg1;
- (void)fetcherDidBeginFetching:(GTMSessionFetcher *)arg1;
- (void)fetcherDidCreateSession:(GTMSessionFetcher *)arg1;
- (_Bool)fetcherShouldBeginFetching:(GTMSessionFetcher *)arg1;
@end

@protocol LifeCycleListener <NSObject>

@optional
- (void)willTerminate:(NSNotification *)arg1;
- (void)willEnterForeground:(NSNotification *)arg1;
- (void)didEnterBackground:(NSNotification *)arg1;
- (void)willResignActive:(NSNotification *)arg1;
- (void)didBecomeActive:(NSNotification *)arg1;
- (void)didFinishLaunching:(NSNotification *)arg1;
@end

@protocol NSCoding
- (id)initWithCoder:(NSCoder *)arg1;
- (void)encodeWithCoder:(NSCoder *)arg1;
@end

@protocol NSCopying
- (id)copyWithZone:(struct _NSZone *)arg1;
@end

@protocol NSFastEnumeration
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
@end

@protocol NSObject
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(readonly) unsigned long long hash;
- (struct _NSZone *)zone;
- (unsigned long long)retainCount;
- (id)autorelease;
- (oneway void)release;
- (id)retain;
- (_Bool)respondsToSelector:(SEL)arg1;
- (_Bool)conformsToProtocol:(Protocol *)arg1;
- (_Bool)isMemberOfClass:(Class)arg1;
- (_Bool)isKindOfClass:(Class)arg1;
- (_Bool)isProxy;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2 withObject:(id)arg3;
- (id)performSelector:(SEL)arg1 withObject:(id)arg2;
- (id)performSelector:(SEL)arg1;
- (id)self;
- (Class)class;
- (_Bool)isEqual:(id)arg1;

@optional
@property(readonly, copy) NSString *debugDescription;
@end

@protocol NSURLConnectionDataDelegate <NSURLConnectionDelegate>

@optional
- (void)connectionDidFinishLoading:(NSURLConnection *)arg1;
- (NSCachedURLResponse *)connection:(NSURLConnection *)arg1 willCacheResponse:(NSCachedURLResponse *)arg2;
- (void)connection:(NSURLConnection *)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (NSInputStream *)connection:(NSURLConnection *)arg1 needNewBodyStream:(NSURLRequest *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveData:(NSData *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveResponse:(NSURLResponse *)arg2;
- (NSURLRequest *)connection:(NSURLConnection *)arg1 willSendRequest:(NSURLRequest *)arg2 redirectResponse:(NSURLResponse *)arg3;
@end

@protocol NSURLConnectionDelegate <NSObject>

@optional
- (void)connection:(NSURLConnection *)arg1 didCancelAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (void)connection:(NSURLConnection *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connection:(NSURLConnection *)arg1 canAuthenticateAgainstProtectionSpace:(NSURLProtectionSpace *)arg2;
- (void)connection:(NSURLConnection *)arg1 willSendRequestForAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2;
- (_Bool)connectionShouldUseCredentialStorage:(NSURLConnection *)arg1;
- (void)connection:(NSURLConnection *)arg1 didFailWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDataDelegate <NSURLSessionTaskDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 willCacheResponse:(NSCachedURLResponse *)arg3 completionHandler:(void (^)(NSCachedURLResponse *))arg4;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveData:(NSData *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeStreamTask:(NSURLSessionStreamTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didBecomeDownloadTask:(NSURLSessionDownloadTask *)arg3;
- (void)URLSession:(NSURLSession *)arg1 dataTask:(NSURLSessionDataTask *)arg2 didReceiveResponse:(NSURLResponse *)arg3 completionHandler:(void (^)(long long))arg4;
@end

@protocol NSURLSessionDelegate <NSObject>

@optional
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(NSURLSession *)arg1;
- (void)URLSession:(NSURLSession *)arg1 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)URLSession:(NSURLSession *)arg1 didBecomeInvalidWithError:(NSError *)arg2;
@end

@protocol NSURLSessionDownloadDelegate <NSURLSessionTaskDelegate>
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didFinishDownloadingToURL:(NSURL *)arg3;

@optional
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(NSURLSession *)arg1 downloadTask:(NSURLSessionDownloadTask *)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
@end

@protocol NSURLSessionTaskDelegate <NSURLSessionDelegate>

@optional
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didCompleteWithError:(NSError *)arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 needNewBodyStream:(void (^)(NSInputStream *))arg3;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 didReceiveChallenge:(NSURLAuthenticationChallenge *)arg3 completionHandler:(void (^)(long long, NSURLCredential *))arg4;
- (void)URLSession:(NSURLSession *)arg1 task:(NSURLSessionTask *)arg2 willPerformHTTPRedirection:(NSHTTPURLResponse *)arg3 newRequest:(NSURLRequest *)arg4 completionHandler:(void (^)(NSURLRequest *))arg5;
@end

@protocol PLCrashReportFormatter
- (NSData *)formatReport:(UnityPLCrashReport *)arg1 error:(id *)arg2;
@end

@protocol RenderPluginDelegate <LifeCycleListener, NSObject>
- (void)mainDisplayInited:(struct UnityDisplaySurfaceBase *)arg1;

@optional
- (void)onFrameResolved;
- (void)onAfterMainDisplaySurfaceRecreate;
- (void)onBeforeMainDisplaySurfaceRecreate:(struct RenderingSurfaceParams *)arg1;
@end

@protocol SKPaymentTransactionObserver <NSObject>
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedTransactions:(NSArray *)arg2;

@optional
- (void)paymentQueue:(SKPaymentQueue *)arg1 updatedDownloads:(NSArray *)arg2;
- (void)paymentQueueRestoreCompletedTransactionsFinished:(SKPaymentQueue *)arg1;
- (void)paymentQueue:(SKPaymentQueue *)arg1 restoreCompletedTransactionsFailedWithError:(NSError *)arg2;
- (void)paymentQueue:(SKPaymentQueue *)arg1 removedTransactions:(NSArray *)arg2;
@end

@protocol SKProductsRequestDelegate <SKRequestDelegate>
- (void)productsRequest:(SKProductsRequest *)arg1 didReceiveResponse:(SKProductsResponse *)arg2;
@end

@protocol SKRequestDelegate <NSObject>

@optional
- (void)request:(SKRequest *)arg1 didFailWithError:(NSError *)arg2;
- (void)requestDidFinish:(SKRequest *)arg1;
@end

@protocol SKStoreProductViewControllerDelegate <NSObject>

@optional
- (void)productViewControllerDidFinish:(SKStoreProductViewController *)arg1;
@end

@protocol UIApplicationDelegate <NSObject>

@optional
@property(retain, nonatomic) UIWindow *window;
- (void)application:(UIApplication *)arg1 didUpdateUserActivity:(NSUserActivity *)arg2;
- (void)application:(UIApplication *)arg1 didFailToContinueUserActivityWithType:(NSString *)arg2 error:(NSError *)arg3;
- (_Bool)application:(UIApplication *)arg1 continueUserActivity:(NSUserActivity *)arg2 restorationHandler:(void (^)(NSArray *))arg3;
- (_Bool)application:(UIApplication *)arg1 willContinueUserActivityWithType:(NSString *)arg2;
- (void)application:(UIApplication *)arg1 didDecodeRestorableStateWithCoder:(NSCoder *)arg2;
- (void)application:(UIApplication *)arg1 willEncodeRestorableStateWithCoder:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldRestoreApplicationState:(NSCoder *)arg2;
- (_Bool)application:(UIApplication *)arg1 shouldSaveApplicationState:(NSCoder *)arg2;
- (UIViewController *)application:(UIApplication *)arg1 viewControllerWithRestorationIdentifierPath:(NSArray *)arg2 coder:(NSCoder *)arg3;
- (_Bool)application:(UIApplication *)arg1 shouldAllowExtensionPointIdentifier:(NSString *)arg2;
- (unsigned long long)application:(UIApplication *)arg1 supportedInterfaceOrientationsForWindow:(UIWindow *)arg2;
- (void)applicationProtectedDataDidBecomeAvailable:(UIApplication *)arg1;
- (void)applicationProtectedDataWillBecomeUnavailable:(UIApplication *)arg1;
- (void)applicationWillEnterForeground:(UIApplication *)arg1;
- (void)applicationDidEnterBackground:(UIApplication *)arg1;
- (void)applicationShouldRequestHealthAuthorization:(UIApplication *)arg1;
- (void)application:(UIApplication *)arg1 handleWatchKitExtensionRequest:(NSDictionary *)arg2 reply:(void (^)(NSDictionary *))arg3;
- (void)application:(UIApplication *)arg1 handleEventsForBackgroundURLSession:(NSString *)arg2 completionHandler:(void (^)(void))arg3;
- (void)application:(UIApplication *)arg1 performActionForShortcutItem:(UIApplicationShortcutItem *)arg2 completionHandler:(void (^)(_Bool))arg3;
- (void)application:(UIApplication *)arg1 performFetchWithCompletionHandler:(void (^)(unsigned long long))arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2 fetchCompletionHandler:(void (^)(unsigned long long))arg3;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forRemoteNotification:(NSDictionary *)arg3 withResponseInfo:(NSDictionary *)arg4 completionHandler:(void (^)(void))arg5;
- (void)application:(UIApplication *)arg1 handleActionWithIdentifier:(NSString *)arg2 forLocalNotification:(UILocalNotification *)arg3 completionHandler:(void (^)(void))arg4;
- (void)application:(UIApplication *)arg1 didReceiveLocalNotification:(UILocalNotification *)arg2;
- (void)application:(UIApplication *)arg1 didReceiveRemoteNotification:(NSDictionary *)arg2;
- (void)application:(UIApplication *)arg1 didFailToRegisterForRemoteNotificationsWithError:(NSError *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(NSData *)arg2;
- (void)application:(UIApplication *)arg1 didRegisterUserNotificationSettings:(UIUserNotificationSettings *)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarFrame:(struct CGRect)arg2;
- (void)application:(UIApplication *)arg1 didChangeStatusBarOrientation:(long long)arg2;
- (void)application:(UIApplication *)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)applicationSignificantTimeChange:(UIApplication *)arg1;
- (void)applicationWillTerminate:(UIApplication *)arg1;
- (void)applicationDidReceiveMemoryWarning:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 options:(NSDictionary *)arg3;
- (_Bool)application:(UIApplication *)arg1 openURL:(NSURL *)arg2 sourceApplication:(NSString *)arg3 annotation:(id)arg4;
- (_Bool)application:(UIApplication *)arg1 handleOpenURL:(NSURL *)arg2;
- (void)applicationWillResignActive:(UIApplication *)arg1;
- (void)applicationDidBecomeActive:(UIApplication *)arg1;
- (_Bool)application:(UIApplication *)arg1 didFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (_Bool)application:(UIApplication *)arg1 willFinishLaunchingWithOptions:(NSDictionary *)arg2;
- (void)applicationDidFinishLaunching:(UIApplication *)arg1;
@end

@protocol UINavigationControllerDelegate <NSObject>

@optional
- (id <UIViewControllerAnimatedTransitioning>)navigationController:(UINavigationController *)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(UIViewController *)arg3 toViewController:(UIViewController *)arg4;
- (id <UIViewControllerInteractiveTransitioning>)navigationController:(UINavigationController *)arg1 interactionControllerForAnimationController:(id <UIViewControllerAnimatedTransitioning>)arg2;
- (long long)navigationControllerPreferredInterfaceOrientationForPresentation:(UINavigationController *)arg1;
- (unsigned long long)navigationControllerSupportedInterfaceOrientations:(UINavigationController *)arg1;
- (void)navigationController:(UINavigationController *)arg1 didShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
- (void)navigationController:(UINavigationController *)arg1 willShowViewController:(UIViewController *)arg2 animated:(_Bool)arg3;
@end

@protocol UIScrollViewDelegate <NSObject>

@optional
- (void)scrollViewDidScrollToTop:(UIScrollView *)arg1;
- (_Bool)scrollViewShouldScrollToTop:(UIScrollView *)arg1;
- (void)scrollViewDidEndZooming:(UIScrollView *)arg1 withView:(UIView *)arg2 atScale:(double)arg3;
- (void)scrollViewWillBeginZooming:(UIScrollView *)arg1 withView:(UIView *)arg2;
- (UIView *)viewForZoomingInScrollView:(UIScrollView *)arg1;
- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)arg1;
- (void)scrollViewDidEndDecelerating:(UIScrollView *)arg1;
- (void)scrollViewWillBeginDecelerating:(UIScrollView *)arg1;
- (void)scrollViewDidEndDragging:(UIScrollView *)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(UIScrollView *)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(UIScrollView *)arg1;
- (void)scrollViewDidZoom:(UIScrollView *)arg1;
- (void)scrollViewDidScroll:(UIScrollView *)arg1;
@end

@protocol UITextFieldDelegate <NSObject>

@optional
- (_Bool)textFieldShouldReturn:(UITextField *)arg1;
- (_Bool)textFieldShouldClear:(UITextField *)arg1;
- (_Bool)textField:(UITextField *)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(NSString *)arg3;
- (void)textFieldDidEndEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldEndEditing:(UITextField *)arg1;
- (void)textFieldDidBeginEditing:(UITextField *)arg1;
- (_Bool)textFieldShouldBeginEditing:(UITextField *)arg1;
@end

@protocol UITextViewDelegate <NSObject, UIScrollViewDelegate>

@optional
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithTextAttachment:(NSTextAttachment *)arg2 inRange:(struct _NSRange)arg3;
- (_Bool)textView:(UITextView *)arg1 shouldInteractWithURL:(NSURL *)arg2 inRange:(struct _NSRange)arg3;
- (void)textViewDidChangeSelection:(UITextView *)arg1;
- (void)textViewDidChange:(UITextView *)arg1;
- (_Bool)textView:(UITextView *)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(NSString *)arg3;
- (void)textViewDidEndEditing:(UITextView *)arg1;
- (void)textViewDidBeginEditing:(UITextView *)arg1;
- (_Bool)textViewShouldEndEditing:(UITextView *)arg1;
- (_Bool)textViewShouldBeginEditing:(UITextView *)arg1;
@end

@protocol UIViewControllerAnimatedTransitioning <NSObject>
- (void)animateTransition:(id <UIViewControllerContextTransitioning>)arg1;
- (double)transitionDuration:(id <UIViewControllerContextTransitioning>)arg1;

@optional
- (void)animationEnded:(_Bool)arg1;
@end

@protocol UIViewControllerTransitioningDelegate <NSObject>

@optional
- (UIPresentationController *)presentationControllerForPresentedViewController:(UIViewController *)arg1 presentingViewController:(UIViewController *)arg2 sourceViewController:(UIViewController *)arg3;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForDismissal:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerInteractiveTransitioning>)interactionControllerForPresentation:(id <UIViewControllerAnimatedTransitioning>)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForDismissedController:(UIViewController *)arg1;
- (id <UIViewControllerAnimatedTransitioning>)animationControllerForPresentedController:(UIViewController *)arg1 presentingController:(UIViewController *)arg2 sourceController:(UIViewController *)arg3;
@end

@protocol UIWebViewDelegate <NSObject>

@optional
- (void)webView:(UIWebView *)arg1 didFailLoadWithError:(NSError *)arg2;
- (void)webViewDidFinishLoad:(UIWebView *)arg1;
- (void)webViewDidStartLoad:(UIWebView *)arg1;
- (_Bool)webView:(UIWebView *)arg1 shouldStartLoadWithRequest:(NSURLRequest *)arg2 navigationType:(long long)arg3;
@end

@protocol USAction <NSObject>
+ (NSString *)type;
@property(readonly, copy, nonatomic) CDUnknownBlockType handler;
@property(readonly, nonatomic) __weak USActionMap *map;
@property(readonly, nonatomic) NSDictionary *parameters;
- (void)executeWithCompletionBlock:(void (^)(void))arg1;
@end

@protocol USActionFactoryInterface <NSObject>
- (id <USAction>)actionWithDictionary:(NSDictionary *)arg1 map:(USActionMap *)arg2;
@end

@protocol USActionHandlerDelegate <NSObject>
- (_Bool)shouldExecuteActionOfType:(NSString *)arg1 fromMap:(USActionMap *)arg2;
@end

@protocol USActionHandlerRegistry <NSObject>
- (void)registerHandler:(void (^)(id <USAction>, USActionMap *, void (^)(void)))arg1 forActionType:(NSString *)arg2;
@end

@protocol USActionMapDelegate <NSObject>

@optional
- (void)actionMapDidFinishExecution:(USActionMap *)arg1;
@end

@protocol USActionMapManagerInterface <NSObject>
@property(readonly) id <USActionHandlerRegistry> handlerRegistry;
- (void)removeObserver:(id <USActionMapManagerObserver>)arg1;
- (void)addObserver:(id <USActionMapManagerObserver>)arg1;
@end

@protocol USActionMapManagerObserver <NSObject>

@optional
- (void)actionMapManager:(id <USActionMapManagerInterface>)arg1 didDestroyActionMap:(USActionMap *)arg2;
- (void)actionMapManager:(id <USActionMapManagerInterface>)arg1 didCreateActionMap:(USActionMap *)arg2;
@end

@protocol USAnalyticsInterface <NSObject>
- (void)record:(USEvent *)arg1;
- (id)initWithDataStore:(id <UpsightDataStoreInterface>)arg1;
@end

@protocol USBatcherDelegate <NSObject>
- (void)batcher:(USBatcher *)arg1 didFailEventsDelivery:(NSArray *)arg2 error:(NSError *)arg3;
- (void)batcher:(USBatcher *)arg1 didDeliverEvents:(NSArray *)arg2 response:(NSData *)arg3;
@end

@protocol USBillboard <NSObject>
@property(readonly, getter=isContentReady) _Bool contentReady;
@property __weak id <USBillboardDelegate> delegate;
@property(readonly, getter=isPresenting) _Bool presenting;
@property(readonly, copy) NSString *scope;
@end

@protocol USBillboardDelegate <NSObject>
- (UIViewController *)presentingViewControllerForBillboard:(id <USBillboard>)arg1;

@optional
- (void)billboard:(id <USBillboard>)arg1 didReceivePurchase:(id <USPurchase>)arg2;
- (void)billboard:(id <USBillboard>)arg1 didReceiveReward:(id <USReward>)arg2;
- (void)billboardDidDismiss:(id <USBillboard>)arg1;
- (void)billboardWillDismiss:(id <USBillboard>)arg1;
- (void)billboardDidAppear:(id <USBillboard>)arg1;
- (void)billboardWillAppear:(id <USBillboard>)arg1;
@end

@protocol USBillboardManager <NSObject>
- (id <USBillboard>)billboardForScope:(NSString *)arg1;
@end

@protocol USConfigurationInterface <NSObject>
+ (NSArray *)requiredKeys;
+ (_Bool)isValidConfigurationDictionary:(NSDictionary *)arg1;
@property(readonly, nonatomic) NSDictionary *configurationDictionary;
- (id)initWithConfigurationDictionary:(NSDictionary *)arg1;
- (_Bool)isEqualToConfiguration:(id <USConfigurationInterface>)arg1;
@end

@protocol USContentUnitBillboardDataSource <NSObject>
- (_Bool)isContentAvailableForBillboard:(USContentUnitBillboard *)arg1;
@end

@protocol USContentUnitViewControllerCacheDelegate <NSObject>

@optional
- (void)cache:(USContentUnitViewControllerCache *)arg1 didRemoveController:(USContentUnitViewController *)arg2;
- (void)cache:(USContentUnitViewControllerCache *)arg1 didAddController:(USContentUnitViewController *)arg2;
@end

@protocol USContentUnitViewControllerDelegate <NSObject>

@optional
- (void)contentUnitViewControllerDidDismiss:(USContentUnitViewController *)arg1;
- (void)contentUnitViewControllerWillDismiss:(USContentUnitViewController *)arg1;
@end

@protocol USDataBundle <NSCoding>
@property(readonly, nonatomic) NSString *dataString;
@property(readonly, nonatomic) NSString *formatString;
@end

@protocol USDataSenderInterface <NSObject>
- (void)sendData:(NSData *)arg1 toURL:(NSURL *)arg2 completionHandler:(void (^)(NSData *, NSError *))arg3 queue:(NSOperationQueue *)arg4;
@end

@protocol USDeliveryQueueDelegate <NSObject>
- (void)deliveryQueue:(id <USDeliveryQueueInterface>)arg1 didFailPacketsDelivery:(NSArray *)arg2 error:(NSError *)arg3;
- (void)deliveryQueue:(id <USDeliveryQueueInterface>)arg1 didDeliverPackets:(NSArray *)arg2 response:(NSData *)arg3;
@end

@protocol USDeliveryQueueInterface
@property(nonatomic) __weak id <USDeliveryQueueDelegate> delegate;
@property(readonly, nonatomic) NSString *name;
@property(readonly, nonatomic) USQueueConfiguration *queueConfiguration;
- (void)drain;
- (void)enqueuePacket:(USDeliveryPacket *)arg1;
@end

@protocol USEventRouterDelegate <NSObject>
- (void)eventRouterDidDrain:(USEventRouter *)arg1;
- (void)eventRouter:(USEventRouter *)arg1 didFailWithError:(NSError *)arg2 items:(NSArray *)arg3;
- (void)eventRouter:(USEventRouter *)arg1 didDeliverItems:(NSArray *)arg2 response:(NSData *)arg3;
@end

@protocol USManagedVariableObserver <NSObject>
@property(nonatomic) __weak id <USManagedVariableObserverDelegate> delegate;
@end

@protocol USManagedVariableObserverDelegate <NSObject>

@optional
- (void)observer:(id <USManagedVariableObserver>)arg1 didSynchronizeManagedVariables:(NSArray *)arg2;
- (_Bool)observerShouldSynchronizeManagedVariables:(id <USManagedVariableObserver>)arg1;
@end

@protocol USPurchase <NSObject>
@property(readonly, nonatomic) unsigned long long quantity;
@property(readonly, nonatomic) NSString *productIdentifier;
@end

@protocol USReward <NSObject>
@property(readonly, nonatomic) NSData *signatureData;
@property(readonly, nonatomic) unsigned long long quantity;
@property(readonly, nonatomic) NSString *productIdentifier;
@end

@protocol UnityViewControllerListener <NSObject>

@optional
- (void)interfaceDidChangeOrientation:(NSNotification *)arg1;
- (void)interfaceWillChangeOrientation:(NSNotification *)arg1;
- (void)viewWillAppear:(NSNotification *)arg1;
- (void)viewDidAppear:(NSNotification *)arg1;
- (void)viewWillDisappear:(NSNotification *)arg1;
- (void)viewDidDisappear:(NSNotification *)arg1;
- (void)viewDidLayoutSubviews:(NSNotification *)arg1;
@end

@protocol UnityWWWRequestProvider <NSObject>
+ (NSMutableURLRequest *)allocRequestForHTTPMethod:(NSString *)arg1 url:(NSURL *)arg2 headers:(NSDictionary *)arg3;
@end

@protocol UpsightDataStoreInterface <NSObject>
- (NSArray *)queryObjects:(NSString *)arg1 predicate:(NSPredicate *)arg2;
- (void)removeObjects:(NSArray *)arg1 completion:(void (^)(NSError *, NSArray *))arg2;
- (void)remove:(UpsightStorableObject *)arg1 completion:(void (^)(NSError *, UpsightStorableObject *))arg2;
- (void)store:(UpsightStorableObject *)arg1 completion:(void (^)(NSError *, UpsightStorableObject *))arg2;
- (void)removeDefaultObserver:(NSObject *)arg1;
- (void)removeObserver:(NSObject *)arg1 type:(NSString *)arg2 predicate:(NSPredicate *)arg3;
- (void)removeObserver:(NSObject *)arg1 type:(NSString *)arg2;
- (void)addDefaultObserver:(NSObject *)arg1 selector:(SEL)arg2;
- (void)addObserver:(NSObject *)arg1 selector:(SEL)arg2 type:(NSString *)arg3 queue:(NSOperationQueue *)arg4 predicate:(NSPredicate *)arg5;
- (void)addObserver:(NSObject *)arg1 selector:(SEL)arg2 type:(NSString *)arg3 queue:(NSOperationQueue *)arg4;
- (void)addObserver:(NSObject *)arg1 selector:(SEL)arg2 type:(NSString *)arg3;
@end

@protocol UpsightDefaultsImpl <NSObject>
- (void)removeAllDefaults;
- (void)removeDefaultForKey:(NSString *)arg1;
- (void)setDefault:(id <NSCoding>)arg1 forKey:(NSString *)arg2;
- (id)defaultForKey:(NSString *)arg1;
@end

@protocol VideoPlayerDelegate <NSObject>
- (void)onPlayerError:(NSError *)arg1;
- (void)onPlayerDidFinishPlayingVideo;
- (void)onPlayerReady;
@end

@protocol WCSessionDelegate <NSObject>

@optional
- (void)session:(WCSession *)arg1 didReceiveFile:(WCSessionFile *)arg2;
- (void)session:(WCSession *)arg1 didFinishFileTransfer:(WCSessionFileTransfer *)arg2 error:(NSError *)arg3;
- (void)session:(WCSession *)arg1 didReceiveUserInfo:(NSDictionary *)arg2;
- (void)session:(WCSession *)arg1 didFinishUserInfoTransfer:(WCSessionUserInfoTransfer *)arg2 error:(NSError *)arg3;
- (void)session:(WCSession *)arg1 didReceiveApplicationContext:(NSDictionary *)arg2;
- (void)session:(WCSession *)arg1 didReceiveMessageData:(NSData *)arg2 replyHandler:(void (^)(NSData *))arg3;
- (void)session:(WCSession *)arg1 didReceiveMessageData:(NSData *)arg2;
- (void)session:(WCSession *)arg1 didReceiveMessage:(NSDictionary *)arg2 replyHandler:(void (^)(NSDictionary *))arg3;
- (void)session:(WCSession *)arg1 didReceiveMessage:(NSDictionary *)arg2;
- (void)sessionReachabilityDidChange:(WCSession *)arg1;
- (void)sessionWatchStateDidChange:(WCSession *)arg1;
@end

@protocol WKNavigationDelegate <NSObject>

@optional
- (void)webViewWebContentProcessDidTerminate:(WKWebView *)arg1;
- (void)webView:(WKWebView *)arg1 didReceiveAuthenticationChallenge:(NSURLAuthenticationChallenge *)arg2 completionHandler:(void (^)(long long, NSURLCredential *))arg3;
- (void)webView:(WKWebView *)arg1 didFailNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didFinishNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didCommitNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didFailProvisionalNavigation:(WKNavigation *)arg2 withError:(NSError *)arg3;
- (void)webView:(WKWebView *)arg1 didReceiveServerRedirectForProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 didStartProvisionalNavigation:(WKNavigation *)arg2;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationResponse:(WKNavigationResponse *)arg2 decisionHandler:(void (^)(long long))arg3;
- (void)webView:(WKWebView *)arg1 decidePolicyForNavigationAction:(WKNavigationAction *)arg2 decisionHandler:(void (^)(long long))arg3;
@end

@protocol __ARCLiteKeyedSubscripting__
- (void)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (id)objectForKeyedSubscript:(id)arg1;
@end

@interface UnityWWWConnectionDelegate : NSObject <NSURLConnectionDataDelegate>
{
void *_udata;
NSMutableURLRequest *_request;
NSURLConnection *_connection;
NSURL *_url;
NSString *_user;
NSString *_password;
NSString *_responseHeader;
long long _status;
unsigned long long _estimatedLength;
unsigned long long _dataRecievd;
int _retryCount;
_Bool shouldAbort;
_Bool _manuallyHandleRedirect;
NSData *_data;
NSCondition *_condition;
}

+ (id)newRequestForHTTPMethod:(id)arg1 url:(id)arg2 headers:(id)arg3;
+ (id)newDelegateWithCStringURL:(const char *)arg1 udata:(void *)arg2;
+ (id)newDelegateWithURL:(id)arg1 udata:(void *)arg2;
@property(nonatomic) _Bool manuallyHandleRedirect; // @synthesize manuallyHandleRedirect=_manuallyHandleRedirect;
@property(retain, nonatomic) NSCondition *condition; // @synthesize condition=_condition;
@property(readonly, retain, nonatomic) NSData *data; // @synthesize data=_data;
@property(nonatomic) _Bool shouldAbort; // @synthesize shouldAbort;
@property(nonatomic) void *udata; // @synthesize udata=_udata;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(retain, nonatomic) NSMutableURLRequest *request; // @synthesize request=_request;
@property(retain, nonatomic) NSString *password; // @synthesize password=_password;
@property(retain, nonatomic) NSString *user; // @synthesize user=_user;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
- (void).cxx_destruct;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (_Bool)connection:(id)arg1 handleAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)handleResponse:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)cleanup;
- (id)initWithURL:(id)arg1 udata:(void *)arg2;
- (id)extractUserPassFromUrl:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UnityWWWConnectionSelfSignedCertDelegate : UnityWWWConnectionDelegate
{
}

- (_Bool)connection:(id)arg1 handleAuthenticationChallenge:(id)arg2;

@end

@interface UnityWWWRequestDefaultProvider : NSObject <UnityWWWRequestProvider>
{
}

+ (id)allocRequestForHTTPMethod:(id)arg1 url:(id)arg2 headers:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LocationServiceDelegate : NSObject <CLLocationManagerDelegate>
{
}

- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (_Bool)locationManagerShouldDisplayHeadingCalibration:(id)arg1;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface SplashScreen : UIImageView
{
UIImageView *m_ImageView;
UIView *m_XibView;
}

+ (id)Instance;
- (void).cxx_destruct;
- (void)FreeSubviews;
- (void)layoutSubviews;
- (void)updateOrientation:(int)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface SplashScreenController : UnityViewControllerBase
{
}

+ (id)Instance;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;
- (void)create:(id)arg1;
- (id)init;

@end

@interface ActivityIndicator : UIActivityIndicatorView
{
UIView *_parent;
}

- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)show:(id)arg1;

@end

@interface KeyboardDelegate : NSObject <UITextFieldDelegate, UITextViewDelegate>
{
UITextView *textView;
UIToolbar *viewToolbar;
NSArray *viewToolbarItems;
UITextField *textField;
UIToolbar *fieldToolbar;
NSArray *fieldToolbarItems;
UIView *inputView;
UIView *editView;
struct CGRect _area;
NSString *initialText;
long long keyboardType;
_Bool _multiline;
_Bool _inputHidden;
_Bool _active;
_Bool _done;
_Bool _canceled;
_Bool _rotating;
NSString *text;
struct CGRect area;
}

+ (void)FinishReorientation;
+ (void)StartReorientation;
+ (id)Instance;
+ (void)Initialize;
@property(readonly, nonatomic) _Bool canceled; // @synthesize canceled=_canceled;
@property(readonly, nonatomic) _Bool done; // @synthesize done=_done;
@property(readonly, nonatomic) _Bool active; // @synthesize active=_active;
- (void).cxx_destruct;
- (void)shouldHideInput:(_Bool)arg1;
@property(retain, nonatomic, getter=getText, setter=setText:) NSString *text; // @synthesize text;
- (void)setTextWorkaround:(id)arg1 text:(id)arg2;
@property(readonly, nonatomic, getter=queryArea) struct CGRect area; // @synthesize area;
- (void)positionInput:(struct CGRect)arg1 x:(float)arg2 y:(float)arg3;
- (void)updateInputHidden;
- (void)hide;
- (void)show;
- (void)systemHideKeyboard;
- (void)hideUI;
- (void)showUI;
- (void)setKeyboardParams:(CDStruct_4c437055)arg1;
- (void)setTextInputTraits:(id)arg1 withParam:(CDStruct_4c437055)arg2 withCap:(long long)arg3;
- (id)init;
- (struct CreateToolbarResult)createToolbarWithView:(id)arg1;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardDidShow:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)textInputCancel:(id)arg1;
- (void)textInputDone:(id)arg1;
- (_Bool)textFieldShouldReturn:(id)arg1;
- (_Bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange)arg2 replacementString:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface DisplayConnection : NSObject
{
_Bool _needRecreateSurface;
struct CGSize _requestedRenderingSize;
UIScreen *_screen;
UIWindow *_window;
UIView *_view;
struct CGSize _screenSize;
struct UnityDisplaySurfaceBase *_surface;
struct UnityDisplaySurfaceGLES *surfaceGLES;
struct UnityDisplaySurfaceMTL *surfaceMTL;
}

@property(readonly, nonatomic) struct UnityDisplaySurfaceBase *surface; // @synthesize surface=_surface;
@property(readonly, nonatomic) struct CGSize screenSize; // @synthesize screenSize=_screenSize;
@property(readonly, copy, nonatomic) UIView *view; // @synthesize view=_view;
@property(readonly, copy, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(readonly, copy, nonatomic) UIScreen *screen; // @synthesize screen=_screen;
- (void).cxx_destruct;
- (void)requestRenderingResolution:(struct CGSize)arg1;
- (void)present;
- (void)dealloc;
- (void)recreateSurface:(struct RenderingSurfaceParams)arg1;
- (void)initRendering;
- (void)shouldShowWindow:(_Bool)arg1;
- (void)createView:(_Bool)arg1 showRightAway:(_Bool)arg2;
- (void)createView:(_Bool)arg1;
- (void)createWithWindow:(id)arg1 andView:(id)arg2;
- (id)init:(id)arg1;
@property(readonly, nonatomic) struct UnityDisplaySurfaceMTL *surfaceMTL; // @synthesize surfaceMTL;
@property(readonly, nonatomic) struct UnityDisplaySurfaceGLES *surfaceGLES; // @synthesize surfaceGLES;

@end

@interface DisplayManager : NSObject
{
NSMapTable *_displayConnection;
DisplayConnection *_mainDisplay;
unsigned long long displayCount;
}

+ (id)Instance;
+ (void)Initialize;
@property(readonly, nonatomic) DisplayConnection *mainDisplay; // @synthesize mainDisplay=_mainDisplay;
- (void).cxx_destruct;
- (void)screenDidDisconnect:(id)arg1;
- (void)screenDidConnect:(id)arg1;
- (void)present;
- (void)endFrameRendering;
- (void)startFrameRendering;
- (void)enumerateDisplaysWithBlock:(CDUnknownBlockType)arg1;
- (void)updateDisplayListInUnity;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)display:(id)arg1;
- (_Bool)displayAvailable:(id)arg1;
- (id)init;
- (void)registerScreen:(id)arg1;
@property(readonly, nonatomic) unsigned long long displayCount; // @synthesize displayCount;

@end

@interface MPVideoPlayback : NSObject <UnityViewControllerListener>
{
MPMoviePlayerController *moviePlayer;
CancelOnTouchView *cancelOnTouchView;
UIColor *bgColor;
long long controlMode;
long long scalingMode;
_Bool cancelOnTouch;
}

- (void).cxx_destruct;
- (void)finish;
- (void)viewDidLayoutSubviews:(id)arg1;
- (void)audioRouteChanged:(id)arg1;
- (void)moviePlayBackNaturalSizeAvailable:(id)arg1;
- (void)moviePlayBackMediaTypesAvailable:(id)arg1;
- (void)moviePlayBackSourceTypeAvailable:(id)arg1;
- (void)moviePlayBackDidFinish:(id)arg1;
- (void)actuallyStartTheMovie:(id)arg1;
- (void)dealloc;
- (id)initAndPlay:(id)arg1 bgColor:(id)arg2 controls:(long long)arg3 scaling:(long long)arg4 cancelOnTouch:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface AVKitVideoPlayback : NSObject <VideoPlayerDelegate, UIViewControllerTransitioningDelegate>
{
AVPlayerViewController *videoViewController;
VideoPlayer *videoPlayer;
CancelOnTouchView *cancelOnTouchView;
UIColor *bgColor;
NSString *videoGravity;
_Bool showControls;
_Bool cancelOnTouch;
}

+ (_Bool)IsSupported;
+ (void)InitClass;
- (void).cxx_destruct;
- (void)finish;
- (id)animationControllerForDismissedController:(id)arg1;
- (void)onPlayerError:(id)arg1;
- (void)onPlayerDidFinishPlayingVideo;
- (void)onPlayerReady;
- (void)handleTap:(id)arg1;
- (void)actuallyStartTheMovie:(id)arg1;
- (void)dealloc;
- (id)initAndPlay:(id)arg1 bgColor:(id)arg2 showControls:(_Bool)arg3 videoGravity:(id)arg4 cancelOnTouch:(_Bool)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CancelOnTouchView : UIView
{
CDUnknownBlockType onTouch;
}

- (void).cxx_destruct;
- (void)onUnityUpdateViewLayout;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)initWithOnTouchBlock:(CDUnknownBlockType)arg1;

@end

@interface VideoPlayerView : UIView
{
}

+ (Class)layerClass;
- (void)dealloc;
@property(retain, nonatomic) AVPlayer *player;

@end

@interface VideoPlayer : NSObject
{
id <VideoPlayerDelegate> delegate;
AVPlayerItem *_playerItem;
AVPlayer *_player;
AVAssetReader *_reader;
AVAssetReaderTrackOutput *_videoOut;
struct opaqueCMSampleBuffer *_cmSampleBuffer;
struct CMVideoSampling _videoSampling;
CDStruct_1b6d18a9 _duration;
CDStruct_1b6d18a9 _curTime;
CDStruct_1b6d18a9 _curFrameTimestamp;
CDStruct_1b6d18a9 _lastFrameTimestamp;
struct CGSize _videoSize;
_Bool _playerReady;
_Bool _assetReady;
_Bool _itemReady;
}

+ (_Bool)CheckScalingModeAspectFill:(struct CGSize)arg1 screenSize:(struct CGSize)arg2;
+ (_Bool)CanPlayToTexture:(id)arg1;
@property(readonly, nonatomic) AVPlayer *player; // @synthesize player=_player;
@property(retain, nonatomic) id delegate; // @synthesize delegate;
- (void).cxx_destruct;
- (_Bool)prepareReader;
- (void)prepareAsset:(id)arg1 withKeys:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)audioRouteChanged:(id)arg1;
- (void)playerItemDidReachEnd:(id)arg1;
- (_Bool)setAudioVolume:(float)arg1;
- (long long)curFrameTexture;
- (void)seekToTimestamp:(CDStruct_1b6d18a9)arg1;
- (void)seekTo:(float)arg1;
- (void)rewind;
- (void)resume;
- (void)pause;
- (_Bool)isPlaying;
- (_Bool)playVideoPlayer;
- (_Bool)playToTexture;
- (_Bool)playToView:(id)arg1;
- (_Bool)_playWithPrepareBlock:(CDUnknownBlockType)arg1;
- (_Bool)loadVideo:(id)arg1;
- (void)unloadPlayer;
- (void)cleanupPlayer;
- (void)cleanupAssetReader;
- (void)cleanupCVTextureCache;
- (id)init;
- (void)reportErrorWithString:(const char *)arg1 category:(const char *)arg2;
- (void)reportError:(id)arg1 category:(const char *)arg2;
- (float)durationSeconds;
- (CDStruct_1b6d18a9)duration;
- (struct CGSize)videoSize;
- (_Bool)readyToPlay;

@end

@interface UnityView : UnityRenderingView
{
struct CGSize _surfaceSize;
int _curOrientation;
_Bool _recreateView;
}

@property(readonly, nonatomic) int contentOrientation; // @synthesize contentOrientation=_curOrientation;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (void)recreateGLESSurface;
- (void)recreateGLESSurfaceIfNeeded;
- (void)didRotate;
- (void)willRotateToOrientation:(long long)arg1 fromOrientation:(long long)arg2;
- (void)layoutSubviews;
- (id)initFromMainScreen;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 scaleFactor:(double)arg2;
- (void)initImpl:(struct CGRect)arg1 scaleFactor:(double)arg2;
- (void)onUpdateSurfaceSize:(struct CGSize)arg1;

@end

@interface UnityRenderingView : UIView
{
}

+ (void)InitializeForAPI:(int)arg1;
+ (Class)layerClass;

@end

@interface UnityAppController : NSObject <UIApplicationDelegate>
{
UnityView *_unityView;
CADisplayLink *_displayLink;
UIWindow *_window;
UIView *_rootView;
UIViewController *_rootController;
UIView *_snapshotView;
DisplayConnection *_mainDisplay;
UnityViewControllerBase *_viewControllerForOrientation[5];
long long _curOrientation;
id <RenderPluginDelegate> _renderDelegate;
CADisplayLink *_unityDisplayLink;
CDUnknownBlockType _quitHandler;
}

@property(readonly, nonatomic) long long interfaceOrientation; // @synthesize interfaceOrientation=_curOrientation;
@property(copy, nonatomic) CDUnknownBlockType quitHandler; // @synthesize quitHandler=_quitHandler;
@property(retain, nonatomic) id renderDelegate; // @synthesize renderDelegate=_renderDelegate;
@property(readonly, copy, nonatomic) DisplayConnection *mainDisplay; // @synthesize mainDisplay=_mainDisplay;
@property(readonly, copy, nonatomic) UIViewController *rootViewController; // @synthesize rootViewController=_rootController;
@property(readonly, copy, nonatomic) UIView *rootView; // @synthesize rootView=_rootView;
@property(readonly, copy, nonatomic) CADisplayLink *unityDisplayLink; // @synthesize unityDisplayLink=_unityDisplayLink;
@property(readonly, copy, nonatomic) UnityView *unityView; // @synthesize unityView=_unityView;
- (void).cxx_destruct;
- (void)applicationWillTerminate:(id)arg1;
- (void)applicationDidReceiveMemoryWarning:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)startUnity:(id)arg1;
- (void)preStartUnity;
- (void)shouldAttachRenderDelegate;
@property(retain, nonatomic) UIWindow *window;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CameraCaptureController : NSObject <AVCaptureVideoDataOutputSampleBufferDelegate>
{
AVCaptureDevice *_captureDevice;
AVCaptureSession *_captureSession;
AVCaptureDeviceInput *_captureInput;
AVCaptureVideoDataOutput *_captureOutput;
struct CMVideoSampling _cmVideoSampling;
void *_userData;
unsigned long long _width;
unsigned long long _height;
}

@property(retain, nonatomic) AVCaptureDeviceInput *captureInput; // @synthesize captureInput=_captureInput;
@property(retain, nonatomic) AVCaptureVideoDataOutput *captureOutput; // @synthesize captureOutput=_captureOutput;
@property(retain, nonatomic) AVCaptureSession *captureSession; // @synthesize captureSession=_captureSession;
@property(retain, nonatomic) AVCaptureDevice *captureDevice; // @synthesize captureDevice=_captureDevice;
- (void).cxx_destruct;
- (id)pickFrameRateRange:(float)arg1;
- (id)pickPresetFromWidth:(int)arg1 height:(int)arg2;
- (void)stop;
- (void)pause;
- (void)start;
- (void)captureOutput:(id)arg1 didOutputSampleBuffer:(struct opaqueCMSampleBuffer *)arg2 fromConnection:(id)arg3;
- (_Bool)initCapture:(id)arg1 width:(int)arg2 height:(int)arg3 fps:(float)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UnityADBanner : NSObject <ADBannerViewDelegate, UnityViewControllerListener>
{
ADBannerView *_view;
struct CGPoint _userLayoutCenter;
int _bannerLayout;
_Bool _showingBanner;
}

@property(readonly, nonatomic) _Bool adVisible; // @synthesize adVisible=_showingBanner;
@property(readonly, copy, nonatomic) ADBannerView *view; // @synthesize view=_view;
- (void).cxx_destruct;
- (void)bannerView:(id)arg1 didFailToReceiveAdWithError:(id)arg2;
- (void)bannerViewDidLoadAd:(id)arg1;
- (void)bannerViewActionDidFinish:(id)arg1;
- (_Bool)bannerViewActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)showBanner:(_Bool)arg1;
- (void)positionForUserLayout:(struct CGPoint)arg1;
- (void)layoutBanner:(int)arg1;
- (void)interfaceDidChangeOrientation:(id)arg1;
- (void)interfaceWillChangeOrientation:(id)arg1;
- (void)dealloc;
- (id)initWithParent:(id)arg1 layout:(int)arg2;
- (id)initWithParent:(id)arg1 layout:(int)arg2 type:(int)arg3;
- (void)layoutBannerImpl;
- (float)layoutYImpl:(id)arg1;
- (float)layoutXImpl:(id)arg1;
- (void)initImpl:(id)arg1 layout:(int)arg2 type:(int)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UnityInterstitialAd : NSObject <ADInterstitialAdDelegate, UnityViewControllerListener>
{
ADInterstitialAd *_interstitial;
UIViewController *_presentController;
_Bool _autoReload;
_Bool _didShowAd;
}

@property(readonly, copy, nonatomic) ADInterstitialAd *interstitial; // @synthesize interstitial=_interstitial;
- (void).cxx_destruct;
- (void)viewWillAppear:(id)arg1;
- (void)viewDidDisappear:(id)arg1;
- (void)interstitialAdActionDidFinish:(id)arg1;
- (void)interstitialAdDidUnload:(id)arg1;
- (void)interstitialAdDidLoad:(id)arg1;
- (void)interstitialAd:(id)arg1 didFailWithError:(id)arg2;
- (_Bool)interstitialAdActionShouldBegin:(id)arg1 willLeaveApplication:(_Bool)arg2;
- (void)reloadAD;
- (void)show;
- (void)dealloc;
- (id)initWithController:(id)arg1 autoReload:(_Bool)arg2;
- (void)_handleReloadAD;
- (void)_loadAD;
- (void)_unloadAD;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UnityViewControllerBase : UIViewController
{
}

- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldAutorotate;
- (id)init;

@end

@interface UnityDefaultViewController : UnityViewControllerBase
{
}

- (unsigned long long)supportedInterfaceOrientations;

@end

@interface UnityPortraitOnlyViewController : UnityViewControllerBase
{
}

- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface UnityPortraitUpsideDownOnlyViewController : UnityViewControllerBase
{
}

- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface UnityLandscapeLeftOnlyViewController : UnityViewControllerBase
{
}

- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface UnityLandscapeRightOnlyViewController : UnityViewControllerBase
{
}

- (void)viewWillAppear:(_Bool)arg1;
- (unsigned long long)supportedInterfaceOrientations;

@end

@interface RenderPluginDelegate : NSObject <RenderPluginDelegate>
{
struct UnityDisplaySurfaceBase *mainDisplaySurface;
}

- (void)mainDisplayInited:(struct UnityDisplaySurfaceBase *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface RenderPluginArrayDelegate : RenderPluginDelegate
{
NSArray *delegateArray;
}

@property(retain, nonatomic) NSArray *delegateArray; // @synthesize delegateArray;
- (void).cxx_destruct;
- (void)willTerminate:(id)arg1;
- (void)willEnterForeground:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)willResignActive:(id)arg1;
- (void)didBecomeActive:(id)arg1;
- (void)onFrameResolved;
- (void)onAfterMainDisplaySurfaceRecreate;
- (void)onBeforeMainDisplaySurfaceRecreate:(struct RenderingSurfaceParams *)arg1;
- (void)mainDisplayInited:(struct UnityDisplaySurfaceBase *)arg1;

@end

@interface HoloScreenShot : NSObject
{
NSMutableArray *_paths;
NSOperationQueue *_serial_background;
}

+ (id)instance;
- (void).cxx_destruct;
- (void)image:(id)arg1 didFinishSavingWithError:(id)arg2 contextInfo:(void *)arg3;
- (void)saveScreenShot:(const char *)arg1;
- (id)init;

@end

@interface NIANavigationController : UINavigationController
{
}

- (_Bool)prefersStatusBarHidden;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)shouldAutorotate;

@end

@interface NIAMyAppController : UnityAppController
{
}

- (void)openUrl:(id)arg1;
- (void)shouldAttachRenderDelegate;
- (void)applicationWillResignActive:(id)arg1;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (void)startUnity:(id)arg1;

@end

@interface UpsightManager : NSObject <USManagedVariableObserverDelegate, USBillboardDelegate>
{
_Bool _shouldSynchronizeManagedVariables;
NSDictionary *_remoteNotificationDictionary;
NSMutableDictionary *_billboardDict;
}

+ (void)applicationDidBecomeActiveNotification:(id)arg1;
+ (void)applicationDidFinishLaunchingNotification:(id)arg1;
+ (id)objectFromJsonString:(id)arg1;
+ (id)jsonStringFromObject:(id)arg1;
+ (_Bool)isValidJsonObject:(id)arg1;
+ (id)sharedManger;
+ (void)load;
@property(retain, nonatomic) NSMutableDictionary *billboardDict; // @synthesize billboardDict=_billboardDict;
@property(retain, nonatomic) NSDictionary *remoteNotificationDictionary; // @synthesize remoteNotificationDictionary=_remoteNotificationDictionary;
@property(nonatomic) _Bool shouldSynchronizeManagedVariables; // @synthesize shouldSynchronizeManagedVariables=_shouldSynchronizeManagedVariables;
- (void).cxx_destruct;
- (void)observer:(id)arg1 didSynchronizeManagedVariables:(id)arg2;
- (_Bool)observerShouldSynchronizeManagedVariables:(id)arg1;
- (void)billboard:(id)arg1 didReceivePurchase:(id)arg2;
- (void)billboard:(id)arg1 didReceiveReward:(id)arg2;
- (void)billboardDidDismiss:(id)arg1;
- (void)billboardWillAppear:(id)arg1;
- (id)presentingViewControllerForBillboard:(id)arg1;
- (_Bool)isContentReadyForBillboardWithScope:(id)arg1;
- (void)destroyBillboardForScope:(id)arg1;
- (void)prepareBillboardForScope:(id)arg1;
- (void)onOpenURL:(id)arg1;
- (void)didReceiveRemoteNotification:(id)arg1;
- (void)didFailToRegisterForRemoteNotificationsWithError:(id)arg1;
- (void)didRegisterForRemoteNotificationsWithDeviceToken:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface WebViewController : UIViewController <UIWebViewDelegate>
{
UIWebView *m_webView;
UIButton *m_closeButton;
}

- (void).cxx_destruct;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)action:(id)arg1;
- (void)load:(id)arg1;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PlayerWrapper : NSObject
{
}

+ (void)loadUserIds:(id)arg1 withCondition:(_Bool)arg2;
+ (void)loadFriends;
+ (void)processNonFriendUsersUsingNewAPI:(id)arg1 withFriends:(id)arg2;
+ (void)processUsers:(id)arg1 withCondition:(_Bool)arg2 friendCallback:(CDUnknownBlockType)arg3;
+ (void)loadUserPhotoAsyncAndTriggerCallbackWhenNeeded:(id)arg1 withCondition:(_Bool)arg2 index:(int)arg3 totalSize:(int)arg4;

@end

@interface AchievementWrapper : UIViewController <GKGameCenterControllerDelegate>
{
GKGameCenterViewController *m_AchievementsView;
}

+ (void)reportProgressWithCache:(double)arg1 withIdentifier:(id)arg2;
+ (void)reportSingleAchievement:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)reportProgress:(double)arg1 withIdentifier:(id)arg2;
+ (void)loadAchievements;
+ (void)loadAchievementDescriptions;
- (void).cxx_destruct;
- (void)gameCenterViewControllerDidFinish:(id)arg1;
- (void)showAchievementsUI;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface LeaderboardWrapper : UIViewController <GKGameCenterControllerDelegate>
{
GKGameCenterViewController *m_LeaderboardController;
}

- (void).cxx_destruct;
- (void)gameCenterViewControllerDidFinish:(id)arg1;
- (void)showLeaderboardUI:(id)arg1 withTimeScope:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UnityPLCrashSignalHandler : NSObject
{
struct __darwin_sigaltstack _sigstk;
}

+ (void)resetHandlers;
+ (id)sharedHandler;
+ (void)initialize;
- (_Bool)registerHandlerForSignal:(int)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (_Bool)registerHandlerWithSignal:(int)arg1 error:(id *)arg2;
- (id)init;

@end

@interface UnityPLCrashReporter : NSObject
{
UnityPLCrashReporterConfig *_config;
_Bool _enabled;
UnityPLCrashMachExceptionServer *_machServer;
UnityPLCrashMachExceptionPortSet *_previousMachPorts;
NSString *_applicationIdentifier;
NSString *_applicationVersion;
NSString *_crashReportDirectory;
}

+ (id)sharedReporter;
+ (void)initialize;
- (void)setCrashCallbacks:(struct PLCrashReporterCallbacks *)arg1;
- (id)generateLiveReportAndReturnError:(id *)arg1;
- (id)generateLiveReport;
- (id)generateLiveReportWithThread:(unsigned int)arg1 error:(id *)arg2;
- (id)generateLiveReportWithThread:(unsigned int)arg1;
- (_Bool)enableCrashReporterAndReturnError:(id *)arg1;
- (_Bool)enableCrashReporter;
- (_Bool)purgePendingCrashReportAndReturnError:(id *)arg1;
- (_Bool)purgePendingCrashReport;
- (id)loadPendingCrashReportDataAndReturnError:(id *)arg1;
- (id)loadPendingCrashReportData;
- (_Bool)hasPendingCrashReport;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface UnityPLCrashReport : NSObject
{
struct _PLCrashReportDecoder *_decoder;
UnityPLCrashReportSystemInfo *_systemInfo;
UnityPLCrashReportMachineInfo *_machineInfo;
UnityPLCrashReportApplicationInfo *_applicationInfo;
UnityPLCrashReportProcessInfo *_processInfo;
UnityPLCrashReportSignalInfo *_signalInfo;
UnityPLCrashReportMachExceptionInfo *_machExceptionInfo;
NSArray *_threads;
NSArray *_images;
UnityPLCrashReportExceptionInfo *_exceptionInfo;
struct __CFUUID *_uuid;
}

@property(readonly, nonatomic) struct __CFUUID *uuidRef; // @synthesize uuidRef=_uuid;
@property(readonly, nonatomic) UnityPLCrashReportExceptionInfo *exceptionInfo; // @synthesize exceptionInfo=_exceptionInfo;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) UnityPLCrashReportMachExceptionInfo *machExceptionInfo; // @synthesize machExceptionInfo=_machExceptionInfo;
@property(readonly, nonatomic) UnityPLCrashReportSignalInfo *signalInfo; // @synthesize signalInfo=_signalInfo;
@property(readonly, nonatomic) UnityPLCrashReportProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(readonly, nonatomic) UnityPLCrashReportApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic) UnityPLCrashReportMachineInfo *machineInfo; // @synthesize machineInfo=_machineInfo;
@property(readonly, nonatomic) UnityPLCrashReportSystemInfo *systemInfo; // @synthesize systemInfo=_systemInfo;
@property(readonly, nonatomic) _Bool hasExceptionInfo;
@property(readonly, nonatomic) _Bool hasProcessInfo;
@property(readonly, nonatomic) _Bool hasMachineInfo;
- (id)imageForAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 error:(id *)arg2;

@end

@interface UnityPLCrashReportSystemInfo : NSObject
{
int _operatingSystem;
NSString *_osVersion;
NSString *_osBuild;
int _architecture;
NSDate *_timestamp;
}

@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) int architecture; // @synthesize architecture=_architecture;
@property(readonly, nonatomic) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_osBuild;
@property(readonly, nonatomic) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_osVersion;
@property(readonly, nonatomic) int operatingSystem; // @synthesize operatingSystem=_operatingSystem;
- (void)dealloc;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 timestamp:(id)arg5;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 architecture:(int)arg3 timestamp:(id)arg4;

@end

@interface UnityPLCrashReportApplicationInfo : NSObject
{
NSString *_applicationIdentifier;
NSString *_applicationVersion;
}

@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 applicationVersion:(id)arg2;

@end

@interface UnityPLCrashReportThreadInfo : NSObject
{
long long _threadNumber;
NSArray *_stackFrames;
_Bool _crashed;
NSArray *_registers;
}

@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) _Bool crashed; // @synthesize crashed=_crashed;
@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) long long threadNumber; // @synthesize threadNumber=_threadNumber;
- (void)dealloc;
- (id)initWithThreadNumber:(long long)arg1 stackFrames:(id)arg2 crashed:(_Bool)arg3 registers:(id)arg4;

@end

@interface UnityPLCrashReportBinaryImageInfo : NSObject
{
UnityPLCrashReportProcessorInfo *_processorInfo;
unsigned long long _baseAddress;
unsigned long long _imageSize;
NSString *_imageName;
_Bool _hasImageUUID;
NSString *_imageUUID;
}

@property(readonly, nonatomic) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(readonly, nonatomic) _Bool hasImageUUID; // @synthesize hasImageUUID=_hasImageUUID;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) unsigned long long imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) unsigned long long imageBaseAddress; // @synthesize imageBaseAddress=_baseAddress;
@property(readonly, nonatomic) UnityPLCrashReportProcessorInfo *codeType; // @synthesize codeType=_processorInfo;
- (void)dealloc;
- (id)initWithCodeType:(id)arg1 baseAddress:(unsigned long long)arg2 size:(unsigned long long)arg3 name:(id)arg4 uuid:(id)arg5;

@end

@interface UnityPLCrashReportExceptionInfo : NSObject
{
NSString *_name;
NSString *_reason;
NSArray *_stackFrames;
}

@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_reason;
@property(readonly, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_name;
- (void)dealloc;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2 stackFrames:(id)arg3;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2;

@end

@interface UnityPLCrashReportSignalInfo : NSObject
{
NSString *_name;
NSString *_code;
unsigned long long _address;
}

@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithSignalName:(id)arg1 code:(id)arg2 address:(unsigned long long)arg3;

@end

@interface UnityPLCrashReportProcessInfo : NSObject
{
NSString *_processName;
unsigned long long _processID;
NSString *_processPath;
NSDate *_processStartTime;
NSString *_parentProcessName;
unsigned long long _parentProcessID;
_Bool _native;
}

@property(readonly, nonatomic) _Bool native; // @synthesize native=_native;
@property(readonly, nonatomic) unsigned long long parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(readonly, nonatomic) NSDate *processStartTime; // @synthesize processStartTime=_processStartTime;
@property(readonly, nonatomic) NSString *processPath; // @synthesize processPath=_processPath;
@property(readonly, nonatomic) unsigned long long processID; // @synthesize processID=_processID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (void)dealloc;
- (id)initWithProcessName:(id)arg1 processID:(unsigned long long)arg2 processPath:(id)arg3 processStartTime:(id)arg4 parentProcessName:(id)arg5 parentProcessID:(unsigned long long)arg6 native:(_Bool)arg7;

@end

@interface UnityPLCrashReportTextFormatter : NSObject <PLCrashReportFormatter>
{
int _textFormat;
unsigned long long _stringEncoding;
}

+ (id)stringValueForCrashReport:(id)arg1 withTextFormat:(int)arg2;
- (id)formatReport:(id)arg1 error:(id *)arg2;
- (id)initWithTextFormat:(int)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface UnityPLCrashReportProcessorInfo : NSObject
{
int _typeEncoding;
unsigned long long _type;
unsigned long long _subtype;
}

@property(readonly, nonatomic) unsigned long long subtype; // @synthesize subtype=_subtype;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int typeEncoding; // @synthesize typeEncoding=_typeEncoding;
- (id)initWithTypeEncoding:(int)arg1 type:(unsigned long long)arg2 subtype:(unsigned long long)arg3;

@end

@interface UnityPLCrashReportMachineInfo : NSObject
{
NSString *_modelName;
UnityPLCrashReportProcessorInfo *_processorInfo;
unsigned long long _processorCount;
unsigned long long _logicalProcessorCount;
}

@property(readonly, nonatomic) unsigned long long logicalProcessorCount; // @synthesize logicalProcessorCount=_logicalProcessorCount;
@property(readonly, nonatomic) unsigned long long processorCount; // @synthesize processorCount=_processorCount;
@property(readonly, nonatomic) UnityPLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
- (void)dealloc;
- (id)initWithModelName:(id)arg1 processorInfo:(id)arg2 processorCount:(unsigned long long)arg3 logicalProcessorCount:(unsigned long long)arg4;

@end

@interface UnityPLCrashReportStackFrameInfo : NSObject
{
unsigned long long _instructionPointer;
UnityPLCrashReportSymbolInfo *_symbolInfo;
}

@property(readonly, nonatomic) UnityPLCrashReportSymbolInfo *symbolInfo; // @synthesize symbolInfo=_symbolInfo;
@property(readonly, nonatomic) unsigned long long instructionPointer; // @synthesize instructionPointer=_instructionPointer;
- (void)dealloc;
- (id)initWithInstructionPointer:(unsigned long long)arg1 symbolInfo:(id)arg2;

@end

@interface UnityPLCrashReportRegisterInfo : NSObject
{
NSString *_registerName;
unsigned long long _registerValue;
}

@property(readonly, nonatomic) unsigned long long registerValue; // @synthesize registerValue=_registerValue;
@property(readonly, nonatomic) NSString *registerName; // @synthesize registerName=_registerName;
- (void)dealloc;
- (id)initWithRegisterName:(id)arg1 registerValue:(unsigned long long)arg2;

@end

@interface UnityPLCrashReportSymbolInfo : NSObject
{
NSString *_symbolName;
unsigned long long _startAddress;
unsigned long long _endAddress;
}

@property(readonly, nonatomic) unsigned long long endAddress; // @synthesize endAddress=_endAddress;
@property(readonly, nonatomic) unsigned long long startAddress; // @synthesize startAddress=_startAddress;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dealloc;
- (id)initWithSymbolName:(id)arg1 startAddress:(unsigned long long)arg2 endAddress:(unsigned long long)arg3;

@end

@interface UnityPLCrashMachExceptionServer : NSObject
{
struct plcrash_exception_server_context *_serverContext;
}

- (void)dealloc;
- (id)exceptionPortWithMask:(unsigned int)arg1 error:(id *)arg2;
- (unsigned int)copySendRightForServerAndReturningError:(id *)arg1;
@property(readonly, nonatomic) unsigned int serverThread;
- (id)initWithCallBack:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 error:(id *)arg3;

@end

@interface UnityPLCrashProcessInfo : NSObject
{
int _processID;
NSString *_processName;
int _parentProcessID;
struct timeval _startTime;
_Bool _traced;
}

+ (id)currentProcessInfo;
@property(readonly, nonatomic) struct timeval startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic, getter=isTraced) _Bool traced; // @synthesize traced=_traced;
@property(readonly, nonatomic) int parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(readonly, nonatomic) int processID; // @synthesize processID=_processID;
- (void)dealloc;
- (id)initWithProcessID:(int)arg1;

@end

@interface UnityPLCrashHostInfo : NSObject
{
struct PLCrashHostInfoVersion _darwinVersion;
}

+ (id)currentHostInfo;
@property(readonly, nonatomic) struct PLCrashHostInfoVersion darwinVersion; // @synthesize darwinVersion=_darwinVersion;
- (id)init;

@end

@interface UnityPLCrashMachExceptionPort : NSObject
{
unsigned int _mask;
unsigned int _port;
int _behavior;
int _flavor;
}

+ (id)exceptionPortsForThread:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
+ (id)exceptionPortsForTask:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) int flavor; // @synthesize flavor=_flavor;
@property(readonly, nonatomic) int behavior; // @synthesize behavior=_behavior;
@property(readonly, nonatomic) unsigned int mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) unsigned int server_port; // @synthesize server_port=_port;
- (_Bool)registerForThread:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (_Bool)registerForTask:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initWithServerPort:(unsigned int)arg1 mask:(unsigned int)arg2 behavior:(int)arg3 flavor:(int)arg4;

@end

@interface UnityPLCrashMachExceptionPortSet : NSObject <NSFastEnumeration>
{
NSSet *_state_set;
struct plcrash_mach_exception_port_set _asyncSafeRepresentation;
}

@property(readonly, nonatomic) NSSet *set; // @synthesize set=_state_set;
@property(readonly, nonatomic) struct plcrash_mach_exception_port_set asyncSafeRepresentation; // @synthesize asyncSafeRepresentation=_asyncSafeRepresentation;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithAsyncSafeRepresentation:(struct plcrash_mach_exception_port_set)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface UnityPLCrashReporterConfig : NSObject
{
unsigned long long _signalHandlerType;
unsigned long long _symbolicationStrategy;
}

+ (id)defaultConfiguration;
@property(readonly, nonatomic) unsigned long long symbolicationStrategy; // @synthesize symbolicationStrategy=_symbolicationStrategy;
@property(readonly, nonatomic) unsigned long long signalHandlerType; // @synthesize signalHandlerType=_signalHandlerType;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2;
- (id)init;

@end

@interface UnityPLCrashUncaughtExceptionHandler : NSObject
{
}

@end

@interface UnityPLCrashReportMachExceptionInfo : NSObject
{
unsigned long long _type;
NSArray *_codes;
}

@property(readonly, nonatomic) NSArray *codes; // @synthesize codes=_codes;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 codes:(id)arg2;

@end

@interface OutputCoreAudioObjC : NSObject
{
struct OutputCoreAudio *mOutput;
}

- (void)dealloc;
- (void)deactivate;
- (void)activate:(struct OutputCoreAudio *)arg1;
- (void)becomeActive:(id)arg1;
- (void)screenConnect:(id)arg1;
- (void)enterForeground:(id)arg1;

@end

@interface GTMOAuth2AuthorizationArgs : NSObject
{
NSMutableURLRequest *request_;
id delegate_;
SEL sel_;
id completionHandler_;
NSThread *thread_;
NSError *error_;
}

+ (id)argsWithRequest:(id)arg1 delegate:(id)arg2 selector:(SEL)arg3 completionHandler:(id)arg4 thread:(id)arg5;
@property(retain) NSError *error; // @synthesize error=error_;
@property(retain) NSThread *thread; // @synthesize thread=thread_;
@property(copy) id completionHandler; // @synthesize completionHandler=completionHandler_;
@property SEL selector; // @synthesize selector=sel_;
@property(retain) id delegate; // @synthesize delegate=delegate_;
@property(retain) NSMutableURLRequest *request; // @synthesize request=request_;
- (void)dealloc;

@end

@interface GTMOAuth2Authentication : NSObject <GTMFetcherAuthorizationProtocol>
{
NSString *clientID_;
NSString *clientSecret_;
NSString *redirectURI_;
NSMutableDictionary *parameters_;
NSURL *tokenURL_;
NSDate *expirationDate_;
NSString *authorizationTokenKey_;
NSDictionary *additionalTokenRequestParameters_;
NSDictionary *additionalGrantTypeRequestParameters_;
GTMSessionFetcher *refreshFetcher_;
NSMutableArray *authorizationQueue_;
id <GTMSessionFetcherServiceProtocol> fetcherService_;
Class parserClass_;
_Bool shouldAuthorizeAllRequests_;
id userData_;
NSMutableDictionary *properties_;
}

+ (id)scopeWithStrings:(id)arg1;
+ (id)dictionaryWithResponseData:(id)arg1;
+ (id)dictionaryWithResponseString:(id)arg1;
+ (id)unencodedOAuthParameterForString:(id)arg1;
+ (void)invokeDelegate:(id)arg1 selector:(SEL)arg2 object:(id)arg3 object:(id)arg4 object:(id)arg5;
+ (id)encodedQueryParametersForDictionary:(id)arg1;
+ (id)encodedOAuthValueForString:(id)arg1;
+ (id)dictionaryWithJSONData:(id)arg1;
+ (id)authenticationWithServiceProvider:(id)arg1 tokenURL:(id)arg2 redirectURI:(id)arg3 clientID:(id)arg4 clientSecret:(id)arg5;
@property(retain) NSMutableArray *authorizationQueue; // @synthesize authorizationQueue=authorizationQueue_;
@property(retain) NSDictionary *properties; // @synthesize properties=properties_;
@property(retain) id userData; // @synthesize userData=userData_;
@property _Bool shouldAuthorizeAllRequests; // @synthesize shouldAuthorizeAllRequests=shouldAuthorizeAllRequests_;
@property Class parserClass; // @synthesize parserClass=parserClass_;
@property id <GTMSessionFetcherServiceProtocol> fetcherService; // @synthesize fetcherService=fetcherService_;
@property(retain) GTMSessionFetcher *refreshFetcher; // @synthesize refreshFetcher=refreshFetcher_;
@property(retain) NSDictionary *additionalGrantTypeRequestParameters; // @synthesize additionalGrantTypeRequestParameters=additionalGrantTypeRequestParameters_;
@property(retain) NSDictionary *additionalTokenRequestParameters; // @synthesize additionalTokenRequestParameters=additionalTokenRequestParameters_;
@property(copy) NSDate *expirationDate; // @synthesize expirationDate=expirationDate_;
@property(copy) NSURL *tokenURL; // @synthesize tokenURL=tokenURL_;
@property(copy) NSString *authorizationTokenKey; // @synthesize authorizationTokenKey=authorizationTokenKey_;
@property(retain) NSMutableDictionary *parameters; // @synthesize parameters=parameters_;
@property(copy) NSString *redirectURI; // @synthesize redirectURI=redirectURI_;
@property(copy) NSString *clientSecret; // @synthesize clientSecret=clientSecret_;
@property(copy) NSString *clientID; // @synthesize clientID=clientID_;
- (id)propertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
@property(retain) NSString *userEmailIsVerified; // @dynamic userEmailIsVerified;
@property(retain) NSString *userEmail; // @dynamic userEmail;
@property(retain) NSString *userID;
@property(copy) NSString *serviceProvider; // @dynamic serviceProvider;
- (void)updateExpirationDate;
@property(retain) NSNumber *expiresIn; // @dynamic expiresIn;
@property(retain) NSString *scope; // @dynamic scope;
@property(retain) NSString *tokenType; // @dynamic tokenType;
@property(retain) NSString *errorString; // @dynamic errorString;
@property(retain) NSString *refreshScope; // @dynamic refreshScope;
@property(retain) NSString *assertion; // @dynamic assertion;
@property(retain) NSString *code; // @dynamic code;
@property(retain) NSString *refreshToken; // @dynamic refreshToken;
@property(retain) NSString *accessToken; // @dynamic accessToken;
@property(readonly) NSString *authorizationToken;
- (void)reset;
- (_Bool)primeForRefresh;
- (id)persistenceResponseString;
- (void)setKeysForPersistenceResponseString:(id)arg1;
- (void)notifyFetchIsRunning:(_Bool)arg1 fetcher:(id)arg2 type:(id)arg3;
- (void)tokenFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (id)beginTokenFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;
- (id)userAgent;
- (void)waitForCompletionWithTimeout:(double)arg1;
- (_Bool)shouldRefreshAccessToken;
@property(readonly) _Bool canAuthorize; // @dynamic canAuthorize;
- (_Bool)authorizeRequest:(id)arg1;
- (void)invokeCallbackArgs:(id)arg1;
- (_Bool)authorizeRequestImmediateArgs:(id)arg1;
- (void)stopAuthorizationForRequest:(id)arg1;
- (void)stopAuthorization;
- (_Bool)isAuthorizedRequest:(id)arg1;
- (_Bool)isAuthorizingRequest:(id)arg1;
- (void)auth:(id)arg1 finishedRefreshWithFetcher:(id)arg2 error:(id)arg3;
- (_Bool)authorizeRequestArgs:(id)arg1;
- (void)authorizeRequest:(id)arg1 delegate:(id)arg2 didFinishSelector:(SEL)arg3;
- (void)authorizeRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)setKeysForResponseJSONData:(id)arg1;
- (void)setKeysForResponseString:(id)arg1;
- (void)setKeysForResponseDictionary:(id)arg1;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMOAuth2SignIn : NSObject
{
GTMOAuth2Authentication *auth_;
NSURL *authorizationURL_;
NSDictionary *additionalAuthorizationParameters_;
id delegate_;
SEL webRequestSelector_;
SEL finishedSelector_;
_Bool hasHandledCallback_;
GTMSessionFetcher *pendingFetcher_;
_Bool shouldFetchGoogleUserEmail_;
_Bool shouldFetchGoogleUserProfile_;
NSDictionary *userProfile_;
struct __SCNetworkReachability *reachabilityRef_;
NSTimer *networkLossTimer_;
double networkLossTimeoutInterval_;
_Bool hasNotifiedNetworkLoss_;
id userData_;
}

+ (id)decodeWebSafeBase64:(id)arg1;
+ (void)revokeTokenForGoogleAuthentication:(id)arg1;
+ (id)userInfoFetcherWithAuth:(id)arg1;
+ (id)mutableURLRequestWithURL:(id)arg1 paramString:(id)arg2;
+ (id)standardGoogleAuthenticationForScope:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3;
+ (id)nativeClientRedirectURI;
+ (id)googleUserInfoURL;
+ (id)googleRevocationURL;
+ (id)googleTokenURL;
+ (id)googleAuthorizationURL;
@property(nonatomic) double networkLossTimeoutInterval; // @synthesize networkLossTimeoutInterval=networkLossTimeoutInterval_;
@property(retain, nonatomic) NSDictionary *userProfile; // @synthesize userProfile=userProfile_;
@property(nonatomic) _Bool shouldFetchGoogleUserProfile; // @synthesize shouldFetchGoogleUserProfile=shouldFetchGoogleUserProfile_;
@property(nonatomic) _Bool shouldFetchGoogleUserEmail; // @synthesize shouldFetchGoogleUserEmail=shouldFetchGoogleUserEmail_;
@property(retain, nonatomic) id userData; // @synthesize userData=userData_;
@property(retain) GTMSessionFetcher *pendingFetcher; // @synthesize pendingFetcher=pendingFetcher_;
@property _Bool hasHandledCallback; // @synthesize hasHandledCallback=hasHandledCallback_;
@property(nonatomic) SEL finishedSelector; // @synthesize finishedSelector=finishedSelector_;
@property(nonatomic) SEL webRequestSelector; // @synthesize webRequestSelector=webRequestSelector_;
@property(retain, nonatomic) id delegate; // @synthesize delegate=delegate_;
@property(retain, nonatomic) NSDictionary *additionalAuthorizationParameters; // @synthesize additionalAuthorizationParameters=additionalAuthorizationParameters_;
@property(retain, nonatomic) NSURL *authorizationURL; // @synthesize authorizationURL=authorizationURL_;
@property(retain, nonatomic) GTMOAuth2Authentication *authentication; // @synthesize authentication=auth_;
- (void)stopReachabilityCheck;
- (void)reachabilityTimerFired:(id)arg1;
- (void)reachabilityTarget:(struct __SCNetworkReachability *)arg1 changedFlags:(unsigned int)arg2;
- (void)destroyUnreachabilityTimer;
- (void)startReachabilityCheck;
- (void)invokeFinalCallbackWithError:(id)arg1;
- (void)finishSignInWithError:(id)arg1;
- (void)updateGoogleUserInfoWithData:(id)arg1;
- (void)infoFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (void)fetchGoogleUserInfo;
- (void)auth:(id)arg1 finishedWithFetcher:(id)arg2 error:(id)arg3;
- (void)authCodeObtained;
- (_Bool)loadFailedWithError:(id)arg1;
- (_Bool)cookiesChanged:(id)arg1;
- (_Bool)titleChanged:(id)arg1;
- (_Bool)requestRedirectedToRequest:(id)arg1;
- (void)closeTheWindow;
- (void)windowWasClosed;
- (_Bool)startWebRequest;
- (id)parametersForWebRequest;
- (_Bool)startSigningIn;
- (void)cancelSigningIn;
- (void)dealloc;
- (id)initWithAuthentication:(id)arg1 authorizationURL:(id)arg2 delegate:(id)arg3 webRequestSelector:(SEL)arg4 finishedSelector:(SEL)arg5;
- (void)addScopeForGoogleUserInfo;

@end

@interface GTMOAuth2ViewControllerTouch : UIViewController <UINavigationControllerDelegate, UIWebViewDelegate>
{
UIButton *backButton_;
UIButton *forwardButton_;
UIActivityIndicatorView *initialActivityIndicator_;
UIView *navButtonsView_;
UIBarButtonItem *rightBarButtonItem_;
UIWebView *webView_;
GTMOAuth2SignIn *signIn_;
NSURLRequest *request_;
id delegate_;
SEL finishedSelector_;
CDUnknownBlockType completionBlock_;
CDUnknownBlockType popViewBlock_;
NSString *keychainItemName_;
void *keychainItemAccessibility_;
NSString *initialHTMLString_;
int mustShowActivityIndicator_;
NSURL *browserCookiesURL_;
id userData_;
NSMutableDictionary *properties_;
_Bool isViewShown_;
_Bool didViewAppear_;
_Bool hasNotifiedWebViewStartedLoading_;
_Bool hasCalledFinished_;
_Bool hasDoneFinalRedirect_;
_Bool didDismissSelf_;
unsigned long long savedCookiePolicy_;
NSArray *systemCookies_;
NSArray *signInCookies_;
}

+ (void)revokeTokenForGoogleAuthentication:(id)arg1;
+ (void)setSignInClass:(Class)arg1;
+ (Class)signInClass;
+ (_Bool)saveParamsToKeychainForName:(id)arg1 accessibility:(void *)arg2 authentication:(id)arg3 error:(id *)arg4;
+ (_Bool)saveParamsToKeychainForName:(id)arg1 authentication:(id)arg2;
+ (_Bool)removeAuthFromKeychainForName:(id)arg1;
+ (_Bool)authorizeFromKeychainForName:(id)arg1 authentication:(id)arg2 error:(id *)arg3;
+ (id)authForGoogleFromKeychainForName:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3 error:(id *)arg4;
+ (id)authForGoogleFromKeychainForName:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3;
+ (id)authNibBundle;
+ (id)authNibName;
+ (id)controllerWithAuthentication:(id)arg1 authorizationURL:(id)arg2 keychainItemName:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
+ (id)controllerWithAuthentication:(id)arg1 authorizationURL:(id)arg2 keychainItemName:(id)arg3 delegate:(id)arg4 finishedSelector:(SEL)arg5;
+ (id)controllerWithScope:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3 keychainItemName:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
+ (id)controllerWithScope:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3 keychainItemName:(id)arg4 delegate:(id)arg5 finishedSelector:(SEL)arg6;
@property(copy, nonatomic) CDUnknownBlockType popViewBlock; // @synthesize popViewBlock=popViewBlock_;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=properties_;
@property(retain, nonatomic) id userData; // @synthesize userData=userData_;
@property(readonly, retain, nonatomic) GTMOAuth2SignIn *signIn; // @synthesize signIn=signIn_;
@property(retain, nonatomic) NSURL *browserCookiesURL; // @synthesize browserCookiesURL=browserCookiesURL_;
@property(copy, nonatomic) NSString *initialHTMLString; // @synthesize initialHTMLString=initialHTMLString_;
@property(nonatomic) void *keychainItemAccessibility; // @synthesize keychainItemAccessibility=keychainItemAccessibility_;
@property(copy, nonatomic) NSString *keychainItemName; // @synthesize keychainItemName=keychainItemName_;
@property(retain, nonatomic) UIActivityIndicatorView *initialActivityIndicator; // @synthesize initialActivityIndicator=initialActivityIndicator_;
@property(retain, nonatomic) UIWebView *webView; // @synthesize webView=webView_;
@property(retain, nonatomic) UIBarButtonItem *rightBarButtonItem; // @synthesize rightBarButtonItem=rightBarButtonItem_;
@property(retain, nonatomic) UIView *navButtonsView; // @synthesize navButtonsView=navButtonsView_;
@property(retain, nonatomic) UIButton *forwardButton; // @synthesize forwardButton=forwardButton_;
@property(retain, nonatomic) UIButton *backButton; // @synthesize backButton=backButton_;
@property(copy, nonatomic) NSArray *signInCookies; // @synthesize signInCookies=signInCookies_;
@property(copy, nonatomic) NSArray *systemCookies; // @synthesize systemCookies=systemCookies_;
@property(copy, nonatomic) NSURLRequest *request; // @synthesize request=request_;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (void)updateUI;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)viewDidLayoutSubviews;
- (_Bool)isBeingObscured:(id)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)isNavigationBarTranslucent;
- (void)moveWebViewFromUnderNavigationBar;
- (void)signIn:(id)arg1 finishedWithAuth:(id)arg2 error:(id)arg3;
- (void)signIn:(id)arg1 displayRequest:(id)arg2;
- (id)propertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
@property(nonatomic) _Bool showsInitialActivityIndicator;
- (_Bool)shouldUseKeychain;
@property(nonatomic) double networkLossTimeoutInterval;
- (id)swapBrowserCookies:(id)arg1;
- (void)swapInCookies;
- (void)swapOutCookies;
@property(readonly, retain, nonatomic) GTMOAuth2Authentication *authentication;
- (void)cancelSigningIn;
- (void)notifyWithName:(id)arg1 webView:(id)arg2 kind:(id)arg3;
- (void)popView;
- (void)setUpNavigation;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithAuthentication:(id)arg1 authorizationURL:(id)arg2 keychainItemName:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)initWithAuthentication:(id)arg1 authorizationURL:(id)arg2 keychainItemName:(id)arg3 delegate:(id)arg4 finishedSelector:(SEL)arg5;
- (id)initWithScope:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3 keychainItemName:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (id)initWithScope:(id)arg1 clientID:(id)arg2 clientSecret:(id)arg3 keychainItemName:(id)arg4 delegate:(id)arg5 finishedSelector:(SEL)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMOAuth2Keychain : NSObject
{
}

+ (id)keychainQueryForService:(id)arg1 account:(id)arg2;
+ (void)setDefaultKeychain:(id)arg1;
+ (id)defaultKeychain;
- (_Bool)setPassword:(id)arg1 forService:(id)arg2 accessibility:(void *)arg3 account:(id)arg4 error:(id *)arg5;
- (_Bool)removePasswordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
- (id)passwordForService:(id)arg1 account:(id)arg2 error:(id *)arg3;
- (id)keychainQueryForService:(id)arg1 account:(id)arg2;
- (id)keyForService:(id)arg1 account:(id)arg2;

@end

@interface GTMSessionFetcher : NSObject <NSURLSessionDelegate>
{
NSMutableURLRequest *_request;
NSURLSession *_session;
_Bool _shouldInvalidateSession;
NSURLSessionConfiguration *_configuration;
NSURLSessionTask *_sessionTask;
NSString *_taskDescription;
float _taskPriority;
NSURLResponse *_response;
NSString *_sessionIdentifier;
_Bool _didCreateSessionIdentifier;
NSString *_sessionIdentifierUUID;
_Bool _useBackgroundSession;
NSMutableData *_downloadedData;
NSError *_downloadFinishedError;
NSData *_downloadResumeData;
NSURL *_destinationFileURL;
long long _downloadedLength;
NSURLCredential *_credential;
NSURLCredential *_proxyCredential;
_Bool _isStopNotificationNeeded;
_Bool _isUsingTestBlock;
unsigned long long _backgroundTaskIdentifer;
id _userData;
NSMutableDictionary *_properties;
NSObject<OS_dispatch_queue> *_callbackQueue;
NSObject<OS_dispatch_group> *_callbackGroup;
NSOperationQueue *_delegateQueue;
id <GTMFetcherAuthorizationProtocol> _authorizer;
id <GTMSessionFetcherServiceProtocol> _service;
NSString *_serviceHost;
long long _servicePriority;
_Bool _userStoppedFetching;
_Bool _isRetryEnabled;
NSTimer *_retryTimer;
unsigned long long _retryCount;
double _maxRetryInterval;
double _minRetryInterval;
double _retryFactor;
double _lastRetryInterval;
NSDate *_initialRequestDate;
_Bool _hasAttemptedAuthRefresh;
NSString *_comment;
NSString *_log;
NSMutableData *_loggedStreamData;
NSURL *_redirectedFromURL;
NSString *_logRequestBody;
NSString *_logResponseBody;
_Bool _hasLoggedError;
_Bool _deferResponseBodyLogging;
_Bool _canShareSession;
_Bool _useUploadTask;
_Bool _allowLocalhostRequest;
_Bool _allowInvalidServerCertificates;
CDUnknownBlockType _configurationBlock;
NSDictionary *_sessionUserInfo;
CDUnknownBlockType _completionHandler;
NSData *_bodyData;
NSURL *_bodyFileURL;
long long _bodyLength;
CDUnknownBlockType _bodyStreamProvider;
CDUnknownBlockType _accumulateDataBlock;
CDUnknownBlockType _receivedProgressBlock;
CDUnknownBlockType _downloadProgressBlock;
CDUnknownBlockType _resumeDataBlock;
CDUnknownBlockType _didReceiveResponseBlock;
CDUnknownBlockType _willRedirectBlock;
CDUnknownBlockType _sendProgressBlock;
CDUnknownBlockType _willCacheURLResponseBlock;
CDUnknownBlockType _retryBlock;
NSArray *_allowedInsecureSchemes;
NSHTTPCookieStorage *_cookieStorage;
CDUnknownBlockType _testBlock;
}

+ (CDUnknownBlockType)systemCompletionHandlerForSessionIdentifier:(id)arg1;
+ (void)setSystemCompletionHandler:(CDUnknownBlockType)arg1 forSessionIdentifier:(id)arg2;
+ (void)setGlobalTestBlock:(CDUnknownBlockType)arg1;
+ (id)staticCookieStorage;
+ (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (id)fetchersForBackgroundSessions;
+ (id)activePersistedBackgroundSessions;
+ (id)fetcherUserDefaults;
+ (_Bool)appAllowsInsecureRequests;
+ (id)sessionIdentifierToFetcherMap;
+ (id)fetcherWithSessionIdentifier:(id)arg1;
+ (id)fetcherWithDownloadResumeData:(id)arg1;
+ (id)fetcherWithURLString:(id)arg1;
+ (id)fetcherWithURL:(id)arg1;
+ (id)fetcherWithRequest:(id)arg1;
+ (void)load;
@property float taskPriority; // @synthesize taskPriority=_taskPriority;
@property _Bool hasLoggedError; // @synthesize hasLoggedError=_hasLoggedError;
@property(copy) NSString *logResponseBody; // @synthesize logResponseBody=_logResponseBody;
@property(copy) NSString *logRequestBody; // @synthesize logRequestBody=_logRequestBody;
@property(retain) NSURL *redirectedFromURL; // @synthesize redirectedFromURL=_redirectedFromURL;
@property(copy) NSString *log; // @synthesize log=_log;
@property(copy) NSString *comment; // @synthesize comment=_comment;
@property(copy) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(retain) NSHTTPCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property _Bool allowInvalidServerCertificates; // @synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates;
@property _Bool allowLocalhostRequest; // @synthesize allowLocalhostRequest=_allowLocalhostRequest;
@property(copy) NSArray *allowedInsecureSchemes; // @synthesize allowedInsecureSchemes=_allowedInsecureSchemes;
@property _Bool useUploadTask; // @synthesize useUploadTask=_useUploadTask;
@property(retain) NSData *downloadedData; // @synthesize downloadedData=_downloadedData;
@property(readonly) long long downloadedLength; // @synthesize downloadedLength=_downloadedLength;
@property double retryFactor; // @synthesize retryFactor=_retryFactor;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(copy) CDUnknownBlockType willCacheURLResponseBlock; // @synthesize willCacheURLResponseBlock=_willCacheURLResponseBlock;
@property(copy) CDUnknownBlockType sendProgressBlock; // @synthesize sendProgressBlock=_sendProgressBlock;
@property(copy) CDUnknownBlockType willRedirectBlock; // @synthesize willRedirectBlock=_willRedirectBlock;
@property(copy) CDUnknownBlockType didReceiveResponseBlock; // @synthesize didReceiveResponseBlock=_didReceiveResponseBlock;
@property(copy) CDUnknownBlockType resumeDataBlock; // @synthesize resumeDataBlock=_resumeDataBlock;
@property(copy) CDUnknownBlockType downloadProgressBlock; // @synthesize downloadProgressBlock=_downloadProgressBlock;
@property(copy) CDUnknownBlockType receivedProgressBlock; // @synthesize receivedProgressBlock=_receivedProgressBlock;
@property(copy) CDUnknownBlockType accumulateDataBlock; // @synthesize accumulateDataBlock=_accumulateDataBlock;
@property long long servicePriority; // @synthesize servicePriority=_servicePriority;
@property(copy) NSString *serviceHost; // @synthesize serviceHost=_serviceHost;
@property(retain) id <GTMSessionFetcherServiceProtocol> service; // @synthesize service=_service;
@property(retain) id <GTMFetcherAuthorizationProtocol> authorizer; // @synthesize authorizer=_authorizer;
@property(copy) CDUnknownBlockType bodyStreamProvider; // @synthesize bodyStreamProvider=_bodyStreamProvider;
@property(retain) NSURL *bodyFileURL; // @synthesize bodyFileURL=_bodyFileURL;
@property(retain) NSData *bodyData; // @synthesize bodyData=_bodyData;
@property(retain) NSURLCredential *proxyCredential; // @synthesize proxyCredential=_proxyCredential;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(copy) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property _Bool useBackgroundSession; // @synthesize useBackgroundSession=_useBackgroundSession;
@property(copy) NSString *taskDescription; // @synthesize taskDescription=_taskDescription;
@property(copy) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property(retain) NSData *downloadResumeData; // @synthesize downloadResumeData=_downloadResumeData;
@property(retain) NSMutableURLRequest *mutableRequest; // @synthesize mutableRequest=_request;
- (void).cxx_destruct;
@property _Bool deferResponseBodyLogging;
- (void)clearLoggedStreamData;
- (void)appendLoggedStreamData:(id)arg1;
@property(readonly) NSData *loggedStreamData;
- (void)setCommentWithFormat:(id)arg1;
- (void)addPropertiesFromDictionary:(id)arg1;
- (id)propertyForKey:(id)arg1;
- (void)setProperty:(id)arg1 forKey:(id)arg2;
@property(copy) NSDictionary *properties;
@property(retain) NSURL *destinationFileURL;
@property(retain) id userData;
@property(readonly) _Bool canShareSession; // @synthesize canShareSession=_canShareSession;
@property(retain) NSURLSession *session;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(readonly) long long bodyLength; // @synthesize bodyLength=_bodyLength;
- (void)setSystemCompletionHandler:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)systemCompletionHandler;
@property double minRetryInterval;
@property double maxRetryInterval;
@property(getter=isRetryEnabled) _Bool retryEnabled;
- (id)retryTimer;
@property(readonly) double nextRetryInterval;
@property(readonly) unsigned long long retryCount;
- (void)destroyRetryTimer;
- (void)retryTimerFired:(id)arg1;
- (void)beginRetryTimer;
- (double)retryAfterInterval;
- (_Bool)hasRetryAfterInterval;
- (void)shouldRetryNowForStatus:(long long)arg1 error:(id)arg2 response:(CDUnknownBlockType)arg3;
- (_Bool)isRetryError:(id)arg1;
- (void)logNowWithError:(id)arg1;
- (_Bool)shouldReleaseCallbacksUponCompletion;
- (void)finishWithError:(id)arg1 shouldRetry:(_Bool)arg2;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
- (void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)invokeFetchCallbacksOnCallbackQueueWithData:(id)arg1 error:(id)arg2;
- (void)invokeOnCallbackQueue:(id)arg1 afterUserStopped:(_Bool)arg2 block:(CDUnknownBlockType)arg3;
- (void)invokeOnCallbackQueueAfterUserStopped:(_Bool)arg1 block:(CDUnknownBlockType)arg2;
- (void)invokeOnCallbackQueueUnlessStopped:(CDUnknownBlockType)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (_Bool)waitForCompletionWithTimeout:(double)arg1;
- (void)retryFetch;
- (void)sendStopNotificationIfNeeded;
- (void)stopFetchReleasingCallbacks:(_Bool)arg1;
- (void)stopFetching;
- (void)forgetSessionIdentifierForFetcher;
- (void)releaseCallbacks;
@property(readonly) NSDictionary *responseHeaders;
@property(readonly) long long statusCode;
@property(readonly) NSURLResponse *response;
@property(readonly, getter=isFetching) _Bool fetching;
- (void)authorizer:(id)arg1 request:(id)arg2 finishedWithError:(id)arg3;
- (void)authorizeRequest;
- (void)endBackgroundTask;
- (void)failToBeginFetchWithError:(id)arg1;
- (void)createSessionIdentifierWithMetadata:(id)arg1;
- (id)sessionIdentifierMetadata;
- (void)restoreDefaultStateForSessionIdentifierMetadata;
- (id)sessionIdentifierDefaultMetadata;
@property(retain) NSDictionary *sessionUserInfo; // @synthesize sessionUserInfo=_sessionUserInfo;
- (void)setSessionIdentifier:(id)arg1;
@property(readonly) NSString *sessionIdentifier;
- (void)removePersistedBackgroundSessionFromDefaults;
- (void)addPersistedBackgroundSessionToDefaults;
@property(readonly) NSURLSessionTask *sessionTask; // @synthesize sessionTask=_sessionTask;
- (void)setSessionTask:(id)arg1;
- (void)simulateDataCallbacksForTestBlockWithBodyData:(id)arg1 response:(id)arg2 responseData:(id)arg3 error:(id)arg4;
- (void)simulateByteTransferReportWithDataLength:(long long)arg1 block:(CDUnknownBlockType)arg2;
- (void)simulateFetchForTestBlock;
- (void)beginFetchMayDelay:(_Bool)arg1 mayAuthorize:(_Bool)arg2;
- (void)beginFetchWithDelegate:(id)arg1 didFinishSelector:(SEL)arg2;
- (CDUnknownBlockType)completionHandlerWithTarget:(id)arg1 didFinishSelector:(SEL)arg2;
- (void)beginFetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)dealloc;
@property(readonly, copy) NSString *description;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithRequest:(id)arg1 configuration:(id)arg2;
- (id)initWithRequest:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionCookieStorage : NSHTTPCookieStorage
{
NSMutableArray *_cookies;
unsigned long long _policy;
}

+ (_Bool)hasCookieExpired:(id)arg1;
- (void).cxx_destruct;
- (void)setCookieAcceptPolicy:(unsigned long long)arg1;
- (unsigned long long)cookieAcceptPolicy;
- (void)removeAllCookies;
- (void)removeExpiredCookies;
- (id)cookieMatchingCookie:(id)arg1;
- (void)getCookiesForTask:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)storeCookies:(id)arg1 forTask:(id)arg2;
- (id)cookiesForURL:(id)arg1;
- (void)deleteCookie:(id)arg1;
- (void)setCookies:(id)arg1 forURL:(id)arg2 mainDocumentURL:(id)arg3;
- (void)setCookies:(id)arg1;
- (void)internalSetCookie:(id)arg1;
- (void)setCookie:(id)arg1;
- (id)cookies;
- (id)init;

@end

@interface GTMSessionFetcherService : NSObject <GTMSessionFetcherServiceProtocol>
{
NSMutableDictionary *_delayedFetchersByHost;
NSMutableDictionary *_runningFetchersByHost;
unsigned long long _maxRunningFetchersPerHost;
GTMSessionFetcherSessionDelegateDispatcher *_delegateDispatcher;
NSObject<OS_dispatch_queue> *_callbackQueue;
NSHTTPCookieStorage *_cookieStorage;
NSString *_userAgent;
double _timeout;
NSURLCredential *_credential;
NSURLCredential *_proxyCredential;
long long _cookieStorageMethod;
id <GTMFetcherAuthorizationProtocol> _authorizer;
NSMutableArray *_stoppedFetchersToWaitFor;
_Bool _allowLocalhostRequest;
_Bool _allowInvalidServerCertificates;
_Bool _retryEnabled;
NSURLSessionConfiguration *_configuration;
CDUnknownBlockType _configurationBlock;
NSArray *_allowedInsecureSchemes;
CDUnknownBlockType _retryBlock;
double _maxRetryInterval;
double _minRetryInterval;
NSDictionary *_properties;
double _unusedSessionTimeout;
CDUnknownBlockType _testBlock;
}

+ (unsigned long long)numberOfNonBackgroundSessionFetchers:(id)arg1;
@property(copy) CDUnknownBlockType testBlock; // @synthesize testBlock=_testBlock;
@property(copy) NSDictionary *properties; // @synthesize properties=_properties;
@property double minRetryInterval; // @synthesize minRetryInterval=_minRetryInterval;
@property double maxRetryInterval; // @synthesize maxRetryInterval=_maxRetryInterval;
@property(copy) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(getter=isRetryEnabled) _Bool retryEnabled; // @synthesize retryEnabled=_retryEnabled;
@property _Bool allowInvalidServerCertificates; // @synthesize allowInvalidServerCertificates=_allowInvalidServerCertificates;
@property _Bool allowLocalhostRequest; // @synthesize allowLocalhostRequest=_allowLocalhostRequest;
@property(copy) NSArray *allowedInsecureSchemes; // @synthesize allowedInsecureSchemes=_allowedInsecureSchemes;
@property(retain) NSURLCredential *proxyCredential; // @synthesize proxyCredential=_proxyCredential;
@property(retain) NSURLCredential *credential; // @synthesize credential=_credential;
@property(retain) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(copy) NSString *userAgent; // @synthesize userAgent=_userAgent;
@property(retain) NSHTTPCookieStorage *cookieStorage; // @synthesize cookieStorage=_cookieStorage;
@property(copy) CDUnknownBlockType configurationBlock; // @synthesize configurationBlock=_configurationBlock;
@property(retain) NSURLSessionConfiguration *configuration; // @synthesize configuration=_configuration;
@property unsigned long long maxRunningFetchersPerHost; // @synthesize maxRunningFetchersPerHost=_maxRunningFetchersPerHost;
- (void).cxx_destruct;
@property(readonly) NSOperationQueue *delegateQueue;
- (void)detachAuthorizer;
@property(retain) id <GTMFetcherAuthorizationProtocol> authorizer;
@property(retain) NSDictionary *delayedFetchersByHost;
@property(retain) NSDictionary *runningFetchersByHost;
- (void)abandonDispatcher;
@property double unusedSessionTimeout; // @synthesize unusedSessionTimeout=_unusedSessionTimeout;
- (void)resetSession;
@property _Bool reuseSession;
- (void)stopAllFetchers;
- (id)issuedFetchersWithRequestURL:(id)arg1;
- (id)issuedFetchers;
- (unsigned long long)numberOfDelayedFetchers;
- (unsigned long long)numberOfRunningFetchers;
- (unsigned long long)numberOfFetchers;
- (void)fetcherDidStop:(id)arg1;
- (void)stopFetcher:(id)arg1;
- (void)fetcherDidBeginFetching:(id)arg1;
- (void)fetcherDidCreateSession:(id)arg1;
- (id)delegateDispatcherForFetcher:(id)arg1;
- (void)startFetcher:(id)arg1;
- (_Bool)fetcherShouldBeginFetching:(id)arg1;
- (_Bool)isDelayingFetcher:(id)arg1;
- (void)addDelayedFetcher:(id)arg1 forHost:(id)arg2;
- (void)addRunningFetcher:(id)arg1 forHost:(id)arg2;
- (id)sessionDelegate;
- (id)sessionForFetcherCreation;
- (id)session;
- (id)fetcherWithURLString:(id)arg1;
- (id)fetcherWithURL:(id)arg1;
- (id)fetcherWithRequest:(id)arg1;
- (id)fetcherWithRequest:(id)arg1 fetcherClass:(Class)arg2;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionFetcherSessionDelegateDispatcher : NSObject <NSURLSessionDelegate>
{
GTMSessionFetcherService *_parentService;
NSURLSession *_session;
NSObject<OS_dispatch_semaphore> *_sessionCreationSemaphore;
NSMutableDictionary *_taskToFetcherMap;
NSTimer *_discardTimer;
double _discardInterval;
}

@property(readonly) NSObject<OS_dispatch_semaphore> *sessionCreationSemaphore; // @synthesize sessionCreationSemaphore=_sessionCreationSemaphore;
- (void).cxx_destruct;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 willCacheResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 needNewBodyStream:(CDUnknownBlockType)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didReceiveChallenge:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 didBecomeInvalidWithError:(id)arg2;
@property double discardInterval;
@property(retain) NSURLSession *session;
- (void)removeTaskFromMap:(id)arg1;
- (id)fetcherForTask:(id)arg1;
- (void)removeFetcher:(id)arg1;
- (void)setFetcher:(id)arg1 forTask:(id)arg2;
- (void)destroySessionAndTimer;
- (void)abandon;
- (void)discardTimerFired:(id)arg1;
- (void)destroyDiscardTimer;
- (void)startDiscardTimer;
@property(readonly, copy) NSString *description;
- (id)initWithParentService:(id)arg1 sessionDiscardInterval:(double)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface GTMSessionUploadFetcher : GTMSessionFetcher
{
GTMSessionFetcher *_chunkFetcher;
CDUnknownBlockType _delegateCompletionHandler;
NSObject<OS_dispatch_queue> *_delegateCallbackQueue;
long long _initialBodyLength;
long long _initialBodySent;
NSURL *_uploadLocationURL;
NSData *_uploadData;
NSFileHandle *_uploadFileHandle;
CDUnknownBlockType _uploadDataProvider;
long long _uploadFileLength;
NSString *_uploadMIMEType;
long long _chunkSize;
long long _uploadGranularity;
_Bool _isPaused;
_Bool _isRestartedUpload;
_Bool _shouldInitiateOffsetQuery;
_Bool _useBackgroundSessionOnChunkFetchers;
long long _currentOffset;
NSDictionary *_responseHeaders;
long long _statusCode;
GTMSessionFetcher *_fetcherInFlight;
_Bool _isSubdataGenerating;
NSURL *_uploadFileURL;
NSURLRequest *_lastChunkRequest;
}

+ (void)removePointer:(void *)arg1 fromPointerArray:(id)arg2;
+ (unsigned long long)uploadStatusFromResponseHeaders:(id)arg1;
+ (id)uploadFetchersForBackgroundSessions;
+ (id)uploadFetcherForSessionIdentifier:(id)arg1;
+ (id)uploadFetcherPointerArrayForBackgroundSessions;
+ (id)uploadFetcherWithRequest:(id)arg1 fetcherService:(id)arg2;
+ (id)uploadFetcherForSessionIdentifierMetadata:(id)arg1;
+ (id)uploadFetcherWithLocation:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3 fetcherService:(id)arg4;
+ (id)uploadFetcherWithRequest:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3 fetcherService:(id)arg4;
+ (void)load;
@property(retain) NSURLRequest *lastChunkRequest; // @synthesize lastChunkRequest=_lastChunkRequest;
@property(retain) GTMSessionFetcher *chunkFetcher; // @synthesize chunkFetcher=_chunkFetcher;
@property(readonly) CDUnknownBlockType delegateCompletionHandler; // @synthesize delegateCompletionHandler=_delegateCompletionHandler;
@property(readonly) NSObject<OS_dispatch_queue> *delegateCallbackQueue; // @synthesize delegateCallbackQueue=_delegateCallbackQueue;
@property long long currentOffset; // @synthesize currentOffset=_currentOffset;
@property long long chunkSize; // @synthesize chunkSize=_chunkSize;
@property(copy) NSString *uploadMIMEType; // @synthesize uploadMIMEType=_uploadMIMEType;
- (void).cxx_destruct;
- (_Bool)waitForCompletionWithTimeout:(double)arg1;
@property(readonly) GTMSessionFetcher *activeFetcher; // @dynamic activeFetcher;
@property(retain) NSURL *uploadLocationURL; // @synthesize uploadLocationURL=_uploadLocationURL;
@property long long statusCode; // @dynamic statusCode;
@property(retain) NSDictionary *responseHeaders; // @dynamic responseHeaders;
- (void)setUseBackgroundSession:(_Bool)arg1;
- (_Bool)useBackgroundSession;
- (void)stopFetching;
- (void)resumeFetching;
- (void)pauseFetching;
- (_Bool)isPaused;
- (void)retrieveUploadChunkGranularityFromResponseHeaders:(id)arg1;
- (void)invokeDelegateWithDidSendBytes:(long long)arg1 totalBytesSent:(long long)arg2 totalBytesExpectedToSend:(long long)arg3;
- (void)destroyChunkFetcher;
- (void)chunkFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (id)uploadFetcherWithProperties:(id)arg1 isQueryFetch:(_Bool)arg2;
- (id)uploadSessionIdentifierMetadata;
- (void)attachSendProgressBlockToChunkFetcher:(id)arg1;
- (void)beginChunkFetcher:(id)arg1 offset:(long long)arg2;
- (void)uploadNextChunkWithOffset:(long long)arg1 fetcherProperties:(id)arg2;
- (void)sendCancelUploadWithFetcherProperties:(id)arg1;
- (void)queryFetcher:(id)arg1 finishedWithData:(id)arg2 error:(id)arg3;
- (void)sendQueryForUploadOffsetWithFetcherProperties:(id)arg1;
- (void)uploadNextChunkWithOffset:(long long)arg1;
- (void)stopFetchReleasingCallbacks:(_Bool)arg1;
- (void)releaseUploadAndBaseCallbacks;
- (void)invokeFinalCallbackWithData:(id)arg1 error:(id)arg2 shouldInvalidateLocation:(_Bool)arg3;
- (_Bool)shouldReleaseCallbacksUponCompletion;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)beginChunkFetches;
- (void)beginFetchWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)setCompletionHandler:(CDUnknownBlockType)arg1;
- (id)prematureFailureErrorWithUserInfo:(id)arg1;
- (id)uploadChunkUnavailableErrorWithDescription:(id)arg1;
- (void)generateChunkSubdataFromFileURL:(id)arg1 offset:(long long)arg2 length:(long long)arg3 response:(CDUnknownBlockType)arg4;
- (void)generateChunkSubdataFromFileHandle:(id)arg1 offset:(long long)arg2 length:(long long)arg3 response:(CDUnknownBlockType)arg4;
- (void)generateChunkSubdataWithOffset:(long long)arg1 length:(long long)arg2 response:(CDUnknownBlockType)arg3;
- (void)setUploadFileLength:(long long)arg1;
- (long long)fullUploadLength;
- (void)setLocationURL:(id)arg1 uploadMIMEType:(id)arg2 chunkSize:(long long)arg3;
- (void)setupRequestHeaders;
@property(readonly, copy) CDUnknownBlockType uploadDataProvider;
- (void)setUploadDataLength:(long long)arg1 provider:(CDUnknownBlockType)arg2;
@property(retain) NSURL *uploadFileURL; // @synthesize uploadFileURL=_uploadFileURL;
@property(retain) NSFileHandle *uploadFileHandle; // @synthesize uploadFileHandle=_uploadFileHandle;
@property(retain) NSData *uploadData; // @synthesize uploadData=_uploadData;

@end

@interface GTMSessionFetcherLogViewController : UITableViewController
{
NSArray *logsFolderURLs_;
_Bool opensScrolledToEnd_;
CDUnknownBlockType callbackBlock_;
}

+ (id)controllerWithTarget:(id)arg1 selector:(SEL)arg2;
@property(copy, nonatomic) CDUnknownBlockType callbackBlock; // @synthesize callbackBlock=callbackBlock_;
- (void).cxx_destruct;
- (void)doneButtonClicked:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (id)shortenedNameForURL:(id)arg1;
- (void)setOpensScrolledToEnd:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithStyle:(long long)arg1;

@end

@interface GTMSessionFetcherLoggingWebViewController : UIViewController <UIWebViewDelegate>
{
_Bool opensScrolledToEnd_;
NSURL *htmlURL_;
}

- (void).cxx_destruct;
- (void)webViewDidFinishLoad:(id)arg1;
- (id)webView;
- (void)didTapBackButton:(id)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithURL:(id)arg1 title:(id)arg2 opensScrolledToEnd:(_Bool)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NIAInAppBillingProvider : NSObject <SKPaymentTransactionObserver, SKProductsRequestDelegate>
{
SKProductsRequest *_productsRequest;
NSObject<OS_dispatch_queue> *_workQueue;
_Bool _addedObserver;
shared_ptr_ec83ff60 _delegate;
NSMutableDictionary *_itemToProduct;
}

+ (id)formatPrice:(id)arg1;
@property(retain) NSMutableDictionary *itemToProduct; // @synthesize itemToProduct=_itemToProduct;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)productsRequest:(id)arg1 didReceiveResponse:(id)arg2;
- (void)paymentQueue:(id)arg1 removedTransactions:(id)arg2;
- (void)paymentQueue:(id)arg1 updatedTransactions:(id)arg2;
- (void)removeObserver;
- (void)addObserver;
- (id)getProductForItem:(id)arg1;
- (void)processTransactions:(id)arg1;
- (void)tryToCompleteOutstandingTransactions;
- (void)removeTransactions:(id)arg1;
- (void)finishTransaction:(id)arg1;
- (void)didProcessAppleBilling:(_Bool)arg1 transactions:(id)arg2;
- (void)completeOnePurchase:(id)arg1;
- (void)purchaseItem:(id)arg1 forUser:(id)arg2;
- (void)purchasableItems:(id)arg1;
@property(readonly) _Bool isTransactionInProgress;
@property(readonly) _Bool isBillingAvailable;
- (void)setDelegate:(const shared_ptr_ec83ff60 *)arg1;
- (void)dealloc;
- (id)initWithDelegate:(const shared_ptr_ec83ff60 *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface PurchasableItemDetails : NSObject
{
NSString *_itemId;
NSString *_title;
NSString *_itemDescription;
NSString *_price;
}

@property(readonly) NSString *price; // @synthesize price=_price;
@property(readonly) NSString *itemDescription; // @synthesize itemDescription=_itemDescription;
@property(readonly) NSString *title; // @synthesize title=_title;
@property(readonly) NSString *itemId; // @synthesize itemId=_itemId;
- (void).cxx_destruct;
- (id)init:(id)arg1 title:(id)arg2 description:(id)arg3 price:(id)arg4;

@end

@interface NIAIosAuthenticationManager : NSObject
{
GTMOAuth2Authentication *_auth;
NSString *_clientAuthToken;
GTMSessionFetcherService *_fetcherService;
}

- (void).cxx_destruct;
- (id)userEmail;
- (id)description;
- (void)getAccountOrLogin:(id)arg1 clientSecret:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)navigationController;
- (void)clearAuth;
- (id)defaultSourceString;
- (void)refreshIdTokenWithCompletion:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface NIAIosSignIn : GTMOAuth2SignIn
{
}

+ (id)googleAuthorizationURL;
+ (id)nativeClientRedirectURI;
- (_Bool)cookiesChanged:(id)arg1;
- (_Bool)titleChanged:(id)arg1;
- (id)parametersForWebRequest;
- (_Bool)startSigningIn;

@end

@interface NIAIosActivityManager : NSObject
{
struct Activity _userActivity;
CMMotionActivityManager *_activityManager;
NSOperationQueue *_activityQueue;
struct IosActivityProvider *_activityProvider;
}

@property(nonatomic) struct IosActivityProvider *activityProvider; // @synthesize activityProvider=_activityProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)handleActivityUpdate:(id)arg1;
- (int)mapConfidenceToInt:(long long)arg1;
- (void)setLocationProvider:(struct IosActivityProvider *)arg1;
- (void)dealloc;
- (void)checkAuthorization:(CDUnknownBlockType)arg1;
- (id)init;

@end

@interface NIAIosLocationManager : NSObject <CLLocationManagerDelegate>
{
struct LocationUpdate _locationProto;
CLLocationManager *_locationManager;
NSObject<OS_dispatch_queue> *_work_queue;
struct LocationProvider *_locationProvider;
struct LocationParameters _locationParameters;
}

@property(nonatomic) struct LocationParameters locationParameters; // @synthesize locationParameters=_locationParameters;
@property(nonatomic) struct LocationProvider *locationProvider; // @synthesize locationProvider=_locationProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (int)requestLocationPermissions;
- (void)stop;
- (void)startUpdating;
- (void)start;
- (double)desiredAccuracy;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface NIAIosSensorManager : NSObject
{
struct SensorUpdate _sensorProto;
CMMotionManager *_motionManager;
NSOperationQueue *_sensorQueue;
struct IosSensorProvider *_sensorProvider;
}

@property(nonatomic) struct IosSensorProvider *sensorProvider; // @synthesize sensorProvider=_sensorProvider;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)stop;
- (void)start;
- (void)processDeviceMotion:(id)arg1 error:(id)arg2;
- (void)dealloc;
- (id)init;

@end

@interface CRLegacyDeviceIdFinder : NSObject
{
NSString *_appId;
NSUserDefaults *_defaults;
}

+ (id)idFinderUsingAppId:(id)arg1 andUserDefaults:(id)arg2;
@property(retain) NSUserDefaults *defaults; // @synthesize defaults=_defaults;
@property(retain) NSString *appId; // @synthesize appId=_appId;
- (void).cxx_destruct;
- (id)getDeviceUUIDFromPasteboards;
- (id)getDeviceUUIDFromAppSettings;
- (id)lookupId;
- (id)initWithAppId:(id)arg1 andUserDefaults:(id)arg2;

@end

@interface CRCrashArchive : NSObject
{
unsigned long long _maxSavedCrashReports;
NSString *_baseCritterURL;
NSString *_crashDirectory;
NSMutableSet *_reportsInSendQueue;
CRReachability *_reachability;
CritterImpl *_critterImpl;
NSOperationQueue *_sendQueue;
CRPreferences *_storedState;
}

+ (id)crashReportDirectory;
@property(retain) CRPreferences *storedState; // @synthesize storedState=_storedState;
@property(retain) NSOperationQueue *sendQueue; // @synthesize sendQueue=_sendQueue;
@property __weak CritterImpl *critterImpl; // @synthesize critterImpl=_critterImpl;
@property(retain) CRReachability *reachability; // @synthesize reachability=_reachability;
@property(retain) NSMutableSet *reportsInSendQueue; // @synthesize reportsInSendQueue=_reportsInSendQueue;
@property(retain) NSString *crashDirectory; // @synthesize crashDirectory=_crashDirectory;
@property(retain) NSString *baseCritterURL; // @synthesize baseCritterURL=_baseCritterURL;
@property(nonatomic) unsigned long long maxOfflineCrashReports; // @synthesize maxOfflineCrashReports=_maxSavedCrashReports;
- (void).cxx_destruct;
- (void)deleteAllCrashReports;
- (void)deleteCrashReport:(id)arg1;
- (void)notifySendReportFailed:(id)arg1;
- (void)sendCrashReports;
- (_Bool)sendCrashReport:(id)arg1 withError:(id *)arg2;
- (_Bool)loadCrashInfoFromPath:(id)arg1 crashInfo:(id *)arg2 rawCrashData:(id *)arg3;
- (id)saveCrashInfo:(id)arg1 andRawCrashData:(id)arg2;
- (id)makeCrashInfoNameFor:(id)arg1;
- (id)makeCrashDataName;
- (id)pendingCrashReports;
- (void)dealloc;
- (void)registerForOnlineCallbacks;
- (void)reachabilityChanged:(id)arg1;
- (id)init;
- (id)initWithCritterImpl:(id)arg1 andStoredState:(id)arg2 andBaseURL:(id)arg3;

@end

@interface CRTransactionSender : NSObject
{
struct dispatch_queue_s *queue;
_Bool canResume;
_Bool _enabled;
_Bool _isLoaded;
_Bool _isReachable;
NSString *_critterTxnURL;
CRDirectoryTree *_directoryTree;
}

+ (id)sharedInstance;
@property(nonatomic) _Bool isReachable; // @synthesize isReachable=_isReachable;
@property(nonatomic) CRDirectoryTree *directoryTree; // @synthesize directoryTree=_directoryTree;
@property(retain, nonatomic) NSString *critterTxnURL; // @synthesize critterTxnURL=_critterTxnURL;
@property(nonatomic) _Bool isLoaded; // @synthesize isLoaded=_isLoaded;
- (void).cxx_destruct;
- (void)handleNotification:(id)arg1;
- (void)resume;
- (void)resumeFirstTime;
- (void)normalDelivery;
- (_Bool)normalWorkToDo;
- (void)sendReport:(id)arg1;
- (void)sendReportOnMainThread:(id)arg1;
- (void)sendDidFinish:(id)arg1;
- (id)init;
- (void)initNotifications;
- (void)initQueue;
- (void)initTxnURL;
- (void)initConfiguration;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;

@end

@interface CRNetStatDispatch : NSObject
{
struct dispatch_queue_s *_queue;
NSString *_ignoreEndpoint;
NSMutableArray *_blacklistFilters;
NSMutableArray *_otherFilters;
NSMutableArray *_observers;
}

@property(retain, nonatomic) NSMutableArray *observers; // @synthesize observers=_observers;
@property(retain) NSMutableArray *otherFilters; // @synthesize otherFilters=_otherFilters;
@property(retain) NSMutableArray *blacklistFilters; // @synthesize blacklistFilters=_blacklistFilters;
@property(retain) NSString *ignoreEndpoint; // @synthesize ignoreEndpoint=_ignoreEndpoint;
@property(nonatomic) struct dispatch_queue_s *queue; // @synthesize queue=_queue;
- (void).cxx_destruct;
- (void)registerObserver:(id)arg1;
- (void)synchronousLogNetworkRequest:(id)arg1;
- (void)logNetworkRequest:(id)arg1;
- (void)addFilter:(id)arg1;
- (void)dealloc;
- (id)initWithFilters:(id)arg1 andBaseURL:(id)arg2 andEndpoint:(id)arg3;

@end

@interface CRNSURLSessionDelegateProxy : NSProxy <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
id _delegate;
NSSet *_selectorsWeRespondTo;
}

@property(retain, nonatomic) NSSet *selectorsWeRespondTo; // @synthesize selectorsWeRespondTo=_selectorsWeRespondTo;
@property(readonly, nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didBecomeDownloadTask:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (id)initWithDelegate:(id)arg1;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CRUIWebViewDelegateProxy : NSProxy <UIWebViewDelegate>
{
id _delegate;
NSSet *_selectorsWeRespondTo;
}

+ (id)performSwizzledUIWebViewInitWithCoderSelector:(id)arg1 withCoder:(id)arg2;
+ (id)performSwizzledUIWebViewInitWithFrameSelector:(id)arg1 withFrame:(struct CGRect)arg2;
+ (void)performSwizzledUIWebViewSetDelegateSelector:(id)arg1 withProxy:(id)arg2;
+ (id)performSwizzledUIWebViewDelegateSelector:(id)arg1;
+ (void)setDelegateForUIWebView:(id)arg1 delegate:(id)arg2 dispatch:(id)arg3;
+ (id)delegateForUIWebView:(id)arg1 dispatch:(id)arg2;
+ (id)initWithCoderForUIWebView:(id)arg1 coder:(id)arg2 dispatch:(id)arg3;
+ (id)initWithFrameForUIWebView:(id)arg1 frame:(struct CGRect)arg2 dispatch:(id)arg3;
+ (id)proxyFromWebView:(id)arg1 dispatch:(id)arg2;
+ (_Bool)isInstrumented;
+ (void)uninstrumentUIWebView;
+ (void)traverseView:(id)arg1;
+ (void)traverseUI;
+ (void)instrumentUIWebViewWithDispatch:(id)arg1;
+ (void)swizzleUIWebViewSetDelegateWithDispatch:(id)arg1;
+ (void)swizzleUIWebViewDelegateWithDispatch:(id)arg1;
+ (void)swizzleUIWebViewInitWithCoderAndDispatch:(id)arg1;
+ (void)swizzleUIWebViewInitWithFrameAndDispatch:(id)arg1;
+ (void)replaceUIWebViewmethod:(SEL)arg1 withSwizzledSelector:(SEL)arg2 implementedBlock:(id)arg3;
+ (_Bool)respondsToSelector:(SEL)arg1;
@property(retain, nonatomic) NSSet *selectorsWeRespondTo; // @synthesize selectorsWeRespondTo=_selectorsWeRespondTo;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)addAssociationToWebView:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (id)initWithDelegate:(id)arg1 dispatch:(id)arg2;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CRTransactionReporter : NSObject
{
struct dispatch_queue_s *queue;
struct dispatch_group_s *group;
_Bool canResume;
int finishedCount;
_Bool batching;
_Bool _isForegrounded;
_Bool _isLoaded;
_Bool _shuttingdown;
int _transactionCounter;
NSDictionary *_appState;
double _defaultTimeout;
NSDictionary *_thresholds;
CRDirectoryTree *_directoryTree;
CRSequenceNumber *_normalCounter;
NSMutableDictionary *_transactionsDictionary;
double _endTime;
NSString *_cr_endTimeString;
double _interval;
}

+ (id)sharedInstance;
@property(nonatomic) double interval; // @synthesize interval=_interval;
@property(copy, nonatomic) NSString *cr_endTimeString; // @synthesize cr_endTimeString=_cr_endTimeString;
@property(readonly, nonatomic) double endTime; // @synthesize endTime=_endTime;
@property(retain, nonatomic) NSMutableDictionary *transactionsDictionary; // @synthesize transactionsDictionary=_transactionsDictionary;
@property(nonatomic) _Bool shuttingdown; // @synthesize shuttingdown=_shuttingdown;
@property(retain, nonatomic) CRSequenceNumber *normalCounter; // @synthesize normalCounter=_normalCounter;
@property(nonatomic) int transactionCounter; // @synthesize transactionCounter=_transactionCounter;
@property(nonatomic) CRDirectoryTree *directoryTree; // @synthesize directoryTree=_directoryTree;
@property(nonatomic) _Bool isLoaded; // @synthesize isLoaded=_isLoaded;
@property(readonly, nonatomic) NSDictionary *thresholds; // @synthesize thresholds=_thresholds;
@property(readonly, nonatomic) double defaultTimeout; // @synthesize defaultTimeout=_defaultTimeout;
@property(retain, nonatomic) NSDictionary *appState; // @synthesize appState=_appState;
- (void).cxx_destruct;
- (void)autoTransaction:(id)arg1 withBeginTime:(double)arg2 withEndTime:(double)arg3;
- (void)disableSampling;
- (void)enableSamplingWithFrequency:(id)arg1 withDefaultTimeout:(double)arg2 withThresholds:(id)arg3;
- (id)crashedTransactions:(id)arg1;
@property(readonly, nonatomic) _Bool isForegrounded; // @synthesize isForegrounded=_isForegrounded;
- (void)handleNotification:(id)arg1;
- (void)foregroundBackgroundCheck:(id)arg1;
- (void)backgrounded;
- (void)foregrounded;
- (void)background;
- (void)foreground;
- (void)cancelTransaction:(id)arg1;
- (void)addTransaction:(id)arg1;
- (id)transactionForName:(id)arg1;
- (id)transactionForId:(int)arg1;
- (unsigned long long)transactionCount;
- (id)allTransactions;
- (void)move:(id)arg1 fromDirectory:(id)arg2 toDirectory:(id)arg3;
- (void)remove:(id)arg1 fromDirectory:(id)arg2;
- (void)save:(id)arg1;
- (id)path:(id)arg1 forDirectory:(id)arg2;
- (id)path:(id)arg1;
- (id)crashTransactionsOnPluginException;
- (id)crashedJSONFrom:(id)arg1;
- (void)resume;
- (void)resumeFirstTime;
- (void)load;
- (void)normalDelivery;
- (void)normalWork;
- (void)normalBatch;
- (void)normalBatchBarrier;
- (void)normalReport;
- (double)normalReportEndTimeFor:(id)arg1;
- (double)normalReportBeginTimeFor:(id)arg1;
- (id)normalReportTransactions;
- (id)normalJSONFrom:(id)arg1;
- (_Bool)normalWorkToDo;
- (_Bool)normalWorkInNormalDirectoryToDo;
- (int)newTransactionId;
- (void)initCounters;
- (void)dealloc;
- (void)reset;
- (id)init;
- (void)initConfiguration;
- (void)initNotifications;
- (void)initQueue;
- (void)cr_setEndTime:(double)arg1;

@end

@interface CRCrash : NSObject
{
CRRawCrash *_rawCrash;
NSArray *_transactions;
NSDictionary *_userBreadcrumbs;
NSArray *_systemBreadcrumbs;
NSArray *_endpoints;
NSString *_appID;
NSString *_libVersion;
NSString *_deviceID;
NSDictionary *_storedPrefs;
NSDictionary *_storedDeviceDict;
}

+ (id)crashWithRawCrash:(id)arg1 andStoredDevice:(id)arg2 andStoredPrefs:(id)arg3 andTransactions:(id)arg4 andUserBreadcrumbs:(id)arg5 andSystemBreadcrumbs:(id)arg6 andEndpoints:(id)arg7 appID:(id)arg8 libVersion:(id)arg9 deviceID:(id)arg10;
@property(retain) NSDictionary *storedDeviceDict; // @synthesize storedDeviceDict=_storedDeviceDict;
@property(retain) NSDictionary *storedPrefs; // @synthesize storedPrefs=_storedPrefs;
@property(retain) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(retain) NSString *appID; // @synthesize appID=_appID;
@property(retain) NSArray *endpoints; // @synthesize endpoints=_endpoints;
@property(retain) NSArray *systemBreadcrumbs; // @synthesize systemBreadcrumbs=_systemBreadcrumbs;
@property(retain) NSDictionary *userBreadcrumbs; // @synthesize userBreadcrumbs=_userBreadcrumbs;
@property(retain) NSArray *transactions; // @synthesize transactions=_transactions;
@property(retain) CRRawCrash *rawCrash; // @synthesize rawCrash=_rawCrash;
- (void).cxx_destruct;
- (void)addDataFromRawCrashTo:(id)arg1;
- (void)addAppStateFromRawCrashTo:(id)arg1;
- (id)makeAppStateDict;
- (id)getRawCrashData;
- (id)getMetadata;
- (id)initWithRawCrash:(id)arg1 andStoredDevice:(id)arg2 andStoredPrefs:(id)arg3 andTransactions:(id)arg4 andUserBreadcrumbs:(id)arg5 andSystemBreadcrumbs:(id)arg6 andEndpoints:(id)arg7 appID:(id)arg8 libVersion:(id)arg9 deviceID:(id)arg10;

@end

@interface CRRawCrash : NSObject
{
NSData *_plcData;
NSDate *_crashDate;
NSString *_imageUUID;
NSString *_binaryImageName;
NSString *_binaryImageArchitecture;
NSString *_exceptionName;
NSString *_exceptionReason;
NSString *_reportedAt;
NSString *_appVersion;
NSNumber *_memUsage;
NSNumber *_diskSpaceFree;
}

+ (id)crashWithPLCData:(id)arg1;
@property(retain) NSNumber *diskSpaceFree; // @synthesize diskSpaceFree=_diskSpaceFree;
@property(retain) NSNumber *memUsage; // @synthesize memUsage=_memUsage;
@property(retain) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(retain) NSString *reportedAt; // @synthesize reportedAt=_reportedAt;
@property(retain) NSString *exceptionReason; // @synthesize exceptionReason=_exceptionReason;
@property(retain) NSString *exceptionName; // @synthesize exceptionName=_exceptionName;
@property(retain) NSString *binaryImageArchitecture; // @synthesize binaryImageArchitecture=_binaryImageArchitecture;
@property(retain) NSString *binaryImageName; // @synthesize binaryImageName=_binaryImageName;
@property(retain) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(retain) NSDate *crashDate; // @synthesize crashDate=_crashDate;
@property(retain) NSData *plcData; // @synthesize plcData=_plcData;
- (void).cxx_destruct;
- (_Bool)populateAppStateDataFromPLCrashReport:(id)arg1;
- (_Bool)populateWithPLCrashData:(id)arg1;
- (id)initWithPLCrashData:(id)arg1;

@end

@interface CRUIViewMonitor : NSObject
{
}

+ (_Bool)isInstrumented;
+ (void)instrumentUIViewControllerViewWillDisappearMethod;
+ (void)instrumentUIViewControllerViewWillAppearMethod;
+ (void)uninstrumentUIViewLoadMonitoring;
+ (void)setupUIViewLoadMonitoring;

@end

@interface CRExceptionHandler : NSObject
{
CritterImpl *_critterDelegate;
NSString *_appID;
NSString *_libVersion;
NSString *_deviceID;
NSString *_baseURL;
NSString *_binaryImageUUID;
NSString *_binaryImageName;
NSString *_binaryImageArch;
NSDate *_lastSendTime;
NSMutableArray *_batchedExceptions;
}

@property(retain) NSMutableArray *batchedExceptions; // @synthesize batchedExceptions=_batchedExceptions;
@property(retain) NSDate *lastSendTime; // @synthesize lastSendTime=_lastSendTime;
@property(retain) NSString *binaryImageArch; // @synthesize binaryImageArch=_binaryImageArch;
@property(retain) NSString *binaryImageName; // @synthesize binaryImageName=_binaryImageName;
@property(retain) NSString *binaryImageUUID; // @synthesize binaryImageUUID=_binaryImageUUID;
@property(retain) NSString *baseURL; // @synthesize baseURL=_baseURL;
@property(retain) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(retain) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(retain) NSString *appID; // @synthesize appID=_appID;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
- (void).cxx_destruct;
- (void)sendBatch;
- (id)makeExceptionDictFromException:(id)arg1 andName:(id)arg2 andReason:(id)arg3 andUserBreadcrumbs:(id)arg4 andSystemBreadcrumbs:(id)arg5 andEndpoints:(id)arg6 andAppState:(id)arg7;
- (_Bool)logHandledException:(id)arg1 withUserBreadcrumbs:(id)arg2 andSystemBreadcrumbs:(id)arg3 andEndpoints:(id)arg4 andName:(id)arg5 andReason:(id)arg6 andAppState:(id)arg7;
- (id)initWithAppID:(id)arg1 andLibVersion:(id)arg2 andDeviceID:(id)arg3 andCritterDelegate:(id)arg4 andBaseURL:(id)arg5;

@end

@interface CRRequestState : NSObject
{
double _timestamp;
NSString *_url;
NSString *_method;
NSString *_errorString;
long long _activeNetwork;
double _latency;
long long _errorType;
long long _responseCode;
unsigned long long _bytesSent;
unsigned long long _bytesRead;
double _latitude;
double _longitude;
NSString *_MIMEType;
}

+ (long long)connectionErrorType:(id)arg1;
@property(copy, nonatomic) NSString *MIMEType; // @synthesize MIMEType=_MIMEType;
@property(nonatomic) double longitude; // @synthesize longitude=_longitude;
@property(nonatomic) double latitude; // @synthesize latitude=_latitude;
@property(nonatomic) unsigned long long bytesRead; // @synthesize bytesRead=_bytesRead;
@property(nonatomic) unsigned long long bytesSent; // @synthesize bytesSent=_bytesSent;
@property(nonatomic) long long responseCode; // @synthesize responseCode=_responseCode;
@property(nonatomic) long long errorType; // @synthesize errorType=_errorType;
@property(nonatomic) double latency; // @synthesize latency=_latency;
@property(nonatomic) long long activeNetwork; // @synthesize activeNetwork=_activeNetwork;
@property(copy, nonatomic) NSString *errorString; // @synthesize errorString=_errorString;
@property(copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(copy, nonatomic) NSString *url; // @synthesize url=_url;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (void)setLocation:(id)arg1;
- (id)makeArrayUsingDefault:(id)arg1;
- (id)plistSafeArray;
- (id)jsonArray;
- (void)connectionFailedWithError:(id)arg1;
- (void)onReceivedData:(unsigned long long)arg1;
- (void)setResponseCodeForResponse:(id)arg1;
- (void)initialResponseReceivedAt:(double)arg1;
- (void)sentRequestAt:(double)arg1;
- (id)initWithRequest:(id)arg1;
- (id)init;

@end

@interface CRPart : NSObject
{
NSString *_name;
NSString *_filename;
NSString *_contentType;
}

@property(retain) NSString *contentType; // @synthesize contentType=_contentType;
@property(retain) NSString *filename; // @synthesize filename=_filename;
@property(retain) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)serializeTo:(id)arg1;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andContentType:(id)arg3;

@end

@interface CRJSONPart : CRPart
{
NSDictionary *_dataDict;
}

@property(retain) NSDictionary *dataDict; // @synthesize dataDict=_dataDict;
- (void).cxx_destruct;
- (void)serializeTo:(id)arg1;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andDict:(id)arg3;

@end

@interface CRDataPart : CRPart
{
NSData *_partData;
}

@property(retain) NSData *partData; // @synthesize partData=_partData;
- (void).cxx_destruct;
- (void)serializeTo:(id)arg1;
- (id)initWithName:(id)arg1 andFilename:(id)arg2 andData:(id)arg3;

@end

@interface CRCrashConnectionHandler : CRConnectionHandler
{
NSString *_path;
CRCrashArchive *_crashArchive;
}

@property(retain) CRCrashArchive *crashArchive; // @synthesize crashArchive=_crashArchive;
@property(retain) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;
- (id)initWithCritterDelegate:(id)arg1 andCrashArchive:(id)arg2 andReportPath:(id)arg3;

@end

@interface CRConnectionHandler : NSObject
{
CritterImpl *_delegate;
NSMutableData *_dataReceived;
NSURLResponse *_response;
}

+ (id)handlerWithDelegate:(id)arg1;
@property(retain) NSURLResponse *response; // @synthesize response=_response;
@property(retain) NSMutableData *dataReceived; // @synthesize dataReceived=_dataReceived;
@property(readonly) CritterImpl *delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)dataReceivedAsString;
- (_Bool)receivedErrorResponse;
- (long long)statusCode;
- (void)sendRequest:(id)arg1;
- (void)doSendRequest:(id)arg1;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)init;
- (id)initWithCritterDelegate:(id)arg1;

@end

@interface CRDetectedClass : NSObject
{
_Bool _isNSObjectSubclass;
_Bool _isWebViewSubclass;
_Bool _isViewControllerSubclass;
NSString *_name;
}

+ (id)detectedClassWithFoundClass:(const struct cr_found_class_t *)arg1;
@property(readonly, nonatomic) _Bool isViewControllerSubclass; // @synthesize isViewControllerSubclass=_isViewControllerSubclass;
@property(readonly, nonatomic) _Bool isWebViewSubclass; // @synthesize isWebViewSubclass=_isWebViewSubclass;
@property(readonly, nonatomic) _Bool isNSObjectSubclass; // @synthesize isNSObjectSubclass=_isNSObjectSubclass;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (Class)getClass;
- (id)initWithFoundClass:(const struct cr_found_class_t *)arg1;

@end

@interface CRRequest : NSObject
{
int _requestType;
NSObject *_payload;
NSString *_baseURL;
NSString *_endpoint;
NSMutableArray *_parts;
}

@property(retain) NSMutableArray *parts; // @synthesize parts=_parts;
@property(copy) NSString *endpoint; // @synthesize endpoint=_endpoint;
@property(copy) NSString *baseURL; // @synthesize baseURL=_baseURL;
@property(retain) NSObject *payload; // @synthesize payload=_payload;
- (void).cxx_destruct;
- (id)buildPOSTRequest;
- (id)buildMultipartRequest;
- (id)buildURIEncodedRequest;
- (id)buildJSONRequest;
- (id)getURLRequest;
- (void)addPart:(id)arg1;
- (id)initWithBaseURL:(id)arg1 andEndPoint:(id)arg2 andRequestType:(int)arg3;

@end

@interface CRUserMetadataConnectionHandler : CRConnectionHandler
{
}

- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;

@end

@interface CRAppLoadedHandler : CRConnectionHandler
{
}

- (void)useStoredSettings;
- (void)receivedRateMeSettings:(id)arg1;
- (void)receivedSettings:(id)arg1;
- (void)recievedInternalCrashReporting:(id)arg1;
- (void)processResponse:(id)arg1;
- (void)handleError:(id)arg1;
- (void)handleResponse:(long long)arg1 andData:(id)arg2;

@end

@interface CRNetCollector : NSObject <CRNetStatObserver>
{
unsigned long long _sampleState;
unsigned long long _sessionNum;
NSMutableArray *_apmEndpoints;
NSTimer *_uploadTimer;
CritterImpl *_critterDelegate;
NSString *_netURL;
NSString *_netEndpoint;
NSString *_appID;
NSString *_appVersion;
NSString *_deviceID;
NSString *_libVersion;
NSString *_carrier;
NSString *_platformName;
NSString *_systemName;
NSString *_systemVersion;
NSNumber *_mobileCountryCode;
NSNumber *_mobileNetworkCode;
}

@property(copy) NSNumber *mobileNetworkCode; // @synthesize mobileNetworkCode=_mobileNetworkCode;
@property(copy) NSNumber *mobileCountryCode; // @synthesize mobileCountryCode=_mobileCountryCode;
@property(copy) NSString *systemVersion; // @synthesize systemVersion=_systemVersion;
@property(copy) NSString *systemName; // @synthesize systemName=_systemName;
@property(copy) NSString *platformName; // @synthesize platformName=_platformName;
@property(copy) NSString *carrier; // @synthesize carrier=_carrier;
@property(copy) NSString *libVersion; // @synthesize libVersion=_libVersion;
@property(copy) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(copy) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(copy) NSString *appID; // @synthesize appID=_appID;
@property(copy) NSString *netEndpoint; // @synthesize netEndpoint=_netEndpoint;
@property(copy) NSString *netURL; // @synthesize netURL=_netURL;
@property CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property NSTimer *uploadTimer; // @synthesize uploadTimer=_uploadTimer;
@property(retain) NSMutableArray *apmEndpoints; // @synthesize apmEndpoints=_apmEndpoints;
- (void).cxx_destruct;
- (void)sendNetworkData;
- (void)clearCollectionTimer;
- (void)resetSampling:(id)arg1;
- (void)enableSamplingWithFrequencyInternal:(id)arg1;
- (void)collectOnlyMode;
- (void)disableSampling;
- (void)enableSamplingWithFrequency:(id)arg1;
- (void)logNetworkRequest:(id)arg1;
- (void)dealloc;
- (void)reset;
- (id)initWithCritterDelegate:(id)arg1 andNetDataURL:(id)arg2 andNetDataEndpoint:(id)arg3 andAppID:(id)arg4 andAppVersion:(id)arg5 andDeviceId:(id)arg6 andLibraryVersion:(id)arg7 andSessionNum:(unsigned long long)arg8 andDevice:(id)arg9;

@end

@interface CRBreadcrumbsArchive : NSObject
{
unsigned int _maxCount;
NSMutableArray *_breadcrumbs;
NSMutableArray *_reservedBreadcrumbs;
CRDirectoryTree *_directoryTree;
NSString *_nameDirectory;
NSFileHandle *_fileHandle;
NSFileHandle *_reservedFileHandle;
NSString *_path0;
NSString *_path1;
NSString *_pathToReservedBreadcrumbs;
unsigned long long _breadcrumbCount;
unsigned long long _countOnActiveFile;
}

+ (id)convertArrayToUserBreadcrumbFormat:(id)arg1;
@property(nonatomic) unsigned long long countOnActiveFile; // @synthesize countOnActiveFile=_countOnActiveFile;
@property(nonatomic) unsigned long long breadcrumbCount; // @synthesize breadcrumbCount=_breadcrumbCount;
@property(nonatomic) unsigned int maxCount; // @synthesize maxCount=_maxCount;
@property(copy, nonatomic) NSString *pathToReservedBreadcrumbs; // @synthesize pathToReservedBreadcrumbs=_pathToReservedBreadcrumbs;
@property(copy, nonatomic) NSString *path1; // @synthesize path1=_path1;
@property(copy, nonatomic) NSString *path0; // @synthesize path0=_path0;
@property(retain) NSFileHandle *reservedFileHandle; // @synthesize reservedFileHandle=_reservedFileHandle;
@property(retain) NSFileHandle *fileHandle; // @synthesize fileHandle=_fileHandle;
@property(copy, nonatomic) NSString *nameDirectory; // @synthesize nameDirectory=_nameDirectory;
@property(nonatomic) __weak CRDirectoryTree *directoryTree; // @synthesize directoryTree=_directoryTree;
@property(retain, nonatomic) NSMutableArray *reservedBreadcrumbs; // @synthesize reservedBreadcrumbs=_reservedBreadcrumbs;
@property(retain, nonatomic) NSMutableArray *breadcrumbs; // @synthesize breadcrumbs=_breadcrumbs;
- (void).cxx_destruct;
- (unsigned long long)path1FileSize;
- (unsigned long long)path0FileSize;
- (id)readBreadcrumbs;
- (void)saveBreadcrumbs;
- (void)clearBreadcrumbsOnDisk;
- (void)clearBreadcrumbs;
- (void)readBreadcrumbsFromFile:(id)arg1 intoArray:(id)arg2;
- (_Bool)isPlausibleBreadcrumb:(id)arg1;
- (id)extractRecentUserBreadcrumbs;
- (id)recentBreadcrumbs;
- (void)addBreadcrumb:(int)arg1 withObject:(id)arg2;
- (void)addSessionStartBreadcrumb;
- (void)addBreadcrumb:(int)arg1 withObject:(id)arg2 withTimestamp:(id)arg3;
- (void)clearAndAddBreadcrumbToReservedFile:(id)arg1;
- (void)addBreadcrumbToFile:(id)arg1;
- (void)addBreadcrumbOpenFile:(id)arg1;
- (void)addBreadcrumbShuffleFiles;
- (void)clearAndAddBreadcrumbToReservedArray:(id)arg1;
- (void)addBreadcrumbToArray:(id)arg1;
- (id)initWithName:(id)arg1 maxCount:(unsigned int)arg2;

@end

@interface CRPreferences : NSObject
{
NSString *_critterKey;
}

@property(retain, nonatomic) NSString *critterKey; // @synthesize critterKey=_critterKey;
- (void).cxx_destruct;
- (void)storeValue:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3;
- (void)storeValue:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3 wasWritten:(_Bool *)arg4;
- (void)doStoreValue:(id)arg1 forKey:(id)arg2 forDictionary:(id)arg3 wasWritten:(_Bool *)arg4;
- (void)clearValueForKey:(id)arg1 andDictionary:(id)arg2;
- (id)getValueWithKey:(id)arg1 andDictionaryName:(id)arg2;
- (id)getDict:(id)arg1;
- (id)getRootDict;
- (id)describe;
- (void)reset;
- (id)initWithAppId:(id)arg1;

@end

@interface CRDevice : NSObject
{
NSMutableDictionary *_deviceInfo;
}

+ (id)deviceWithDummyInfo;
+ (id)deviceFromPersistentState:(id)arg1;
+ (id)deviceFromCurrentDevice;
@property(copy, nonatomic) NSMutableDictionary *deviceInfo; // @synthesize deviceInfo=_deviceInfo;
- (void).cxx_destruct;
- (void)updateOrientation;
- (_Bool)isEqual:(id)arg1;
- (void)flushToPersistentState:(id)arg1;
- (id)description;
- (id)asDictionary;
- (id)memoryUsage;
- (id)freeDiskSpace;
- (id)batteryLevel;
- (id)locale;
- (id)model;
- (id)mobileNetworkCode;
- (id)mobileCountryCode;
- (id)carrier;
- (id)systemVersion;
- (id)systemName;
- (id)platform;
- (id)initFromPersistentState:(id)arg1;
- (id)initFromCurrentDevice;
- (id)initFromDeviceInfoDictionary:(id)arg1;

@end

@interface CRReachability : NSObject
{
_Bool localWiFiRef;
_Bool _scheduled;
struct __SCNetworkReachability *_reachabilityRef;
NSString *_notificationCenterKey;
}

+ (id)reachabilityForWiFi;
+ (id)reachabilityForWiFiWithNotificationKey:(id)arg1;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityForHostName:(id)arg1;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1 withKey:(id)arg2;
+ (id)reachabilityForHostName:(id)arg1 withNotificationKey:(id)arg2;
@property(retain) NSString *notificationCenterKey; // @synthesize notificationCenterKey=_notificationCenterKey;
- (void).cxx_destruct;
- (id)currentReachabilityStatusString;
- (int)currentReachabilityStatus;
- (_Bool)connectionRequired;
- (void)stopNotifier;
- (_Bool)startNotifier;
- (void)dealloc;
- (id)initWithNotificationKey:(id)arg1;

@end

@interface CRAppInfo : NSObject
{
_Bool _hasAlternateVersion;
NSNumber *_isPirated;
NSString *_bundleVersion;
NSString *_marketingVersion;
NSString *_bundleIdentifier;
NSString *_alternateVersion;
}

+ (id)appInfo;
@property(retain) NSString *alternateVersion; // @synthesize alternateVersion=_alternateVersion;
@property(readonly) _Bool hasAlternateVersion; // @synthesize hasAlternateVersion=_hasAlternateVersion;
@property(readonly) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(readonly) NSString *marketingVersion; // @synthesize marketingVersion=_marketingVersion;
@property(readonly) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(readonly) NSNumber *isPirated; // @synthesize isPirated=_isPirated;
- (void).cxx_destruct;
- (id)appVersion;
- (id)init;

@end

@interface CRNSURLSessionProxy : NSProxy
{
NSURLSession *_session;
CRNetStatDispatch *_dispatch;
}

+ (_Bool)isInstrumented;
+ (void)uninstrumentNSURLSession;
+ (void)instrumentNSURLSessionWithDispatch:(id)arg1;
@property(readonly, nonatomic) CRNetStatDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(readonly, nonatomic) NSURLSession *session; // @synthesize session=_session;
- (void).cxx_destruct;
- (id)downloadTaskWithResumeData:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)downloadTaskWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)downloadTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)downloadTaskWithResumeData:(id)arg1;
- (id)downloadTaskWithURL:(id)arg1;
- (id)downloadTaskWithRequest:(id)arg1;
- (id)dataTaskWithRequest:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)dataTaskWithURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)dataTaskWithRequest:(id)arg1;
- (id)dataTaskWithURL:(id)arg1;
- (id)debugDescription;
- (id)description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)initWithSession:(id)arg1 dispatch:(id)arg2;

@end

@interface CRTest : NSObject
{
_Bool _testing;
NSMutableArray *_requests;
}

+ (id)requests;
+ (id)findRequest:(id)arg1;
+ (void)sendRequest:(id)arg1;
+ (void)tearDown;
+ (void)setUp;
+ (_Bool)testing;
+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableArray *requests; // @synthesize requests=_requests;
@property(nonatomic) _Bool testing; // @synthesize testing=_testing;
- (void).cxx_destruct;

@end

@interface CRCurrentConnectivity : NSObject
{
}

+ (void)setInternetConnectivity:(_Bool)arg1;
+ (void)setWifiStatus:(_Bool)arg1;
+ (long long)activeNetwork;
+ (void)reset;

@end

@interface CRPluginException : NSObject
{
int _crExceptionType;
NSString *_name;
NSString *_reason;
NSString *_platform;
NSString *_subplatform;
NSString *_stacktrace;
}

@property(retain, nonatomic) NSString *stacktrace; // @synthesize stacktrace=_stacktrace;
@property(readonly, nonatomic) int crExceptionType; // @synthesize crExceptionType=_crExceptionType;
@property(readonly, nonatomic) NSString *subplatform; // @synthesize subplatform=_subplatform;
@property(readonly, nonatomic) NSString *platform; // @synthesize platform=_platform;
@property(readonly, nonatomic) NSString *reason; // @synthesize reason=_reason;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)stackframes;
- (id)initWithName:(id)arg1 reason:(id)arg2 stacktrace:(id)arg3 exceptionType:(int)arg4 platformId:(int)arg5;

@end

@interface CRThrottle : NSObject
{
unsigned long long _maxTokens;
double _timeWindow;
double _tokensAccumulated;
NSDate *_lastEventTime;
}

@property(retain, nonatomic) NSDate *lastEventTime; // @synthesize lastEventTime=_lastEventTime;
@property(nonatomic) double tokensAccumulated; // @synthesize tokensAccumulated=_tokensAccumulated;
@property(nonatomic) double timeWindow; // @synthesize timeWindow=_timeWindow;
@property(nonatomic) unsigned long long maxTokens; // @synthesize maxTokens=_maxTokens;
- (void).cxx_destruct;
- (_Bool)tryEvent;
- (id)initWithMaxEvents:(unsigned long long)arg1 perUnitTime:(double)arg2;

@end

@interface CRAppLocator : NSObject
{
NSString *_apiURL;
NSString *_apmURL;
NSString *_appLoadURL;
NSString *_txnURL;
}

@property(readonly, copy, nonatomic) NSString *txnURL; // @synthesize txnURL=_txnURL;
@property(readonly, copy, nonatomic) NSString *appLoadURL; // @synthesize appLoadURL=_appLoadURL;
@property(readonly, copy, nonatomic) NSString *apmURL; // @synthesize apmURL=_apmURL;
@property(readonly, copy, nonatomic) NSString *apiURL; // @synthesize apiURL=_apiURL;
- (void).cxx_destruct;
- (id)getDomainFromAppId:(id)arg1;
- (id)initWithAppId:(id)arg1;

@end

@interface CRTransaction : NSObject
{
_Bool _cr_isForegrounded;
int _state;
int _value;
int _transactionId;
double _timeout;
NSDictionary *_metadata;
double _beginTime;
double _endTime;
double _eyeTime;
double _cr_foregroundTime;
NSString *_name;
NSString *_cr_beginTimeString;
NSString *_cr_endTimeString;
NSString *_cr_foregroundTimeString;
NSTimer *_cr_timer;
}

+ (id)transactionForName:(id)arg1;
+ (id)transactionForId:(int)arg1;
+ (id)allTransactions;
@property(retain, nonatomic) NSTimer *cr_timer; // @synthesize cr_timer=_cr_timer;
@property(nonatomic) _Bool cr_isForegrounded; // @synthesize cr_isForegrounded=_cr_isForegrounded;
@property(copy, nonatomic) NSString *cr_foregroundTimeString; // @synthesize cr_foregroundTimeString=_cr_foregroundTimeString;
@property(copy, nonatomic) NSString *cr_endTimeString; // @synthesize cr_endTimeString=_cr_endTimeString;
@property(copy, nonatomic) NSString *cr_beginTimeString; // @synthesize cr_beginTimeString=_cr_beginTimeString;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) int transactionId; // @synthesize transactionId=_transactionId;
- (void).cxx_destruct;
- (void)cr_removeTimer;
- (void)cr_removeTimerOnMainThread;
- (void)cr_timerFired:(id)arg1;
- (void)cr_createTimer:(id)arg1;
- (void)cr_createTimerOnMainThread;
- (void)cr_background:(double)arg1;
- (void)cr_foreground:(double)arg1;
- (id)objectForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (_Bool)cr_legalMetadataKey:(id)arg1;
- (_Bool)cr_legalMetadataObject:(id)arg1;
- (id)cr_toArray;
- (id)cr_toJSONString;
- (void)cr_transition:(int)arg1;
- (_Bool)cr_isFinal;
- (void)cancel;
- (void)crash;
- (void)fail;
- (void)end;
- (void)begin;
- (void)dealloc;
- (id)initFromFile:(id)arg1;
- (id)initAuto:(id)arg1 withBeginTime:(double)arg2 withEndTime:(double)arg3;
- (id)init:(id)arg1 withValue:(int)arg2;
- (id)init:(id)arg1;
@property(nonatomic) double cr_foregroundTime; // @synthesize cr_foregroundTime=_cr_foregroundTime;
@property(readonly, nonatomic) double eyeTime; // @synthesize eyeTime=_eyeTime;
- (void)cr_setEndTime:(double)arg1;
@property(readonly, nonatomic) double endTime; // @synthesize endTime=_endTime;
- (void)cr_setBeginTime:(double)arg1;
@property(readonly, nonatomic) double beginTime; // @synthesize beginTime=_beginTime;
@property(readonly, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(nonatomic) int value; // @synthesize value=_value;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
- (double)clampTimeout:(double)arg1;
- (void)cr_setState:(int)arg1 atTime:(double)arg2;
@property(readonly, nonatomic) int state; // @synthesize state=_state;

@end

@interface CRAppRater : NSObject
{
unsigned long long _appLoadCount;
CRRateAppAlert *_rateMeAlert;
CritterImpl *_critterDelegate;
CRPreferences *_storedState;
}

@property(retain) CRPreferences *storedState; // @synthesize storedState=_storedState;
@property __weak CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property(retain) CRRateAppAlert *rateMeAlert; // @synthesize rateMeAlert=_rateMeAlert;
- (void).cxx_destruct;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)openAppStore;
- (void)incrementAppLoadCount;
- (void)resetRateMeSettings;
- (_Bool)shouldResetRateMeSettings;
- (_Bool)shouldDisplayRateMeAlertWithDict:(id)arg1;
- (void)persistItunesIdIfPresent:(id)arg1;
- (void)handleRateMeSettings:(id)arg1;
- (void)appLoadedWithLaunch:(_Bool)arg1;
- (id)initWithStoredState:(id)arg1 andCritterDelegate:(id)arg2;

@end

@interface Crittercism : NSObject
{
CritterImpl *_critter;
}

+ (void)cr_cantFindTransaction:(id)arg1;
+ (void)resetSharedCritter;
+ (id)sharedCritter;
+ (void)logPluginException:(id)arg1;
+ (long long)loggingLevel;
+ (void)setLoggingLevel:(long long)arg1;
+ (void)setValue:(int)arg1 forTransaction:(id)arg2;
+ (void)sendAppLoadData;
+ (int)valueForTransaction:(id)arg1;
+ (void)failTransaction:(id)arg1;
+ (void)endTransaction:(id)arg1;
+ (void)cancelTransaction:(id)arg1;
+ (void)beginTransaction:(id)arg1 withValue:(int)arg2;
+ (void)beginTransaction:(id)arg1;
+ (_Bool)didCrashOnLastLoad;
+ (void)setDelegate:(id)arg1;
+ (id)delegate;
+ (void)updateLocation:(id)arg1;
+ (void)addFilter:(id)arg1;
+ (void)setValue:(id)arg1 forKey:(id)arg2;
+ (void)setUsername:(id)arg1;
+ (id)getUserUUID;
+ (void)leaveBreadcrumb:(id)arg1;
+ (void)cr_logCritterError:(id)arg1;
+ (_Bool)logError:(id)arg1;
+ (_Bool)logNetworkRequest:(id)arg1 urlString:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7;
+ (_Bool)logNetworkRequest:(id)arg1 url:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7;
+ (_Bool)logHandledException:(id)arg1;
+ (unsigned long long)maxOfflineCrashReports;
+ (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
+ (_Bool)getOptOutStatus;
+ (void)setOptOutStatus:(_Bool)arg1;
+ (void)setAsyncBreadcrumbMode:(_Bool)arg1;
+ (void)enableFromConfigFile;
+ (void)enableWithAppID:(id)arg1 andConfig:(id)arg2;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3 disableInstrumentation:(_Bool)arg4;
+ (void)enableWithAppID:(id)arg1 andURLFilters:(id)arg2;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2 andURLFilters:(id)arg3;
+ (void)enableWithAppID:(id)arg1 andDelegate:(id)arg2;
+ (void)enableWithAppID:(id)arg1;
+ (void)load;
@property(nonatomic) CritterImpl *critter; // @synthesize critter=_critter;
- (void)sendAppLoadData;
- (void)logPluginException:(id)arg1;
- (void)cr_logCritterError:(id)arg1;
- (_Bool)didCrashOnLastLoad;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)addFilter:(id)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)setUsername:(id)arg1;
- (void)leaveBreadcrumb:(id)arg1;
- (_Bool)logNetworkRequest:(id)arg1 urlString:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7;
- (_Bool)logError:(id)arg1;
- (_Bool)logHandledException:(id)arg1;
- (id)getUserUUID;
- (unsigned long long)maxOfflineCrashReports;
- (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
- (_Bool)getOptOutStatus;
- (void)setOptOutStatus:(_Bool)arg1;
- (void)setAsyncBreadcrumbMode:(_Bool)arg1;
- (void)enableWithAppID:(id)arg1 andConfig:(id)arg2;
- (void)enableFromConfigFile;
- (id)init;

@end

@interface CRNSURLConnectionDelegateProxy : NSProxy <NSURLConnectionDelegate, NSURLConnectionDataDelegate>
{
id _delegate;
CRNetStatDispatch *_dispatch;
CRRequestState *_reqState;
}

+ (_Bool)isInstrumented;
+ (void)uninstrumentNSURLConnection;
+ (void)instrumentNSURLConnectionWithDispatch:(id)arg1;
@property(retain, nonatomic) CRRequestState *reqState; // @synthesize reqState=_reqState;
@property(retain, nonatomic) CRNetStatDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(retain, nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)connectionDidFinishDownloading:(id)arg1 destinationURL:(id)arg2;
- (void)connectionDidResumeDownloading:(id)arg1 totalBytesWritten:(long long)arg2 expectedTotalBytes:(long long)arg3;
- (void)connection:(id)arg1 didWriteData:(long long)arg2 totalBytesWritten:(long long)arg3 expectedTotalBytes:(long long)arg4;
- (id)connection:(id)arg1 willCacheResponse:(id)arg2;
- (id)connection:(id)arg1 needNewBodyStream:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didSendBodyData:(long long)arg2 totalBytesWritten:(long long)arg3 totalBytesExpectedToWrite:(long long)arg4;
- (void)connectionDidFinishLoading:(id)arg1;
- (_Bool)connectionShouldUseCredentialStorage:(id)arg1;
- (void)connection:(id)arg1 didCancelAuthenticationChallenge:(id)arg2;
- (_Bool)connection:(id)arg1 canAuthenticateAgainstProtectionSpace:(id)arg2;
- (void)connection:(id)arg1 willSendRequestForAuthenticationChallenge:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)logStats;
- (void)startRequest:(id)arg1;
- (void)addAssociationToConnection:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (void)forwardInvocation:(id)arg1;
- (id)initWithDelegate:(id)arg1 andStatsDispatch:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CRNSURLSessionTaskProxy : NSProxy
{
NSURLSessionTask *_taskDelegate;
CRNetStatDispatch *_dispatch;
CRRequestState *_reqState;
unsigned long long _resumeDataSize;
}

@property(nonatomic) unsigned long long resumeDataSize; // @synthesize resumeDataSize=_resumeDataSize;
@property(retain, nonatomic) CRRequestState *reqState; // @synthesize reqState=_reqState;
@property(readonly, nonatomic) CRNetStatDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(readonly, nonatomic) NSURLSessionTask *taskDelegate; // @synthesize taskDelegate=_taskDelegate;
- (void).cxx_destruct;
- (id)debugDescription;
- (id)description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)responseFinishedWithError:(id)arg1;
- (void)finishedDownloadingToURL:(id)arg1;
- (void)receivedResponse:(id)arg1;
- (void)receivedBytes:(unsigned long long)arg1;
- (void)suspend;
- (void)resume;
- (void)cancel;
- (id)initDownloadTaskWithSession:(id)arg1 resumeData:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 dispatch:(id)arg4;
- (id)initDownloadTaskWithSession:(id)arg1 url:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 dispatch:(id)arg4;
- (id)initDownloadTaskWithSession:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 dispatch:(id)arg4;
- (CDUnknownBlockType)wrapDownloadCompletionHandler:(CDUnknownBlockType)arg1 forSession:(id)arg2;
- (id)initDataTaskWithSession:(id)arg1 request:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 dispatch:(id)arg4;
- (id)initDataTaskWithSession:(id)arg1 URL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 dispatch:(id)arg4;
- (CDUnknownBlockType)wrapDataCompletionHandler:(CDUnknownBlockType)arg1 forSession:(id)arg2;
- (id)initWithTaskDelegate:(id)arg1 dispatch:(id)arg2;

@end

@interface CRSequenceNumber : NSObject
{
int _value;
NSString *_path;
}

@property(nonatomic) int value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *path; // @synthesize path=_path;
- (void).cxx_destruct;
- (int)incrementValue;
- (void)save;
- (id)initWithDirectoryTree:(id)arg1 andRelativePath:(id)arg2;

@end

@interface CritterImpl : NSObject
{
id <CrittercismDelegate> delegate;
_Bool _loggingCritterError;
_Bool _isOptedOut;
unsigned long long _sessionNum;
_Bool _isReady;
_Bool _didCrashOnLastLoad;
_Bool _didSendAppLoadData;
CRAppLocator *_appLocator;
CRPreferences *_preferences;
NSString *_deviceUUID;
NSString *_appId;
NSString *_critterURL;
NSString *_netDataURL;
NSString *_appLoadURL;
NSString *_LibraryId;
CRDevice *_device;
CRExceptionHandler *_exceptionHandler;
CRExceptionHandler *_internalExceptionHandler;
CRCrashArchive *_crashArchive;
CRTransactionReporter *_transactionReporter;
CRNetStatDispatch *_netStatDispatch;
CRNetCollector *_netCollector;
CRAppRater *_appRater;
CRReachability *_hostReach;
CRReachability *_internetReach;
CRReachability *_wifiReach;
NSString *_lastReachabilityStatusString;
NSOperationQueue *_breadcrumbQueue;
CRThrottle *_pluginCrashThrottle;
double _sessionStartTime;
PLCrashReporter *_plCrashReporter;
CrittercismConfig *_config;
}

+ (void)cr_logCritterError:(id)arg1;
+ (id)sharedInstance;
@property(retain) CrittercismConfig *config; // @synthesize config=_config;
@property _Bool didSendAppLoadData; // @synthesize didSendAppLoadData=_didSendAppLoadData;
@property(retain) PLCrashReporter *plCrashReporter; // @synthesize plCrashReporter=_plCrashReporter;
@property double sessionStartTime; // @synthesize sessionStartTime=_sessionStartTime;
@property(retain) CRThrottle *pluginCrashThrottle; // @synthesize pluginCrashThrottle=_pluginCrashThrottle;
@property(retain) NSOperationQueue *breadcrumbQueue; // @synthesize breadcrumbQueue=_breadcrumbQueue;
@property(copy) NSString *lastReachabilityStatusString; // @synthesize lastReachabilityStatusString=_lastReachabilityStatusString;
@property(retain) CRReachability *wifiReach; // @synthesize wifiReach=_wifiReach;
@property(retain) CRReachability *internetReach; // @synthesize internetReach=_internetReach;
@property(retain) CRReachability *hostReach; // @synthesize hostReach=_hostReach;
@property(retain) CRAppRater *appRater; // @synthesize appRater=_appRater;
@property(retain) CRNetCollector *netCollector; // @synthesize netCollector=_netCollector;
@property(retain) CRNetStatDispatch *netStatDispatch; // @synthesize netStatDispatch=_netStatDispatch;
@property(retain) CRTransactionReporter *transactionReporter; // @synthesize transactionReporter=_transactionReporter;
@property(retain) CRCrashArchive *crashArchive; // @synthesize crashArchive=_crashArchive;
@property(retain) CRExceptionHandler *internalExceptionHandler; // @synthesize internalExceptionHandler=_internalExceptionHandler;
@property(retain) CRExceptionHandler *exceptionHandler; // @synthesize exceptionHandler=_exceptionHandler;
@property(retain) CRDevice *device; // @synthesize device=_device;
@property(retain) NSString *LibraryId; // @synthesize LibraryId=_LibraryId;
@property(retain) NSString *appLoadURL; // @synthesize appLoadURL=_appLoadURL;
@property(retain) NSString *netDataURL; // @synthesize netDataURL=_netDataURL;
@property(retain) NSString *critterURL; // @synthesize critterURL=_critterURL;
@property(copy) NSString *appId; // @synthesize appId=_appId;
@property(readonly, getter=getUserUUID) NSString *deviceUUID; // @synthesize deviceUUID=_deviceUUID;
@property _Bool didCrashOnLastLoad; // @synthesize didCrashOnLastLoad=_didCrashOnLastLoad;
@property(retain) CRPreferences *preferences; // @synthesize preferences=_preferences;
@property(retain, nonatomic) CRAppLocator *appLocator; // @synthesize appLocator=_appLocator;
@property _Bool isReady; // @synthesize isReady=_isReady;
- (void).cxx_destruct;
- (void)logPluginException:(id)arg1;
- (void)setupUserVoice;
- (id)appState;
- (void)useStoredTxnSettings;
- (void)storeTxnSettings:(_Bool)arg1 withFrequency:(id)arg2 withDefaultTimeout:(double)arg3 withThresholds:(id)arg4;
- (void)configureTxnSampling:(_Bool)arg1 withFrequency:(id)arg2 withDefaultTimeout:(double)arg3 withThresholds:(id)arg4;
- (void)receivedTxnSettings:(id)arg1;
- (void)logRateMeClickWithButtonIndex:(long long)arg1;
- (void)storeAPMSettings:(_Bool)arg1 withFrequency:(id)arg2;
- (void)configureAPMSampling:(_Bool)arg1 withFrequency:(id)arg2;
- (void)useStoredAPMSettings;
- (void)receivedAPMSettings:(id)arg1;
- (void)setupNetCollectionWithCurrentDevice:(id)arg1;
- (void)setupNetMonitoringWithConfig:(id)arg1;
- (void)useStoredSettings;
- (void)parseSettings:(id)arg1 withEnabled:(_Bool *)arg2 withFrequency:(id *)arg3 andKillState:(_Bool *)arg4 persistState:(_Bool *)arg5;
- (_Bool)checkSettings:(id)arg1;
- (void)receivedSettings:(id)arg1;
- (void)handleRateMeAlert:(id)arg1;
- (void)leaveBreadcrumb:(id)arg1;
- (void)handleNotification:(id)arg1;
- (void)handleCRReachabilityNotification:(id)arg1;
- (void)handleCRReachabilityNotificationBreadcrumbs:(id)arg1;
- (void)handleUIDeviceNotification:(id)arg1;
- (void)foregroundBackgroundCheck:(id)arg1;
- (void)autoTransaction:(id)arg1 withBeginTime:(double)arg2 withEndTime:(double)arg3;
- (void)sendUserMetadata;
- (_Bool)userMetadataCacheIsDirty;
- (void)setUserMetadataCacheIsDirty:(_Bool)arg1;
- (void)setValue:(id)arg1 forKey:(id)arg2;
- (void)postJSONtoEndpoint:(id)arg1 withBaseURL:(id)arg2 andData:(id)arg3 andHandler:(id)arg4;
- (void)postURLEncodedToEndpoint:(id)arg1 withData:(id)arg2 andHandler:(id)arg3;
- (void)sendAppLoadData;
- (void)appLoadedWithLaunch:(_Bool)arg1;
- (id)buildRequestWithState:(int)arg1 appendUserMetadata:(_Bool)arg2;
- (id)buildAppLoadRequest;
- (void)addFullStateDataTo:(id)arg1 withDevice:(id)arg2;
- (id)getStateWithFullState:(_Bool)arg1;
- (id)makeBasicRequest;
@property(retain) id <CrittercismDelegate> delegate;
- (void)updateReachability:(id)arg1;
- (void)wifiReachabilityChanged:(id)arg1;
- (void)internetReachabilityChanged:(id)arg1;
- (void)hostReachabilityChanged:(id)arg1;
- (void)setupReachabilityUpdates;
- (void)setupAppRater;
- (void)setupNotifications;
- (void)setupNotification:(id)arg1;
- (void)setupHandledExceptions;
- (void)freeDetectedClasses;
- (void)setupURLs;
- (void)deviceOrientationDidChange:(id)arg1;
- (void)handleCrashReportWithPLCrashReport:(id)arg1 andStoredDevice:(id)arg2 andStoredPrefs:(id)arg3 andTransactions:(id)arg4 andUserBreadcrumbs:(id)arg5 andSystemBreadcrumbs:(id)arg6 andEndpoints:(id)arg7 andPreviousVersion:(id)arg8;
- (_Bool)logNetworkRequest:(id)arg1 urlString:(id)arg2 latency:(double)arg3 bytesRead:(unsigned long long)arg4 bytesSent:(unsigned long long)arg5 responseCode:(long long)arg6 error:(id)arg7;
- (_Bool)logError:(id)arg1;
- (_Bool)logHandledException:(id)arg1;
- (void)cr_logCritterError:(id)arg1;
- (void)addFilter:(id)arg1;
- (unsigned long long)maxOfflineCrashReports;
- (void)setMaxOfflineCrashReports:(unsigned long long)arg1;
- (_Bool)getOptOutStatus;
- (void)setOptOutStatus:(_Bool)arg1;
- (void)setAsyncBreadcrumbMode:(_Bool)arg1;
- (void)enableWithAppID:(id)arg1 andConfig:(id)arg2;
- (void)enableFromConfigFile;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)dealloc;
- (void)reset;
- (id)init;

@end

@interface CrittercismConfig : NSObject
{
_Bool _monitorNSURLConnection;
_Bool _monitorNSURLSession;
_Bool _monitorUIWebView;
_Bool _monitorWKWebView;
_Bool _monitorWCSession;
_Bool _enableServiceMonitoring;
_Bool _delaySendingAppLoad;
long long _loggingLevel;
NSArray *_urlFilters;
id <CrittercismDelegate> _delegate;
}

+ (id)defaultConfig;
@property(retain, nonatomic) id <CrittercismDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSArray *urlFilters; // @synthesize urlFilters=_urlFilters;
@property(nonatomic) long long loggingLevel; // @synthesize loggingLevel=_loggingLevel;
@property(nonatomic) _Bool delaySendingAppLoad; // @synthesize delaySendingAppLoad=_delaySendingAppLoad;
@property(nonatomic) _Bool enableServiceMonitoring; // @synthesize enableServiceMonitoring=_enableServiceMonitoring;
@property(nonatomic) _Bool monitorWCSession; // @synthesize monitorWCSession=_monitorWCSession;
@property(nonatomic) _Bool monitorWKWebView; // @synthesize monitorWKWebView=_monitorWKWebView;
@property(nonatomic) _Bool monitorUIWebView; // @synthesize monitorUIWebView=_monitorUIWebView;
@property(nonatomic) _Bool monitorNSURLSession; // @synthesize monitorNSURLSession=_monitorNSURLSession;
@property(nonatomic) _Bool monitorNSURLConnection; // @synthesize monitorNSURLConnection=_monitorNSURLConnection;
- (void).cxx_destruct;
- (id)description;
- (long long)internalLoggingLevel;
- (id)init;

@end

@interface CRWCSessionDelegateProxy : NSProxy <WCSessionDelegate>
{
id _delegate;
NSSet *_selectorsWeRespondTo;
CRRequestState *_reqState;
CRNetStatDispatch *_dispatch;
}

+ (id)performSwizzledWCSessionTransferFile:(id)arg1 file:(id)arg2 metadata:(id)arg3;
+ (id)performSwizzledWCSessionTransferUserInfo:(id)arg1 userInfo:(id)arg2;
+ (id)performSwizzledWCSessionMessageData:(id)arg1 data:(id)arg2 replyHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
+ (id)performSwizzledWCSessionSendMessage:(id)arg1 message:(id)arg2 replyHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4;
+ (id)performSwizzledWCSessionActivateSession:(id)arg1;
+ (void)performSwizzledWCSessionSetDelegate:(id)arg1 withProxy:(id)arg2;
+ (id)performSwizzledWCSessionDelegate:(id)arg1;
+ (id)transferFileForWCSession:(id)arg1 file:(id)arg2 metadata:(id)arg3 dispatch:(id)arg4;
+ (id)transferUserInfoForWCSession:(id)arg1 userInfo:(id)arg2 dispatch:(id)arg3;
+ (void)sendMessageDataForWCSession:(id)arg1 data:(id)arg2 replyHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4 dispatch:(id)arg5;
+ (void)sendMessageForWCSession:(id)arg1 message:(id)arg2 replyHandler:(CDUnknownBlockType)arg3 errorHandler:(CDUnknownBlockType)arg4 dispatch:(id)arg5;
+ (void)activateSessionForWCSession:(id)arg1 dispatch:(id)arg2;
+ (void)setDelegateForWCSession:(id)arg1 delegate:(id)arg2 dispatch:(id)arg3;
+ (id)delegateForWCSession:(id)arg1 dispatch:(id)arg2;
+ (id)proxyFromSession:(id)arg1 dispatch:(id)arg2;
+ (_Bool)isInstrumented;
+ (void)uninstrumentWCSession;
+ (void)instrumentWCSessionWithDispatch:(id)arg1;
+ (void)swizzleWCSessionTransferFileWithDispatch:(id)arg1;
+ (void)swizzleWCSessionTransferUserInfoWithDispatch:(id)arg1;
+ (void)swizzleWCSessionSendMessageDataWithDispatch:(id)arg1;
+ (void)swizzleWCSessionSendMessageWithDispatch:(id)arg1;
+ (void)swizzleWCSessionActivateSessionWithDispatch:(id)arg1;
+ (void)swizzleWCSessionSetDelegateWithDispatch:(id)arg1;
+ (void)swizzleWCSessionDelegateWithDispatch:(id)arg1;
+ (void)replaceWCSessionmethod:(SEL)arg1 withSwizzledSelector:(SEL)arg2 implementedBlock:(id)arg3;
+ (_Bool)respondsToSelector:(SEL)arg1;
@property(retain, nonatomic) CRNetStatDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(retain, nonatomic) CRRequestState *reqState; // @synthesize reqState=_reqState;
@property(retain, nonatomic) NSSet *selectorsWeRespondTo; // @synthesize selectorsWeRespondTo=_selectorsWeRespondTo;
@property(nonatomic) id delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)addAssociationToSession:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)session:(id)arg1 didFinishFileTransfer:(id)arg2 error:(id)arg3;
- (void)session:(id)arg1 didReceiveFile:(id)arg2;
- (void)session:(id)arg1 didFinishUserInfoTransfer:(id)arg2 error:(id)arg3;
- (void)session:(id)arg1 didReceiveUserInfo:(id)arg2;
- (void)session:(id)arg1 didReceiveMessageData:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didReceiveMessageData:(id)arg2;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2 replyHandler:(CDUnknownBlockType)arg3;
- (void)session:(id)arg1 didReceiveMessage:(id)arg2;
- (void)session:(id)arg1 didReceiveApplicationContext:(id)arg2;
- (id)initWithDelegate:(id)arg1 dispatch:(id)arg2;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CRBreadcrumbs : NSObject <CRNetStatObserver>
{
CRBreadcrumbsArchive *_crashedArchive;
CRBreadcrumbsArchive *_previousArchive;
CritterImpl *_critterDelegate;
CRBreadcrumbsArchive *_archive;
}

+ (void)setAsyncMode:(_Bool)arg1;
+ (void)shuffleUserBreadcrumbs;
+ (id)getWindowsStyleShuffledPluginUserBreadcrumbs;
+ (id)getWindowsStyleUserBreadcrumbs;
+ (id)extractUserBreadcrumbsFrom:(double)arg1 toEndTime:(double)arg2;
+ (id)extractEndpointsFrom:(double)arg1 toEndTime:(double)arg2;
+ (id)extractAllEndpoints;
+ (id)getAllSessionsUserBreadcrumbs;
+ (void)leaveCrashBreadcrumb:(id)arg1 withReason:(id)arg2 withTimestamp:(id)arg3;
+ (void)leaveErrorBreadcrumb:(id)arg1 withReason:(id)arg2;
+ (void)leaveViewBreadcrumb:(int)arg1 withViewName:(id)arg2;
+ (void)leaveReachabilityBreadcrumb:(int)arg1 fromType:(id)arg2 toType:(id)arg3;
+ (void)leaveReachabilityBreadcrumb:(int)arg1 forType:(id)arg2;
+ (void)leaveReachabilityBreadcrumb:(int)arg1;
+ (void)leaveEventBreadcrumb:(id)arg1;
+ (void)leaveNetworkBreadcrumb:(id)arg1;
+ (void)leaveUserBreadcrumb:(id)arg1 withPriority:(int)arg2;
+ (void)leaveSessionStartBreadcrumb;
+ (id)networkBreadcrumbs;
+ (id)systemBreadcrumbs;
+ (id)userBreadcrumbs;
@property(readonly, nonatomic) CRBreadcrumbsArchive *archive; // @synthesize archive=_archive;
@property __weak CritterImpl *critterDelegate; // @synthesize critterDelegate=_critterDelegate;
@property(readonly) CRBreadcrumbsArchive *previousArchive; // @synthesize previousArchive=_previousArchive;
@property(readonly) CRBreadcrumbsArchive *crashedArchive; // @synthesize crashedArchive=_crashedArchive;
- (void).cxx_destruct;
- (id)reservedBreadcrumbs;
- (id)readFromFile;
- (void)shuffleBreadcrumbs;
- (void)logNetworkRequest:(id)arg1;
- (id)getCurrentSessionStartBreadcrumb;
- (id)getAllSessionsBreadcrumbs;
- (void)clearBreadcrumbs;
- (id)recentBreadcrumbs;
- (id)recentBreadcrumbsFrom:(double)arg1 toEndTime:(double)arg2;
- (void)leaveSessionStartBreadcrumb;
- (void)addBreadcrumb:(int)arg1 withObject:(id)arg2;
- (id)initWithName:(id)arg1 withmaxCount:(unsigned int)arg2;

@end

@interface CRWKNavigationDelegateProxy : NSProxy <WKNavigationDelegate>
{
id _navigationDelegate;
NSSet *_selectorsWeRespondTo;
CRRequestState *_reqState;
NSTimer *_timer;
CRNetStatDispatch *_dispatch;
}

+ (id)performSwizzledWKWebViewInitWithFrameSelector:(id)arg1 withFrame:(struct CGRect)arg2 withConfig:(id)arg3;
+ (void)performSwizzledWKWebViewSetNavigationDelegateSelector:(id)arg1 withProxy:(id)arg2;
+ (id)performSwizzledWKWebViewNavigationDelegateSelector:(id)arg1;
+ (void)setNavigationDelegateForWKWebView:(id)arg1 navigationDelegate:(id)arg2 dispatch:(id)arg3;
+ (id)navigationDelegateForWKWebView:(id)arg1 dispatch:(id)arg2;
+ (id)initWithFrameForWKWebView:(id)arg1 frame:(struct CGRect)arg2 configuration:(id)arg3 dispatch:(id)arg4;
+ (id)proxyFromWebView:(id)arg1 dispatch:(id)arg2;
+ (_Bool)isInstrumented;
+ (void)uninstrumentWKWebView;
+ (void)traverseView:(id)arg1;
+ (void)traverseUI;
+ (void)instrumentWKWebViewWithDispatch:(id)arg1;
+ (void)swizzleWKWebViewSetNavigationDelegateWithDispatch:(id)arg1;
+ (void)swizzleWKWebViewNavigationDelegateWithDispatch:(id)arg1;
+ (void)swizzleWKWebViewInitWithFrameAndDispatch:(id)arg1;
+ (void)replaceWKWebViewmethod:(SEL)arg1 withSwizzledSelector:(SEL)arg2 implementedBlock:(id)arg3;
+ (_Bool)respondsToSelector:(SEL)arg1;
@property(retain, nonatomic) CRNetStatDispatch *dispatch; // @synthesize dispatch=_dispatch;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) CRRequestState *reqState; // @synthesize reqState=_reqState;
@property(retain, nonatomic) NSSet *selectorsWeRespondTo; // @synthesize selectorsWeRespondTo=_selectorsWeRespondTo;
@property(nonatomic) __weak id navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
- (void).cxx_destruct;
- (void)addAssociationToWebView:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
- (void)forwardInvocation:(id)arg1;
- (id)methodSignatureForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationResponse:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (id)initWithNavigationDelegate:(id)arg1 dispatch:(id)arg2;

// Remaining properties
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface CRRateAppAlert : UIAlertView
{
}

@end

@interface CRDirectoryTree : NSObject
{
NSString *_rootDirectory;
NSString *_beginDirectory;
NSString *_normalDirectory;
NSString *_sendDirectory;
NSString *_sentDirectory;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) NSString *sentDirectory; // @synthesize sentDirectory=_sentDirectory;
@property(readonly, nonatomic) NSString *sendDirectory; // @synthesize sendDirectory=_sendDirectory;
@property(readonly, nonatomic) NSString *normalDirectory; // @synthesize normalDirectory=_normalDirectory;
@property(readonly, nonatomic) NSString *beginDirectory; // @synthesize beginDirectory=_beginDirectory;
@property(readonly, nonatomic) NSString *rootDirectory; // @synthesize rootDirectory=_rootDirectory;
- (void).cxx_destruct;
- (void)moveItemsFrom:(id)arg1 toDirectory:(id)arg2;
- (_Bool)removeItemAtPath:(id)arg1;
- (_Bool)moveItemAtPath:(id)arg1 toPath:(id)arg2;
- (id)createDirectory:(id)arg1;
- (id)absolutePath:(id)arg1;
- (id)createRootDirectory;
- (void)reset;
- (void)resetDirectory:(id)arg1;
- (void)initFileSystem;
- (id)init;

@end

@interface CRFilter : NSObject
{
unsigned long long _filterType;
NSString *_token;
}

+ (id)applyFilter:(unsigned long long)arg1 ToURL:(id)arg2;
+ (id)queryPreservingFilterWithString:(id)arg1;
+ (id)queryOnlyFilterWithString:(id)arg1;
+ (id)filterWithString:(id)arg1;
@property(copy) NSString *token; // @synthesize token=_token;
@property(readonly) unsigned long long filterType; // @synthesize filterType=_filterType;
- (void).cxx_destruct;
- (_Bool)doesMatch:(id)arg1;
- (id)initWithString:(id)arg1 andFilterType:(unsigned long long)arg2;
- (id)initWithString:(id)arg1;

@end

@interface PLCrashSignalHandler : NSObject
{
struct __darwin_sigaltstack _sigstk;
}

+ (void)resetHandlers;
+ (id)sharedHandler;
+ (void)initialize;
- (_Bool)registerHandlerForSignal:(int)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (_Bool)registerHandlerWithSignal:(int)arg1 error:(id *)arg2;
- (id)init;

@end

@interface PLCrashReporter : NSObject
{
PLCrashReporterConfig *_config;
_Bool _enabled;
PLCrashMachExceptionServer *_machServer;
PLCrashMachExceptionPortSet *_previousMachPorts;
NSString *_applicationIdentifier;
NSString *_applicationVersion;
NSString *_applicationMarketingVersion;
NSString *_crashReportDirectory;
}

+ (id)sharedReporter;
+ (void)initialize;
- (void)setCrashCallbacks:(struct PLCrashReporterCallbacks *)arg1;
- (id)generateLiveReportAndReturnError:(id *)arg1;
- (id)generateLiveReport;
- (id)generateLiveReportWithThread:(unsigned int)arg1 error:(id *)arg2;
- (id)generateLiveReportWithThread:(unsigned int)arg1;
- (_Bool)enableCrashReporterAndReturnError:(id *)arg1;
- (_Bool)enableCrashReporter;
- (_Bool)purgePendingCrashReportAndReturnError:(id *)arg1;
- (_Bool)purgePendingCrashReport;
- (id)loadPendingCrashReportDataAndReturnError:(id *)arg1;
- (id)loadPendingCrashReportData;
- (_Bool)hasPendingCrashReport;
- (id)initWithConfiguration:(id)arg1;
- (id)init;

@end

@interface PLCrashReport : NSObject
{
struct _PLCrashReportDecoder *_decoder;
PLCrashReportSystemInfo *_systemInfo;
PLCrashReportMachineInfo *_machineInfo;
PLCrashReportApplicationInfo *_applicationInfo;
PLCrashReportProcessInfo *_processInfo;
PLCrashReportSignalInfo *_signalInfo;
PLCrashReportMachExceptionInfo *_machExceptionInfo;
NSArray *_threads;
NSArray *_images;
PLCrashReportExceptionInfo *_exceptionInfo;
struct __CFUUID *_uuid;
}

@property(readonly, nonatomic) struct __CFUUID *uuidRef; // @synthesize uuidRef=_uuid;
@property(readonly, nonatomic) PLCrashReportExceptionInfo *exceptionInfo; // @synthesize exceptionInfo=_exceptionInfo;
@property(readonly, nonatomic) NSArray *images; // @synthesize images=_images;
@property(readonly, nonatomic) NSArray *threads; // @synthesize threads=_threads;
@property(readonly, nonatomic) PLCrashReportMachExceptionInfo *machExceptionInfo; // @synthesize machExceptionInfo=_machExceptionInfo;
@property(readonly, nonatomic) PLCrashReportSignalInfo *signalInfo; // @synthesize signalInfo=_signalInfo;
@property(readonly, nonatomic) PLCrashReportProcessInfo *processInfo; // @synthesize processInfo=_processInfo;
@property(readonly, nonatomic) PLCrashReportApplicationInfo *applicationInfo; // @synthesize applicationInfo=_applicationInfo;
@property(readonly, nonatomic) PLCrashReportMachineInfo *machineInfo; // @synthesize machineInfo=_machineInfo;
@property(readonly, nonatomic) PLCrashReportSystemInfo *systemInfo; // @synthesize systemInfo=_systemInfo;
@property(readonly, nonatomic) _Bool hasExceptionInfo;
@property(readonly, nonatomic) _Bool hasProcessInfo;
@property(readonly, nonatomic) _Bool hasMachineInfo;
- (id)imageForAddress:(unsigned long long)arg1;
- (void)dealloc;
- (id)initWithData:(id)arg1 error:(id *)arg2;

@end

@interface PLCrashReportSystemInfo : NSObject
{
int _operatingSystem;
NSString *_osVersion;
NSString *_osBuild;
int _architecture;
NSDate *_timestamp;
PLCrashReportProcessorInfo *_processorInfo;
unsigned long long _memoryUsage;
unsigned long long _freeDiskSpace;
}

@property(readonly, nonatomic) unsigned long long freeDiskSpace; // @synthesize freeDiskSpace=_freeDiskSpace;
@property(readonly, nonatomic) unsigned long long memoryUsage; // @synthesize memoryUsage=_memoryUsage;
@property(readonly, nonatomic) PLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSDate *timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) int architecture; // @synthesize architecture=_architecture;
@property(readonly, nonatomic) NSString *operatingSystemBuild; // @synthesize operatingSystemBuild=_osBuild;
@property(readonly, nonatomic) NSString *operatingSystemVersion; // @synthesize operatingSystemVersion=_osVersion;
@property(readonly, nonatomic) int operatingSystem; // @synthesize operatingSystem=_operatingSystem;
- (void)dealloc;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 processorInfo:(id)arg5 timestamp:(id)arg6 memoryUsage:(unsigned long long)arg7 freeDiskSpace:(unsigned long long)arg8;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 operatingSystemBuild:(id)arg3 architecture:(int)arg4 timestamp:(id)arg5 memoryUsage:(unsigned long long)arg6 freeDiskSpace:(unsigned long long)arg7;
- (id)initWithOperatingSystem:(int)arg1 operatingSystemVersion:(id)arg2 architecture:(int)arg3 timestamp:(id)arg4 memoryUsage:(unsigned long long)arg5 freeDiskSpace:(unsigned long long)arg6;

@end

@interface PLCrashReportApplicationInfo : NSObject
{
NSString *_applicationIdentifier;
NSString *_applicationVersion;
NSString *_applicationMarketingVersion;
}

@property(readonly, nonatomic) NSString *applicationMarketingVersion; // @synthesize applicationMarketingVersion=_applicationMarketingVersion;
@property(readonly, nonatomic) NSString *applicationVersion; // @synthesize applicationVersion=_applicationVersion;
@property(readonly, nonatomic) NSString *applicationIdentifier; // @synthesize applicationIdentifier=_applicationIdentifier;
- (void)dealloc;
- (id)initWithApplicationIdentifier:(id)arg1 applicationVersion:(id)arg2 applicationMarketingVersion:(id)arg3;

@end

@interface PLCrashReportThreadInfo : NSObject
{
long long _threadNumber;
NSArray *_stackFrames;
_Bool _crashed;
NSArray *_registers;
}

@property(readonly, nonatomic) NSArray *registers; // @synthesize registers=_registers;
@property(readonly, nonatomic) _Bool crashed; // @synthesize crashed=_crashed;
@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) long long threadNumber; // @synthesize threadNumber=_threadNumber;
- (void)dealloc;
- (id)initWithThreadNumber:(long long)arg1 stackFrames:(id)arg2 crashed:(_Bool)arg3 registers:(id)arg4;

@end

@interface PLCrashReportBinaryImageInfo : NSObject
{
PLCrashReportProcessorInfo *_processorInfo;
unsigned long long _baseAddress;
unsigned long long _imageSize;
NSString *_imageName;
_Bool _hasImageUUID;
NSString *_imageUUID;
}

@property(readonly, nonatomic) NSString *imageUUID; // @synthesize imageUUID=_imageUUID;
@property(readonly, nonatomic) _Bool hasImageUUID; // @synthesize hasImageUUID=_hasImageUUID;
@property(readonly, nonatomic) NSString *imageName; // @synthesize imageName=_imageName;
@property(readonly, nonatomic) unsigned long long imageSize; // @synthesize imageSize=_imageSize;
@property(readonly, nonatomic) unsigned long long imageBaseAddress; // @synthesize imageBaseAddress=_baseAddress;
@property(readonly, nonatomic) PLCrashReportProcessorInfo *codeType; // @synthesize codeType=_processorInfo;
- (void)dealloc;
- (id)initWithCodeType:(id)arg1 baseAddress:(unsigned long long)arg2 size:(unsigned long long)arg3 name:(id)arg4 uuid:(id)arg5;

@end

@interface PLCrashReportExceptionInfo : NSObject
{
NSString *_name;
NSString *_reason;
NSArray *_stackFrames;
}

@property(readonly, nonatomic) NSArray *stackFrames; // @synthesize stackFrames=_stackFrames;
@property(readonly, nonatomic) NSString *exceptionReason; // @synthesize exceptionReason=_reason;
@property(readonly, nonatomic) NSString *exceptionName; // @synthesize exceptionName=_name;
- (void)dealloc;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2 stackFrames:(id)arg3;
- (id)initWithExceptionName:(id)arg1 reason:(id)arg2;

@end

@interface PLCrashReportSignalInfo : NSObject
{
NSString *_name;
NSString *_code;
unsigned long long _address;
}

@property(readonly, nonatomic) unsigned long long address; // @synthesize address=_address;
@property(readonly, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
- (void)dealloc;
- (id)initWithSignalName:(id)arg1 code:(id)arg2 address:(unsigned long long)arg3;

@end

@interface PLCrashReportProcessInfo : NSObject
{
NSString *_processName;
unsigned long long _processID;
NSString *_processPath;
NSDate *_processStartTime;
NSString *_parentProcessName;
unsigned long long _parentProcessID;
_Bool _native;
}

@property(readonly, nonatomic) _Bool native; // @synthesize native=_native;
@property(readonly, nonatomic) unsigned long long parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *parentProcessName; // @synthesize parentProcessName=_parentProcessName;
@property(readonly, nonatomic) NSDate *processStartTime; // @synthesize processStartTime=_processStartTime;
@property(readonly, nonatomic) NSString *processPath; // @synthesize processPath=_processPath;
@property(readonly, nonatomic) unsigned long long processID; // @synthesize processID=_processID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
- (void)dealloc;
- (id)initWithProcessName:(id)arg1 processID:(unsigned long long)arg2 processPath:(id)arg3 processStartTime:(id)arg4 parentProcessName:(id)arg5 parentProcessID:(unsigned long long)arg6 native:(_Bool)arg7;

@end

@interface PLCrashReportTextFormatter : NSObject <PLCrashReportFormatter>
{
int _textFormat;
unsigned long long _stringEncoding;
}

+ (id)stringValueForCrashReport:(id)arg1 withTextFormat:(int)arg2;
- (id)formatReport:(id)arg1 error:(id *)arg2;
- (id)initWithTextFormat:(int)arg1 stringEncoding:(unsigned long long)arg2;

@end

@interface PLCrashReportProcessorInfo : NSObject
{
int _typeEncoding;
unsigned long long _type;
unsigned long long _subtype;
}

@property(readonly, nonatomic) unsigned long long subtype; // @synthesize subtype=_subtype;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
@property(readonly, nonatomic) int typeEncoding; // @synthesize typeEncoding=_typeEncoding;
- (id)initWithTypeEncoding:(int)arg1 type:(unsigned long long)arg2 subtype:(unsigned long long)arg3;

@end

@interface PLCrashReportMachineInfo : NSObject
{
NSString *_modelName;
PLCrashReportProcessorInfo *_processorInfo;
unsigned long long _processorCount;
unsigned long long _logicalProcessorCount;
}

@property(readonly, nonatomic) unsigned long long logicalProcessorCount; // @synthesize logicalProcessorCount=_logicalProcessorCount;
@property(readonly, nonatomic) unsigned long long processorCount; // @synthesize processorCount=_processorCount;
@property(readonly, nonatomic) PLCrashReportProcessorInfo *processorInfo; // @synthesize processorInfo=_processorInfo;
@property(readonly, nonatomic) NSString *modelName; // @synthesize modelName=_modelName;
- (void)dealloc;
- (id)initWithModelName:(id)arg1 processorInfo:(id)arg2 processorCount:(unsigned long long)arg3 logicalProcessorCount:(unsigned long long)arg4;

@end

@interface PLCrashReportStackFrameInfo : NSObject
{
unsigned long long _instructionPointer;
PLCrashReportSymbolInfo *_symbolInfo;
}

@property(readonly, nonatomic) PLCrashReportSymbolInfo *symbolInfo; // @synthesize symbolInfo=_symbolInfo;
@property(readonly, nonatomic) unsigned long long instructionPointer; // @synthesize instructionPointer=_instructionPointer;
- (void)dealloc;
- (id)initWithInstructionPointer:(unsigned long long)arg1 symbolInfo:(id)arg2;

@end

@interface PLCrashReportRegisterInfo : NSObject
{
NSString *_registerName;
unsigned long long _registerValue;
}

@property(readonly, nonatomic) unsigned long long registerValue; // @synthesize registerValue=_registerValue;
@property(readonly, nonatomic) NSString *registerName; // @synthesize registerName=_registerName;
- (void)dealloc;
- (id)initWithRegisterName:(id)arg1 registerValue:(unsigned long long)arg2;

@end

@interface PLCrashReportSymbolInfo : NSObject
{
NSString *_symbolName;
unsigned long long _startAddress;
unsigned long long _endAddress;
}

@property(readonly, nonatomic) unsigned long long endAddress; // @synthesize endAddress=_endAddress;
@property(readonly, nonatomic) unsigned long long startAddress; // @synthesize startAddress=_startAddress;
@property(readonly, nonatomic) NSString *symbolName; // @synthesize symbolName=_symbolName;
- (void)dealloc;
- (id)initWithSymbolName:(id)arg1 startAddress:(unsigned long long)arg2 endAddress:(unsigned long long)arg3;

@end

@interface PLCrashMachExceptionServer : NSObject
{
struct plcrash_exception_server_context *_serverContext;
}

- (void)dealloc;
- (id)exceptionPortWithMask:(unsigned int)arg1 error:(id *)arg2;
- (unsigned int)copySendRightForServerAndReturningError:(id *)arg1;
@property(readonly, nonatomic) unsigned int serverThread;
- (id)initWithCallBack:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 error:(id *)arg3;

@end

@interface PLCrashProcessInfo : NSObject
{
int _processID;
NSString *_processName;
int _parentProcessID;
struct timeval _startTime;
_Bool _traced;
}

+ (id)currentProcessInfo;
@property(readonly, nonatomic) struct timeval startTime; // @synthesize startTime=_startTime;
@property(readonly, nonatomic, getter=isTraced) _Bool traced; // @synthesize traced=_traced;
@property(readonly, nonatomic) int parentProcessID; // @synthesize parentProcessID=_parentProcessID;
@property(readonly, nonatomic) NSString *processName; // @synthesize processName=_processName;
@property(readonly, nonatomic) int processID; // @synthesize processID=_processID;
- (void)dealloc;
- (id)initWithProcessID:(int)arg1;

@end

@interface PLCrashHostInfo : NSObject
{
struct PLCrashHostInfoVersion _darwinVersion;
}

+ (id)currentHostInfo;
@property(readonly, nonatomic) struct PLCrashHostInfoVersion darwinVersion; // @synthesize darwinVersion=_darwinVersion;
- (id)init;

@end

@interface PLCrashMachExceptionPort : NSObject
{
unsigned int _mask;
unsigned int _port;
int _behavior;
int _flavor;
}

+ (id)exceptionPortsForThread:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
+ (id)exceptionPortsForTask:(unsigned int)arg1 mask:(unsigned int)arg2 error:(id *)arg3;
@property(readonly, nonatomic) int flavor; // @synthesize flavor=_flavor;
@property(readonly, nonatomic) int behavior; // @synthesize behavior=_behavior;
@property(readonly, nonatomic) unsigned int mask; // @synthesize mask=_mask;
@property(readonly, nonatomic) unsigned int server_port; // @synthesize server_port=_port;
- (_Bool)registerForThread:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (_Bool)registerForTask:(unsigned int)arg1 previousPortSet:(id *)arg2 error:(id *)arg3;
- (void)dealloc;
- (id)initWithServerPort:(unsigned int)arg1 mask:(unsigned int)arg2 behavior:(int)arg3 flavor:(int)arg4;

@end

@interface PLCrashMachExceptionPortSet : NSObject <NSFastEnumeration>
{
NSSet *_state_set;
struct plcrash_mach_exception_port_set _asyncSafeRepresentation;
}

@property(readonly, nonatomic) NSSet *set; // @synthesize set=_state_set;
@property(readonly, nonatomic) struct plcrash_mach_exception_port_set asyncSafeRepresentation; // @synthesize asyncSafeRepresentation=_asyncSafeRepresentation;
- (unsigned long long)countByEnumeratingWithState:(CDStruct_70511ce9 *)arg1 objects:(id *)arg2 count:(unsigned long long)arg3;
- (void)dealloc;
- (id)initWithAsyncSafeRepresentation:(struct plcrash_mach_exception_port_set)arg1;
- (id)initWithSet:(id)arg1;

@end

@interface PLCrashReporterConfig : NSObject
{
unsigned long long _signalHandlerType;
unsigned long long _symbolicationStrategy;
}

+ (id)defaultConfiguration;
@property(readonly, nonatomic) unsigned long long symbolicationStrategy; // @synthesize symbolicationStrategy=_symbolicationStrategy;
@property(readonly, nonatomic) unsigned long long signalHandlerType; // @synthesize signalHandlerType=_signalHandlerType;
- (id)initWithSignalHandlerType:(unsigned long long)arg1 symbolicationStrategy:(unsigned long long)arg2;
- (id)init;

@end

@interface PLCrashUncaughtExceptionHandler : NSObject
{
}

@end

@interface PLCrashReportMachExceptionInfo : NSObject
{
unsigned long long _type;
NSArray *_codes;
}

@property(readonly, nonatomic) NSArray *codes; // @synthesize codes=_codes;
@property(readonly, nonatomic) unsigned long long type; // @synthesize type=_type;
- (void)dealloc;
- (id)initWithType:(unsigned long long)arg1 codes:(id)arg2;

@end

@interface PGPBluetoothDriver : NSObject <CBCentralManagerDelegate, CBPeripheralDelegate>
{
_Bool _poweredOn;
NSMutableDictionary *_startCallbacks;
NSMutableDictionary *_namesToScan;
NSMutableDictionary *_connectingPeripherals;
NSMutableDictionary *_discoveryPeripherals;
NSMutableDictionary *_characteristicCallbacks;
NSMutableDictionary *_valueChangeCallbacks;
NSMutableDictionary *_writeCallbacks;
NSMutableDictionary *_readCallbacks;
CBCentralManager *_centralManager;
NSObject<OS_dispatch_queue> *_centralManagerQueue;
}

@property _Bool poweredOn; // @synthesize poweredOn=_poweredOn;
@property(retain) NSObject<OS_dispatch_queue> *centralManagerQueue; // @synthesize centralManagerQueue=_centralManagerQueue;
@property(retain) CBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(retain) NSMutableDictionary *readCallbacks; // @synthesize readCallbacks=_readCallbacks;
@property(retain) NSMutableDictionary *writeCallbacks; // @synthesize writeCallbacks=_writeCallbacks;
@property(retain) NSMutableDictionary *valueChangeCallbacks; // @synthesize valueChangeCallbacks=_valueChangeCallbacks;
@property(retain) NSMutableDictionary *characteristicCallbacks; // @synthesize characteristicCallbacks=_characteristicCallbacks;
@property(retain) NSMutableDictionary *discoveryPeripherals; // @synthesize discoveryPeripherals=_discoveryPeripherals;
@property(retain) NSMutableDictionary *connectingPeripherals; // @synthesize connectingPeripherals=_connectingPeripherals;
@property(retain) NSMutableDictionary *namesToScan; // @synthesize namesToScan=_namesToScan;
@property(retain) NSMutableDictionary *startCallbacks; // @synthesize startCallbacks=_startCallbacks;
- (void).cxx_destruct;
- (void)readValueForCharacteristic:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)peripheral:(id)arg1 didWriteValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)writeData:(id)arg1 forCharacteristic:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)peripheral:(id)arg1 didUpdateValueForCharacteristic:(id)arg2 error:(id)arg3;
- (void)peripheral:(id)arg1 didUpdateNotificationStateForCharacteristic:(id)arg2 error:(id)arg3;
- (void)enableValueChangeNotification:(_Bool)arg1 forCharacteristic:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)peripheral:(id)arg1 didDiscoverCharacteristicsForService:(id)arg2 error:(id)arg3;
- (void)discoverCharacteristicsForService:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)peripheral:(id)arg1 didDiscoverServices:(id)arg2;
- (void)discoverServices:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)centralManager:(id)arg1 didDisconnectPeripheral:(id)arg2 error:(id)arg3;
- (void)disconnectPeripheral:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)centralManager:(id)arg1 didFailToConnectPeripheral:(id)arg2 error:(id)arg3;
- (void)centralManager:(id)arg1 didConnectPeripheral:(id)arg2;
- (void)connectPeripheral:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)centralManager:(id)arg1 didDiscoverPeripheral:(id)arg2 advertisementData:(id)arg3 RSSI:(id)arg4;
- (void)stopScanningPeripheralNamed:(id)arg1;
- (_Bool)startScanningPeripheralNamed:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)centralManagerDidUpdateState:(id)arg1;
- (void)stopTag:(int)arg1;
- (void)startTag:(int)arg1 completion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isScanning;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface Upsight : NSObject
{
id <USAnalyticsInterface> _analytics;
id <USBillboardManager> _billboardManager;
id <UpsightDataStoreInterface> _dataStore;
NSString *_token;
}

+ (id)variableObserver;
+ (void)setDefaultLogLevel:(long long)arg1;
+ (long long)defaultLogLevel;
+ (_Bool)optOutStatus;
+ (void)setOptOutStatus:(_Bool)arg1;
+ (void)setLocation:(id)arg1;
+ (id)billboardForScope:(id)arg1;
+ (void)recordMilestoneEventForScope:(id)arg1 properties:(id)arg2;
+ (void)recordMilestoneEventForScope:(id)arg1;
+ (void)recordInAppPurchaseEventWithResolution:(unsigned long long)arg1 product:(id)arg2 quantity:(unsigned long long)arg3 price:(float)arg4 currency:(id)arg5 transactionIdentifier:(id)arg6 properties:(id)arg7;
+ (void)recordMonetizationEventWithResolution:(unsigned long long)arg1 currency:(id)arg2 quantity:(unsigned long long)arg3 product:(id)arg4 price:(float)arg5 properties:(id)arg6;
+ (void)recordMonetizationEventWithResolution:(unsigned long long)arg1 totalPrice:(float)arg2 currency:(id)arg3 product:(id)arg4 properties:(id)arg5;
+ (void)recordAnalyticsEventWithName:(id)arg1 properties:(id)arg2;
+ (id)publicKey;
+ (id)token;
+ (id)sharedUpsight;
@property(retain, nonatomic) NSString *token; // @synthesize token=_token;
@property(retain, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
@property(retain, nonatomic) id <USBillboardManager> billboardManager; // @synthesize billboardManager=_billboardManager;
@property(retain, nonatomic) id <USAnalyticsInterface> analytics; // @synthesize analytics=_analytics;
- (void).cxx_destruct;
- (id)initWithDataStore:(id)arg1;
- (id)init;

@end

@interface USActionMapManager : NSObject <USActionMapDelegate, USActionMapManagerInterface>
{
USActionFactory *_actionsFactory;
NSMutableSet *_actionMaps;
NSMutableSet *_observers;
id <UpsightDataStoreInterface> _dataStore;
}

@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (void)onDidCreateActionMap:(id)arg1;
@property(readonly, nonatomic) NSMutableSet *observers; // @synthesize observers=_observers;
@property(readonly, nonatomic) NSMutableSet *actionMaps; // @synthesize actionMaps=_actionMaps;
@property(readonly) USActionFactory *actionsFactory; // @synthesize actionsFactory=_actionsFactory;
- (void)actionMapDidFinishExecution:(id)arg1;
- (void)onDidStoreActionMap:(id)arg1 action:(unsigned long long)arg2;
@property(readonly) id <USActionHandlerRegistry> handlerRegistry;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)dealloc;
- (id)initWithDataStore:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USPushReceivedEvent : USEvent
{
}

+ (id)eventWithParameters:(id)arg1 messageID:(id)arg2 campaignID:(id)arg3;
@property(readonly, nonatomic) NSNumber *campaignID;
@property(readonly, nonatomic) NSNumber *messageID;
- (id)initWithParameters:(id)arg1 messageID:(id)arg2 campaignID:(id)arg3;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USPush : NSObject
{
id <USAnalyticsInterface> _analytics;
id <USBillboard> _billboard;
id <UpsightDataStoreInterface> _dataStore;
}

+ (id)pushBillboard;
+ (void)handleRemoteNotificationWithUserInfo:(id)arg1;
+ (void)extractMessageID:(id *)arg1 campaignID:(id *)arg2 userInfo:(id)arg3;
+ (void)didRegisterUserNotificationSettings:(id)arg1;
+ (void)registerPushToken:(id)arg1;
+ (void)unregisterForPushNotifications;
+ (void)registerForPushNotifications;
+ (void)initialize;
+ (id)sharedPushInstance;
@property(retain, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
@property(readonly, nonatomic) id <USBillboard> billboard; // @synthesize billboard=_billboard;
@property(readonly, nonatomic) id <USAnalyticsInterface> analytics; // @synthesize analytics=_analytics;
- (id)initWithDataStore:(id)arg1;
- (id)init;

@end

@interface USPushUnregistrationEvent : USEvent
{
}

+ (id)eventWithParameters:(id)arg1;
- (id)initWithParameters:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USPushRegistrationEvent : USEvent
{
}

+ (id)eventWithParameters:(id)arg1 token:(id)arg2;
@property(readonly, nonatomic) NSString *token;
- (id)initWithParameters:(id)arg1 token:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USHexEncoding : NSObject
{
}

+ (_Bool)isHexEncodedString:(id)arg1;
+ (id)dataForHexEncodedString:(id)arg1;
+ (id)hexEncodedStringForData:(id)arg1;

@end

@interface USDataStoreBasedDefaultsImpl : NSObject <UpsightDefaultsImpl>
{
NSMutableDictionary *_defaultsMap;
id <UpsightDataStoreInterface> _dataStore;
}

@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (void)removeAllDefaults;
- (void)setDefault:(id)arg1 forKey:(id)arg2;
- (id)defaultForKey:(id)arg1;
@property(readonly) NSMutableDictionary *defaultsMap; // @synthesize defaultsMap=_defaultsMap;
- (void)removeDefaultForKey:(id)arg1;
- (id)init;
- (id)initWithDataStore:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UpsightDefaults : NSObject
{
id <UpsightDefaultsImpl> _defaultsImpl;
}

+ (id)sharedDefaults;
@property(readonly, nonatomic) id <UpsightDefaultsImpl> defaultsImpl; // @synthesize defaultsImpl=_defaultsImpl;
- (void).cxx_destruct;
- (void)removeAllDefaults;
- (void)removeDefaultForKey:(id)arg1;
- (void)setObject:(id)arg1 forKey:(id)arg2;
- (void)setBool:(_Bool)arg1 forKey:(id)arg2;
- (void)setInteger:(long long)arg1 forKey:(id)arg2;
- (id)objectForKey:(id)arg1;
- (_Bool)boolForKey:(id)arg1;
- (long long)integerForKey:(id)arg1;
- (id)initWithDefaultsImplementation:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface USCrypto : NSObject
{
}

+ (id)MD5ForData:(id)arg1;
+ (id)SHA1ForData:(id)arg1;
+ (id)SHA256ForData:(id)arg1;
+ (id)SHA512ForData:(id)arg1;

@end

@interface USUserDefaultsBasedDefaultsImpl : NSObject <UpsightDefaultsImpl>
{
}

- (void)removeAllDefaults;
- (void)setDefault:(id)arg1 forKey:(id)arg2;
- (id)defaultForKey:(id)arg1;
- (void)removeDefaultForKey:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USWeakTimerTarget : NSObject
{
id _target;
SEL _selector;
NSTimer *_timer;
}

@property(nonatomic) __weak NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) SEL selector; // @synthesize selector=_selector;
@property(nonatomic) __weak id target; // @synthesize target=_target;
- (void).cxx_destruct;
- (void)fire;

@end

@interface USMutableNumber : NSObject
{
NSNumber *_numberValue;
}

@property(retain, nonatomic) NSNumber *numberValue; // @synthesize numberValue=_numberValue;
- (void).cxx_destruct;
@property(nonatomic) long long integerValue;
- (id)initWithInteger:(unsigned long long)arg1;
- (id)init;

@end

@interface USDefaultsStorable : UpsightStorableObject
{
NSString *_defaultName;
id <NSCoding> _value;
}

@property(retain, nonatomic) id <NSCoding> value; // @synthesize value=_value;
@property(readonly, nonatomic) NSString *defaultName; // @synthesize defaultName=_defaultName;
- (void).cxx_destruct;
- (id)initWithDefaultName:(id)arg1;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;

@end

@interface USConfigurationRequest : USEvent
{
}

+ (id)configurationRequestWithParameters:(id)arg1;
- (id)initWithParameters:(id)arg1;
- (id)init;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USConfiguration : UpsightStorableObject
{
NSString *_configurationType;
NSDictionary *_configurationDictionary;
NSNumber *_sessionNumber;
}

@property(readonly, nonatomic) NSNumber *sessionNumber; // @synthesize sessionNumber=_sessionNumber;
@property(readonly, nonatomic) NSDictionary *configurationDictionary; // @synthesize configurationDictionary=_configurationDictionary;
@property(readonly, nonatomic) NSString *configurationType; // @synthesize configurationType=_configurationType;
- (void).cxx_destruct;
- (id)initWithConfigurationType:(id)arg1 configurationDictionary:(id)arg2 sessionNumber:(id)arg3;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USConfigurationManager : NSObject
{
id <UpsightDataStoreInterface> _dataStore;
id <USAnalyticsInterface> _analytics;
NSTimer *_sendTimer;
NSOperationQueue *_queue;
}

+ (id)defaultConfiguration;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) NSTimer *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(nonatomic) __weak id <USAnalyticsInterface> analytics; // @synthesize analytics=_analytics;
@property(retain, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (void)applyConfiguration:(id)arg1;
- (void)ownConfigurationDidUpdate:(id)arg1 action:(unsigned long long)arg2;
- (void)loadOwnConfiguration;
- (void)removeAllObjectsInDataStore:(id)arg1 withType:(id)arg2 predicate:(id)arg3;
- (void)updateConfigurationsWithResponseObject:(id)arg1;
- (void)processStoredConfigurationResponses;
- (void)configurationResponseDidUpdate:(id)arg1 action:(unsigned long long)arg2;
- (void)sendConfigurationRequest;
- (void)invalidateSendTimer;
- (void)setup;
- (id)initWithDataStore:(id)arg1 analytics:(id)arg2;
- (id)initWithDataStore:(id)arg1;
- (id)init;
- (void)dealloc;

@end

@interface USBaseAction : NSObject <USAction>
{
NSDictionary *_parameters;
USActionMap *_map;
CDUnknownBlockType _handler;
}

+ (id)type;
@property(readonly, copy, nonatomic) CDUnknownBlockType handler; // @synthesize handler=_handler;
@property(readonly, nonatomic) __weak USActionMap *map; // @synthesize map=_map;
@property(readonly, nonatomic) NSDictionary *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (void)executeWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USSetBundleIDAction : USBaseAction
{
NSString *_bundleID;
}

+ (id)type;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USNotifyPurchasesAction : USBaseAction
{
NSArray *_purchases;
}

+ (id)type;
@property(readonly, nonatomic) NSArray *purchases; // @synthesize purchases=_purchases;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USSetValueOperation : USModifyValueOperation
{
}

+ (id)operatorName;
- (id)valueByPerformingOperationWithObject:(id)arg1 error:(id *)arg2;

@end

@interface USRewardImpl : NSObject <USReward>
{
NSString *_productIdentifier;
unsigned long long _quantity;
NSData *_signatureData;
}

@property(readonly, nonatomic) NSData *signatureData; // @synthesize signatureData=_signatureData;
@property(readonly, nonatomic) unsigned long long quantity; // @synthesize quantity=_quantity;
@property(readonly, nonatomic) NSString *productIdentifier; // @synthesize productIdentifier=_productIdentifier;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USUXMModifyValueActionHandler : NSObject
{
id <UpsightDataStoreInterface> _dataStore;
id <USActionHandlerDelegate> _delegate;
}

@property(nonatomic) __weak id <USActionHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
@property(readonly, nonatomic) CDUnknownBlockType modifyValueActionHandler;
- (id)initWithDataStore:(id)arg1;

@end

@interface USUXMBooleanSchema : USUXMVariableSchema
{
}

- (_Bool)isValidValue:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface USUXMStringSchema : USUXMVariableSchema
{
}

- (_Bool)isValidValue:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface USNotifyUXMValuesSynchronizedAction : USBaseAction
{
NSArray *_tags;
}

+ (id)type;
@property(copy, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USOpenInAppStoreAction : USBaseAction
{
NSString *_iTunesID;
}

+ (id)type;
@property(copy, nonatomic) NSString *iTunesID; // @synthesize iTunesID=_iTunesID;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USUXMSchema : NSObject
{
NSArray *_tags;
NSArray *_arrayRepresentation;
NSDictionary *_variablesForTags;
NSString *_schemaHash;
}

+ (id)sharedSchema;
+ (id)arrayRepresentation;
+ (id)tags;
+ (id)schemaHash;
+ (id)schemaForTag:(id)arg1;
@property(retain, nonatomic) NSString *schemaHash; // @synthesize schemaHash=_schemaHash;
@property(retain, nonatomic) NSDictionary *variablesForTags; // @synthesize variablesForTags=_variablesForTags;
@property(retain, nonatomic) NSArray *arrayRepresentation; // @synthesize arrayRepresentation=_arrayRepresentation;
@property(retain, nonatomic) NSArray *tags; // @synthesize tags=_tags;
- (void).cxx_destruct;
- (id)schemaFilePath;
- (void)loadUXMVariables;
- (id)schemaForTag:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface USExecuteTriggerTask : NSObject
{
_Bool _canceled;
USActionMap *_map;
double _timeout;
NSString *_timeoutTrigger;
NSString *_cancelTrigger;
NSTimer *_timer;
}

@property(nonatomic, getter=isCanceled) _Bool canceled; // @synthesize canceled=_canceled;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(readonly, nonatomic) NSString *cancelTrigger; // @synthesize cancelTrigger=_cancelTrigger;
@property(readonly, nonatomic) NSString *timeoutTrigger; // @synthesize timeoutTrigger=_timeoutTrigger;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, nonatomic) USActionMap *map; // @synthesize map=_map;
- (void).cxx_destruct;
- (void)cancel;
- (void)onTimeoutDidFire:(id)arg1;
- (id)initWithActionMap:(id)arg1 timeout:(double)arg2 timeoutTrigger:(id)arg3 cancelTrigger:(id)arg4;
- (id)init;

@end

@interface USContentUnitBillboardManager : NSObject <USContentUnitViewControllerCacheDelegate, USActionMapManagerObserver, USContentUnitBillboardDataSource, USBillboardManager>
{
NSDictionary *_actionTypeToHandlerMap;
USContentUnitViewControllerCache *_controllersCache;
USURLLoader *_URLLoader;
id <UpsightDataStoreInterface> _dataStore;
NSMutableDictionary *_scopeToBillboardMap;
NSMutableArray *_presentScopedContentRecords;
NSMutableDictionary *_triggerIfContentAvailableTasks;
id <USActionMapManagerInterface> _actionMapManager;
}

@property(readonly, nonatomic) id <USActionMapManagerInterface> actionMapManager; // @synthesize actionMapManager=_actionMapManager;
@property(retain, nonatomic) NSMutableDictionary *triggerIfContentAvailableTasks; // @synthesize triggerIfContentAvailableTasks=_triggerIfContentAvailableTasks;
@property(retain, nonatomic) NSMutableArray *presentScopedContentRecords; // @synthesize presentScopedContentRecords=_presentScopedContentRecords;
@property(retain, nonatomic) NSMutableDictionary *scopeToBillboardMap; // @synthesize scopeToBillboardMap=_scopeToBillboardMap;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
@property(retain, nonatomic) USContentUnitViewControllerCache *controllersCache; // @synthesize controllersCache=_controllersCache;
- (void).cxx_destruct;
- (CDUnknownBlockType)openInAppStore;
- (CDUnknownBlockType)associateOnce;
- (CDUnknownBlockType)presentCloseButton;
- (CDUnknownBlockType)sendFormData;
- (CDUnknownBlockType)openURL;
- (CDUnknownBlockType)triggerActions;
- (CDUnknownBlockType)notifyPurchases;
- (CDUnknownBlockType)notifyRewards;
- (CDUnknownBlockType)triggerIfContentAvailable;
- (CDUnknownBlockType)sendEvent;
- (CDUnknownBlockType)presentScopelessContent;
- (CDUnknownBlockType)presentScopedContent;
- (CDUnknownBlockType)buildContent;
- (void)actionMapManager:(id)arg1 didDestroyActionMap:(id)arg2;
- (void)cache:(id)arg1 didAddController:(id)arg2;
- (_Bool)isContentAvailableForBillboard:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (id)findBillboardForActionMap:(id)arg1;
- (_Bool)presentViewController:(id)arg1;
@property(readonly) USURLLoader *URLLoader; // @synthesize URLLoader=_URLLoader;
@property(readonly, nonatomic) NSDictionary *actionTypeToHandlerMap; // @synthesize actionTypeToHandlerMap=_actionTypeToHandlerMap;
- (id)billboardForScope:(id)arg1;
- (void)dealloc;
- (id)initWithDataStore:(id)arg1 actionMapManager:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USActionFactory : NSObject <USActionFactoryInterface, USActionHandlerRegistry>
{
NSMutableDictionary *_actionToHandlerMap;
NSDictionary *_actionToBuilderMap;
}

- (void).cxx_destruct;
- (CDUnknownBlockType)notifyUXMValuesSynchronized;
- (CDUnknownBlockType)openInAppStoreBuilder;
- (CDUnknownBlockType)setBundleIDBuilder;
- (CDUnknownBlockType)UXMEnumerateBuilder;
- (CDUnknownBlockType)modifyValueBuilder;
- (CDUnknownBlockType)associateOnceBuilder;
- (CDUnknownBlockType)presentCloseButtonBuilder;
- (CDUnknownBlockType)sendFormDataBuilder;
- (CDUnknownBlockType)openURLBuilder;
- (CDUnknownBlockType)triggerActionBuilder;
- (CDUnknownBlockType)notifyPurchasesBuilder;
- (CDUnknownBlockType)notifyRewardsBuilder;
- (CDUnknownBlockType)triggerIfContentAvailableBuilder;
- (CDUnknownBlockType)disposeActionMapBuilder;
- (CDUnknownBlockType)sendEventBuilder;
- (CDUnknownBlockType)presentScopelessContentBuilder;
- (CDUnknownBlockType)presentScopedContentBuilder;
- (CDUnknownBlockType)buildContentBuilder;
@property(readonly) NSMutableDictionary *actionToHandlerMap; // @synthesize actionToHandlerMap=_actionToHandlerMap;
- (void)registerHandler:(CDUnknownBlockType)arg1 forActionType:(id)arg2;
- (id)actionWithDictionary:(id)arg1 map:(id)arg2;
@property(readonly) NSDictionary *actionToBuilderMap; // @synthesize actionToBuilderMap=_actionToBuilderMap;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USPresentCloseButtonAction : USBaseAction
{
double _delay;
}

+ (id)type;
@property(readonly, nonatomic) double delay; // @synthesize delay=_delay;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USModifyValueOperationFactory : NSObject
{
}

+ (id)operatorToClassMap;
+ (id)operationWithPropertyName:(id)arg1 propertyValue:(id)arg2 operator:(id)arg3;

@end

@interface USDecrementValueOperation : USModifyValueOperation
{
}

+ (id)operatorName;
- (id)valueByPerformingOperationWithObject:(id)arg1 error:(id *)arg2;
- (id)initWithPropertyName:(id)arg1 propertyValue:(id)arg2;

@end

@interface USUXMEnumerateAction : USBaseAction
{
}

+ (id)type;

@end

@interface USPresentScopedContentAction : USBaseAction
{
NSString *_ID;
NSArray *_scopeList;
}

+ (id)type;
@property(readonly, nonatomic) NSArray *scopeList; // @synthesize scopeList=_scopeList;
@property(readonly, nonatomic) NSString *ID; // @synthesize ID=_ID;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USContentUnitBillboard : NSObject <USContentUnitViewControllerDelegate, UIViewControllerTransitioningDelegate, SKStoreProductViewControllerDelegate, USBillboard>
{
_Bool _presenting;
NSString *_scope;
id <USBillboardDelegate> _delegate;
USContentUnitViewController *_viewController;
id <USContentUnitBillboardDataSource> _dataSource;
SKStoreProductViewController *_inAppStoreController;
}

+ (id)presentingControllerToScopeMap;
@property(retain) SKStoreProductViewController *inAppStoreController; // @synthesize inAppStoreController=_inAppStoreController;
@property __weak id <USContentUnitBillboardDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(retain) USContentUnitViewController *viewController; // @synthesize viewController=_viewController;
@property __weak id <USBillboardDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy) NSString *scope; // @synthesize scope=_scope;
- (void).cxx_destruct;
- (void)executeBlockOnMainQueue:(CDUnknownBlockType)arg1 waitUntilFinished:(_Bool)arg2;
- (void)cleanupPresentingControllerToScopeMap;
- (void)onDidEnterBackground:(id)arg1;
- (void)productViewControllerDidFinish:(id)arg1;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (void)contentUnitViewControllerDidDismiss:(id)arg1;
- (void)contentUnitViewControllerWillDismiss:(id)arg1;
- (id)initWithScope:(id)arg1;
@property(readonly, getter=isContentReady) _Bool contentReady;
- (void)onDidReceivePurchases:(id)arg1;
- (void)onDidReceiveRewards:(id)arg1;
- (void)dismissViewControllerAnimated:(_Bool)arg1;
- (void)replacePresentedControllerWithStoreUsingITunesIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)replacePresentedControllerWithViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1 presentingViewController:(id)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)presentViewController:(id)arg1 animated:(_Bool)arg2;
@property(readonly, getter=isPresenting) _Bool presenting; // @synthesize presenting=_presenting;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USModifyValueAction : USBaseAction
{
NSString *_type;
NSArray *_matchValues;
NSArray *_operations;
}

+ (id)type;
@property(readonly, nonatomic) NSArray *operations; // @synthesize operations=_operations;
@property(readonly, nonatomic) NSArray *matchValues; // @synthesize matchValues=_matchValues;
@property(readonly, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USTriggerAction : USBaseAction
{
NSString *_trigger;
}

+ (id)type;
@property(readonly, nonatomic) NSString *trigger; // @synthesize trigger=_trigger;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USUXMFloatSchema : USUXMVariableSchema
{
NSNumber *_minValue;
NSNumber *_maxValue;
}

@property(readonly, nonatomic) NSNumber *maxValue; // @synthesize maxValue=_maxValue;
@property(readonly, nonatomic) NSNumber *minValue; // @synthesize minValue=_minValue;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (_Bool)isValidValue:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface USBuildContentAction : USConditionalAction
{
USContentUnit *_contentUnit;
}

+ (id)type;
@property(readonly, nonatomic) USContentUnit *contentUnit; // @synthesize contentUnit=_contentUnit;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USMatchValue : NSObject
{
NSString *_propertyName;
id _propertyValue;
}

@property(readonly, nonatomic) id propertyValue; // @synthesize propertyValue=_propertyValue;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
- (void).cxx_destruct;
- (id)initWithPropertyName:(id)arg1 propertyValue:(id)arg2;
- (id)init;

@end

@interface USUXMVariableStorable : UpsightStorableObject
{
id _value;
NSString *_valueType;
NSString *_tag;
}

@property(readonly, nonatomic) NSString *tag; // @synthesize tag=_tag;
@property(readonly, nonatomic) NSString *valueType; // @synthesize valueType=_valueType;
@property(retain, nonatomic) id value; // @synthesize value=_value;
- (void).cxx_destruct;
- (id)initWithTag:(id)arg1 valueType:(id)arg2;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USNotifyRewardsAction : USBaseAction
{
NSArray *_rewards;
}

+ (id)type;
@property(readonly, nonatomic) NSArray *rewards; // @synthesize rewards=_rewards;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USSendEventAction : USBaseAction
{
USDynamicEvent *_event;
}

+ (id)type;
@property(readonly, nonatomic) USDynamicEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USUXMIntegerSchema : USUXMVariableSchema
{
NSNumber *_minValue;
NSNumber *_maxValue;
}

@property(readonly, nonatomic) NSNumber *maxValue; // @synthesize maxValue=_maxValue;
@property(readonly, nonatomic) NSNumber *minValue; // @synthesize minValue=_minValue;
- (void).cxx_destruct;
- (id)dictionaryRepresentation;
- (_Bool)isValidValue:(id)arg1;
- (id)initWithDictionary:(id)arg1;

@end

@interface USConditionalAction : USBaseAction
{
NSDictionary *_conditionParameters;
NSString *_thenTrigger;
NSString *_elseTrigger;
}

@property(readonly, nonatomic) NSString *elseTrigger; // @synthesize elseTrigger=_elseTrigger;
@property(readonly, nonatomic) NSString *thenTrigger; // @synthesize thenTrigger=_thenTrigger;
@property(readonly, nonatomic) NSDictionary *conditionParameters; // @synthesize conditionParameters=_conditionParameters;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USManagedVariableManager : NSObject <USActionMapManagerObserver, USActionHandlerDelegate, USManagedVariableObserver>
{
NSMutableDictionary *_tagsToManagedVariablesMap;
NSMutableDictionary *_mapIDToTagsMap;
NSString *_bundleHash;
id <USManagedVariableObserverDelegate> _delegate;
NSDictionary *_actionTypeToHandlerMap;
NSMutableDictionary *_mapIDToSyncBool;
id <UpsightDataStoreInterface> _dataStore;
}

+ (id)sharedManager;
+ (id)bundleID;
+ (void)setBundleID:(id)arg1;
+ (id)bundleHash;
+ (id)managedVariableWithSchema:(id)arg1;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
@property(nonatomic) __weak id <USManagedVariableObserverDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (_Bool)shouldExecuteActionOfType:(id)arg1 fromMap:(id)arg2;
- (CDUnknownBlockType)notifyUXMValuesSynchronized;
- (CDUnknownBlockType)setBundleID;
- (CDUnknownBlockType)UXMEnumerate;
- (CDUnknownBlockType)modifyValue;
@property(readonly, nonatomic) NSDictionary *actionTypeToHandlerMap; // @synthesize actionTypeToHandlerMap=_actionTypeToHandlerMap;
- (void)actionMapManager:(id)arg1 didDestroyActionMap:(id)arg2;
- (void)onDidChangeUXMVariable:(id)arg1 action:(unsigned long long)arg2;
@property(readonly) NSMutableDictionary *mapIDToSyncBool; // @synthesize mapIDToSyncBool=_mapIDToSyncBool;
@property(readonly) NSMutableDictionary *mapIDToTagsMap; // @synthesize mapIDToTagsMap=_mapIDToTagsMap;
@property(readonly) NSMutableDictionary *tagsToManagedVariablesMap; // @synthesize tagsToManagedVariablesMap=_tagsToManagedVariablesMap;
@property(retain) NSString *bundleHash; // @synthesize bundleHash=_bundleHash;
- (id)managedVariableWithSchema:(id)arg1;
- (void)dealloc;
- (id)initWithDataStore:(id)arg1;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USIncrementValueOperation : USModifyValueOperation
{
}

+ (id)operatorName;
- (id)valueByPerformingOperationWithObject:(id)arg1 error:(id *)arg2;
- (id)initWithPropertyName:(id)arg1 propertyValue:(id)arg2;

@end

@interface USContentUnitViewController : UIViewController <UIWebViewDelegate>
{
UIWebView *_webView;
UIView *_contentUnitView;
UIButton *_closeButton;
NSMutableDictionary *_viewData;
double _loadingTimeout;
double _timestamp;
USContentUnit *_contentUnit;
USActionMap *_actionMap;
NSArray *_scopes;
id <USContentUnitViewControllerDelegate> _delegate;
CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property __weak id <USContentUnitViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSArray *scopes; // @synthesize scopes=_scopes;
@property(retain, nonatomic) USActionMap *actionMap; // @synthesize actionMap=_actionMap;
@property(retain, nonatomic) USContentUnit *contentUnit; // @synthesize contentUnit=_contentUnit;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(readonly, nonatomic) double loadingTimeout; // @synthesize loadingTimeout=_loadingTimeout;
- (void).cxx_destruct;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)adjustContentUnitToContainerSize:(struct CGSize)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidLoad;
- (void)failWithError:(id)arg1;
- (id)JSONStringWithObject:(id)arg1;
- (_Bool)sendCallback:(id)arg1 withResponse:(id)arg2 error:(id)arg3;
- (void)handleLoadContextWithCallback:(id)arg1;
- (void)handleDispatchURL:(id)arg1;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)presentCloseButtonWithDelay:(double)arg1;
- (id)viewDataForKey:(id)arg1;
- (void)setViewData:(id)arg1 forKey:(id)arg2;
- (void)updateViewDataWithDispatchContext:(id)arg1;
@property(readonly, nonatomic) NSMutableDictionary *viewData; // @synthesize viewData=_viewData;
- (void)dismissControllerAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissController:(id)arg1;
- (void)loadContentUnit:(id)arg1 actionMap:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) UIButton *closeButton; // @synthesize closeButton=_closeButton;
@property(readonly, nonatomic) UIView *contentUnitView; // @synthesize contentUnitView=_contentUnitView;
@property(readonly, nonatomic) UIWebView *webView; // @synthesize webView=_webView;
- (void)dealloc;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USPresentScopelessContentAction : USBaseAction
{
NSString *_selfID;
NSString *_nextID;
}

+ (id)type;
@property(readonly, nonatomic) NSString *nextID; // @synthesize nextID=_nextID;
@property(readonly, nonatomic) NSString *selfID; // @synthesize selfID=_selfID;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USActionMap : NSObject
{
_Bool _actionMapDisposed;
NSMutableSet *_executingActions;
NSString *_actionFactoryType;
NSString *_ID;
id <USActionMapDelegate> _delegate;
NSDictionary *_triggerToActionsMap;
NSSet *_actionTypesIndex;
}

+ (void)registerActionHandlersWithRegistry:(id)arg1;
@property(nonatomic, getter=isActionMapDisposed) _Bool actionMapDisposed; // @synthesize actionMapDisposed=_actionMapDisposed;
@property(readonly, nonatomic) NSSet *actionTypesIndex; // @synthesize actionTypesIndex=_actionTypesIndex;
@property(readonly, nonatomic) NSDictionary *triggerToActionsMap; // @synthesize triggerToActionsMap=_triggerToActionsMap;
@property(nonatomic) __weak id <USActionMapDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSString *ID; // @synthesize ID=_ID;
@property(readonly, nonatomic) NSString *actionFactoryType; // @synthesize actionFactoryType=_actionFactoryType;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableSet *executingActions; // @synthesize executingActions=_executingActions;
- (void)onActionMapDidFinishExecution;
- (void)onDisposeActionCalled;
- (_Bool)containsActionsWithType:(id)arg1;
- (void)executeActionsForTrigger:(id)arg1;
- (id)initWithActionMapDictionary:(id)arg1 factory:(id)arg2;
- (id)init;

@end

@interface USContentUnit : NSObject
{
_Bool _fullScreen;
NSURL *_templateURL;
NSDictionary *_context;
NSNumber *_contentID;
struct CGRect _portraitFrame;
struct CGRect _landscapeFrame;
}

@property(readonly, nonatomic) struct CGRect landscapeFrame; // @synthesize landscapeFrame=_landscapeFrame;
@property(readonly, nonatomic) struct CGRect portraitFrame; // @synthesize portraitFrame=_portraitFrame;
@property(readonly, nonatomic) NSNumber *contentID; // @synthesize contentID=_contentID;
@property(readonly, nonatomic, getter=isFullScreen) _Bool fullScreen; // @synthesize fullScreen=_fullScreen;
@property(readonly, nonatomic) NSDictionary *context; // @synthesize context=_context;
@property(readonly, nonatomic) NSURL *templateURL; // @synthesize templateURL=_templateURL;
- (void).cxx_destruct;
- (struct CGRect)frameForContainerSize:(struct CGSize)arg1;
- (id)initWithDictionary:(id)arg1;
- (id)init;

@end

@interface USTriggerIfContentAvailableAction : USConditionalAction
{
NSString *_ID;
double _timeout;
}

+ (id)type;
@property(readonly, nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(readonly, nonatomic) NSString *ID; // @synthesize ID=_ID;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USManagedVariable : NSObject
{
NSString *_tag;
id _value;
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)managedBooleanWithTag:(id)arg1;
+ (id)managedFloatWithTag:(id)arg1;
+ (id)managedIntegerWithTag:(id)arg1;
+ (id)managedStringWithTag:(id)arg1;
@property(retain, nonatomic) id value; // @synthesize value=_value;
@property(retain, nonatomic) NSString *tag; // @synthesize tag=_tag;
- (void).cxx_destruct;
- (_Bool)boolValue;
- (float)floatValue;
- (long long)integerValue;
- (id)stringValue;
- (id)initWithTag:(id)arg1 value:(id)arg2;
- (id)init;

@end

@interface USSendFormDataAction : USBaseAction
{
NSString *_dataKey;
NSString *_streamID;
}

+ (id)type;
@property(readonly, nonatomic) NSString *streamID; // @synthesize streamID=_streamID;
@property(readonly, nonatomic) NSString *dataKey; // @synthesize dataKey=_dataKey;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USURLLoaderItem : NSObject
{
NSURLConnection *_connection;
NSURL *_resultingURL;
unsigned long long _numberOfRedirects;
}

@property(nonatomic) unsigned long long numberOfRedirects; // @synthesize numberOfRedirects=_numberOfRedirects;
@property(retain, nonatomic) NSURL *resultingURL; // @synthesize resultingURL=_resultingURL;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;

@end

@interface USURLLoader : NSObject <NSURLConnectionDataDelegate>
{
NSMutableDictionary *_connections;
}

@property(retain, nonatomic) NSMutableDictionary *connections; // @synthesize connections=_connections;
- (void).cxx_destruct;
- (void)openURL:(id)arg1;
- (void)invalidateConnection:(id)arg1;
- (_Bool)isRequestWithStandardURLScheme:(id)arg1;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)loadURL:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USOpenURLAction : USBaseAction
{
NSURL *_URL;
}

+ (id)type;
@property(readonly, nonatomic) NSURL *URL; // @synthesize URL=_URL;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USContentUnitViewControllerCache : NSObject
{
NSMutableDictionary *_actionMapIDToControllerMap;
id <USContentUnitViewControllerCacheDelegate> _delegate;
}

@property(nonatomic) __weak id <USContentUnitViewControllerCacheDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableDictionary *actionMapIDToControllerMap; // @synthesize actionMapIDToControllerMap=_actionMapIDToControllerMap;
- (id)anyControllerForScope:(id)arg1;
- (id)controllerForActionMapID:(id)arg1;
- (void)removeController:(id)arg1;
- (void)addController:(id)arg1;

@end

@interface USTransitionAnimator : NSObject <UIViewControllerAnimatedTransitioning>
{
_Bool _presenting;
}

@property(nonatomic, getter=isPresenting) _Bool presenting; // @synthesize presenting=_presenting;
- (void)animateTransition:(id)arg1;
- (double)transitionDuration:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USDisposeActionMapAction : USBaseAction
{
}

+ (id)type;

@end

@interface USModifyValueOperation : NSObject
{
NSString *_propertyName;
id _propertyValue;
}

+ (id)operatorName;
@property(readonly, nonatomic) id propertyValue; // @synthesize propertyValue=_propertyValue;
@property(readonly, nonatomic) NSString *propertyName; // @synthesize propertyName=_propertyName;
- (void).cxx_destruct;
- (id)valueByPerformingOperationWithObject:(id)arg1 error:(id *)arg2;
- (id)initWithPropertyName:(id)arg1 propertyValue:(id)arg2;
- (id)init;

@end

@interface USAssociateOnceAction : USBaseAction
{
USEventDataAssociation *_association;
}

+ (id)type;
@property(readonly, nonatomic) USEventDataAssociation *association; // @synthesize association=_association;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 map:(id)arg2 handler:(CDUnknownBlockType)arg3;

@end

@interface USUXMVariableSchema : NSObject
{
id _defaultValue;
NSString *_type;
NSString *_tag;
NSString *_variableDescription;
}

@property(readonly, nonatomic) NSString *variableDescription; // @synthesize variableDescription=_variableDescription;
@property(readonly, nonatomic) NSString *tag; // @synthesize tag=_tag;
@property(readonly, nonatomic) NSString *type; // @synthesize type=_type;
@property(readonly, nonatomic) id defaultValue; // @synthesize defaultValue=_defaultValue;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (_Bool)isValidValue:(id)arg1;
- (id)init;
- (id)initWithDictionary:(id)arg1;

@end

@interface USPurchaseImpl : NSObject <USPurchase>
{
NSString *_productIdentifier;
unsigned long long _quantity;
}

@property(readonly, nonatomic) unsigned long long quantity; // @synthesize quantity=_quantity;
@property(readonly, nonatomic) NSString *productIdentifier; // @synthesize productIdentifier=_productIdentifier;
- (void).cxx_destruct;
- (id)initWithDictionary:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USInstallationTracker : NSObject
{
NSDate *_installDate;
id <UpsightDataStoreInterface> _dataStore;
}

+ (void)migrateInstallDateIfNeeded;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
@property(retain) NSDate *installDate; // @synthesize installDate=_installDate;
- (void)trackInstallation;
- (id)initWithDataStore:(id)arg1;
- (id)init;

@end

@interface UpsightInternalObject : NSManagedObject
{
}

+ (id)entityDescription;

// Remaining properties
@property(copy, nonatomic) NSString *externalClassName; // @dynamic externalClassName;
@property(retain, nonatomic) NSDictionary *properties; // @dynamic properties;
@property(copy, nonatomic) NSString *type; // @dynamic type;

@end

@interface UpsightDynamicConfiguration : NSObject
{
id <UpsightDynamicConfigurationDelegate> _delegate;
NSDictionary *_configuration;
}

+ (id)defaultConfiguration;
@property(retain, nonatomic) NSDictionary *configuration; // @synthesize configuration=_configuration;
@property(nonatomic) __weak id <UpsightDynamicConfigurationDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)willUnload;
- (void)updateConfiguration:(id)arg1;
- (id)initWithConfiguration:(id)arg1;

@end

@interface UpsightObserverInfo : NSObject
{
NSString *_selector;
NSObject *_observer;
NSOperationQueue *_queue;
NSPredicate *_predicate;
}

@property(retain, nonatomic) NSPredicate *predicate; // @synthesize predicate=_predicate;
@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak NSObject *observer; // @synthesize observer=_observer;
@property(copy, nonatomic) NSString *selector; // @synthesize selector=_selector;
- (void).cxx_destruct;

@end

@interface UpsightDataStore : NSObject <UpsightDataStoreInterface>
{
NSURL *_dataStoreURL;
NSString *_dataStoreType;
NSEntityDescription *_entityDescription;
NSManagedObjectModel *_objectModel;
NSPersistentStoreCoordinator *_storeCoordinator;
NSManagedObjectContext *_objectContext;
NSOperationQueue *_callbackQueue;
id _contextChangeObserver;
NSMutableDictionary *_observers;
NSMutableArray *_defaultObservers;
}

+ (void)removeFileAtURL:(id)arg1;
+ (_Bool)createDirectoryWithURL:(id)arg1;
+ (id)dataStoreURLWithDirectory:(id)arg1 fileNamePrefix:(id)arg2;
+ (void)removePreReleaseDataStore;
+ (id)preReleaseDefaultStore;
+ (id)defaultStore;
@property(retain, nonatomic) NSMutableArray *defaultObservers; // @synthesize defaultObservers=_defaultObservers;
@property(retain, nonatomic) NSMutableDictionary *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) id contextChangeObserver; // @synthesize contextChangeObserver=_contextChangeObserver;
@property(retain, nonatomic) NSOperationQueue *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSManagedObjectContext *objectContext; // @synthesize objectContext=_objectContext;
@property(retain, nonatomic) NSPersistentStoreCoordinator *storeCoordinator; // @synthesize storeCoordinator=_storeCoordinator;
@property(retain, nonatomic) NSManagedObjectModel *objectModel; // @synthesize objectModel=_objectModel;
@property(retain, nonatomic) NSEntityDescription *entityDescription; // @synthesize entityDescription=_entityDescription;
@property(retain, nonatomic) NSString *dataStoreType; // @synthesize dataStoreType=_dataStoreType;
@property(retain, nonatomic) NSURL *dataStoreURL; // @synthesize dataStoreURL=_dataStoreURL;
- (void).cxx_destruct;
- (id)initWithStorageType:(id)arg1;
- (id)queryObjects:(id)arg1 predicate:(id)arg2;
- (void)removeObjects:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)remove:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)store:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)removeObserver:(id)arg1 type:(id)arg2 predicate:(id)arg3;
- (void)removeObserver:(id)arg1 type:(id)arg2;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 type:(id)arg3 queue:(id)arg4 predicate:(id)arg5;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 type:(id)arg3 queue:(id)arg4;
- (void)addObserver:(id)arg1 selector:(SEL)arg2 type:(id)arg3;
- (void)removeDefaultObserver:(id)arg1;
- (void)addDefaultObserver:(id)arg1 selector:(SEL)arg2 queue:(id)arg3;
- (void)addDefaultObserver:(id)arg1 selector:(SEL)arg2;
- (void)notifyObservers:(id)arg1 action:(unsigned long long)arg2;
- (void)handleContextChangeNotification:(id)arg1;
- (id)generateObjects:(id)arg1;
- (void)buildCoreDataStack;
- (void)dealloc;
- (id)initWithDataStoreURL:(id)arg1;
- (id)initWithDatabaseDirectoryURL:(id)arg1 fileNamePrefix:(id)arg2;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface UpsightStorableObject : NSObject
{
_Bool _readOnly;
NSString *_type;
NSNumber *_version;
NSString *_ID;
UpsightInternalObject *_internalObject;
NSNumber *_storeCount;
}

@property(retain, nonatomic) NSNumber *storeCount; // @synthesize storeCount=_storeCount;
@property(nonatomic) _Bool readOnly; // @synthesize readOnly=_readOnly;
@property(retain, nonatomic) UpsightInternalObject *internalObject; // @synthesize internalObject=_internalObject;
@property(retain, nonatomic) NSString *ID; // @synthesize ID=_ID;
@property(readonly, nonatomic) NSNumber *version; // @synthesize version=_version;
@property(copy, nonatomic) NSString *type; // @synthesize type=_type;
- (void).cxx_destruct;
- (id)dictionaryRepresentation:(id *)arg1;
- (id)propertyNames;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)initWithType:(id)arg1;
- (id)init;

@end

@interface USServices : NSObject
{
id <UpsightDataStoreInterface> _dataStore;
USAnalytics *_analytics;
USDispatcher *_dispatcher;
USConfigurationManager *_configManager;
USActionMapManager *_actionMapManager;
USContentUnitBillboardManager *_billboardManager;
}

@property(retain, nonatomic) USContentUnitBillboardManager *billboardManager; // @synthesize billboardManager=_billboardManager;
@property(retain, nonatomic) USActionMapManager *actionMapManager; // @synthesize actionMapManager=_actionMapManager;
@property(retain, nonatomic) USConfigurationManager *configManager; // @synthesize configManager=_configManager;
@property(retain, nonatomic) USDispatcher *dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) USAnalytics *analytics; // @synthesize analytics=_analytics;
@property(nonatomic) __weak id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;

@end

@interface USServiceManager : NSObject
{
_Bool _initialized;
NSMutableSet *_services;
USInstallationTracker *_installationTracker;
}

+ (id)installationTracker;
+ (id)actionMapManagerForStore:(id)arg1;
+ (id)billboardManagerForStore:(id)arg1;
+ (id)analyticsForStore:(id)arg1;
+ (void)load;
+ (id)sharedServiceManager;
@property(retain, nonatomic) USInstallationTracker *installationTracker; // @synthesize installationTracker=_installationTracker;
@property(retain, nonatomic) NSMutableSet *services; // @synthesize services=_services;
@property(nonatomic) _Bool initialized; // @synthesize initialized=_initialized;
- (void).cxx_destruct;
- (void)initializeSDK;
- (void)onApplicationDidFinishLaunching:(id)arg1;
- (void)installObservers;
- (id)actionMapManagerForStore:(id)arg1;
- (id)billboardManagerForStore:(id)arg1;
- (id)configurationManagerForStore:(id)arg1;
- (id)analyticsForStore:(id)arg1;
- (id)dispatcherForStore:(id)arg1;
- (id)servicesForDataStore:(id)arg1;
- (void)stopServicesWithStore:(id)arg1;
- (void)startServicesWithStore:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface USMigrationManager : NSObject
{
}

+ (void)migrateIfNeeded;

@end

@interface USUnrenderedContentEvent : USEvent
{
}

+ (id)eventWithParameters:(id)arg1 contentID:(id)arg2 campaignID:(id)arg3 scope:(id)arg4;
@property(readonly, nonatomic) NSString *scope;
@property(readonly, nonatomic) NSNumber *campaignID;
@property(readonly, nonatomic) NSNumber *contentID;
- (id)initWithParameters:(id)arg1 contentID:(id)arg2 campaignID:(id)arg3 scope:(id)arg4;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USMilestoneEvent : USEvent
{
}

+ (id)milestoneEventWithParameters:(id)arg1 scope:(id)arg2;
@property(readonly, nonatomic) NSString *scope;
- (id)initWithParameters:(id)arg1 scope:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USInAppPurchaseEvent : USEvent
{
}

+ (id)inAppPurchaseEventWithParameters:(id)arg1 IAPInfo:(id)arg2;
@property(readonly, nonatomic) USInAppPurchaseInfo *info;
- (id)initWithParameters:(id)arg1 IAPInfo:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USDynamicEvent : USEvent
{
}

@property(readonly, nonatomic) NSDictionary *pubData;
@property(readonly, nonatomic) NSDictionary *upsightData;
@property(readonly, nonatomic) NSString *dynamicType;
- (id)initWithWithParameters:(id)arg1 eventDictionary:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USEventDataAssociation : NSObject <NSCoding>
{
NSString *_eventType;
USUpsightDataFilter *_upsightDataFilter;
NSDictionary *_upsightData;
}

+ (id)associationWithEventType:(id)arg1 upsightDataFilter:(id)arg2 upsightData:(id)arg3;
@property(readonly, nonatomic) NSDictionary *upsightData; // @synthesize upsightData=_upsightData;
@property(readonly, nonatomic) USUpsightDataFilter *upsightDataFilter; // @synthesize upsightDataFilter=_upsightDataFilter;
@property(readonly, nonatomic) NSString *eventType; // @synthesize eventType=_eventType;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToAssociation:(id)arg1;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithEventType:(id)arg1 upsightDataFilter:(id)arg2 upsightData:(id)arg3;

@end

@interface USMonetizationEvent : USEvent
{
USMonetizationPurchaseInfo *_info;
}

+ (id)monetizationEventWithWithParameters:(id)arg1 info:(id)arg2;
@property(retain, nonatomic) USMonetizationPurchaseInfo *info; // @synthesize info=_info;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1 monetizationInfo:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USInstallEvent : USEvent
{
}

- (id)initWithParameters:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USEventFactory : NSObject
{
}

+ (id)UXMEnumerateEventWithUXMSchema:(id)arg1 pubData:(id)arg2;
+ (id)pushUnregistrationEventWithPubData:(id)arg1;
+ (id)pushRegistrationEventWithToken:(id)arg1 pubData:(id)arg2;
+ (id)pushReceivedEventWithMessageID:(id)arg1 campaignID:(id)arg2 pubData:(id)arg3;
+ (id)sessionResumeEventWithPubData:(id)arg1;
+ (id)sessionPauseEventWithPubData:(id)arg1;
+ (id)sessionStartEventWithPubData:(id)arg1;
+ (id)configurationRequestWithPubData:(id)arg1;
+ (id)monetizationEventWithInfo:(id)arg1 pubData:(id)arg2;
+ (id)dynamicEventWithEventDictionary:(id)arg1;
+ (id)inAppPurchaseEventWithIAPInfo:(id)arg1 pubData:(id)arg2;
+ (id)installEventWithPubData:(id)arg1;
+ (id)milestoneEventForScope:(id)arg1 pubData:(id)arg2;
+ (id)unrenderedContentEventWithContentID:(id)arg1 campaignID:(id)arg2 scope:(id)arg3 pubData:(id)arg4;
+ (id)dataCollectionEventWitDataBundle:(id)arg1 streamID:(id)arg2 pubData:(id)arg3;
+ (id)analyticsEventWithName:(id)arg1 pubData:(id)arg2;
+ (id)sharedFactory;
- (void)extendEventWithAssociatedData:(id)arg1;
- (id)buildEventWithInitializer:(CDUnknownBlockType)arg1 attributeSetName:(id)arg2 pubData:(id)arg3;
- (id)eventParametersWithAttributeSetName:(id)arg1 pubData:(id)arg2;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface USJSONDataBundle : NSObject <USDataBundle>
{
NSDictionary *_dataBundleDictionary;
}

@property(readonly, nonatomic) NSDictionary *dataBundleDictionary; // @synthesize dataBundleDictionary=_dataBundleDictionary;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic) NSString *dataString;
@property(readonly, nonatomic) NSString *formatString;
- (id)initWithDataBundleDictionary:(id)arg1;
- (id)init;

@end

@interface USAnalytics : NSObject <USAnalyticsInterface>
{
id <UpsightDataStoreInterface> _dataStore;
}

@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (void)record:(id)arg1;
- (id)initWithDataStore:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USUserAttributes : NSObject
{
NSDictionary *_bundleUserAttributes;
NSMutableDictionary *_userAttributes;
}

+ (id)dictionaryRepresentation;
+ (id)stringForKey:(id)arg1;
+ (void)setString:(id)arg1 forKey:(id)arg2;
+ (id)numberForKey:(id)arg1;
+ (void)setNumber:(id)arg1 forKey:(id)arg2;
+ (void)clearUserAttributes;
+ (id)sharedUserAttributes;
@property(retain, nonatomic) NSMutableDictionary *userAttributes; // @synthesize userAttributes=_userAttributes;
- (void).cxx_destruct;
- (_Bool)isValidValue:(id)arg1 forKey:(id)arg2 expectedValueClass:(Class)arg3;
- (_Bool)isValidKey:(id)arg1;
- (id)stringForKey:(id)arg1;
- (void)setString:(id)arg1 forKey:(id)arg2;
- (id)numberForKey:(id)arg1;
- (void)setNumber:(id)arg1 forKey:(id)arg2;
@property(readonly) NSDictionary *bundleUserAttributes; // @synthesize bundleUserAttributes=_bundleUserAttributes;

@end

@interface USAnalyticsEvent : USEvent
{
}

+ (id)analyticsEventWithParameters:(id)arg1 name:(id)arg2;
@property(readonly, nonatomic) NSString *name;
- (id)initWithParameters:(id)arg1 name:(id)arg2;
- (id)init;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USMonetizationPurchaseInfo : USPurchaseInfo
{
}

+ (id)infoWithResolution:(unsigned long long)arg1 currency:(id)arg2 quantity:(unsigned long long)arg3 product:(id)arg4 price:(float)arg5;
+ (id)infoWithResolution:(unsigned long long)arg1 totalPrice:(float)arg2 currency:(id)arg3 product:(id)arg4;
- (id)initWithCoder:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithResolution:(unsigned long long)arg1 totalPrice:(float)arg2 currency:(id)arg3 quantity:(unsigned long long)arg4 product:(id)arg5 price:(float)arg6;

// Remaining properties
@property(retain, nonatomic) NSString *currency; // @dynamic currency;
@property(retain, nonatomic) NSString *product; // @dynamic product;
@property(nonatomic) float totalPrice; // @dynamic totalPrice;

@end

@interface USUpsightDataFilter : NSObject <NSCoding>
{
NSString *_key;
NSArray *_values;
}

@property(readonly, nonatomic) NSArray *values; // @synthesize values=_values;
@property(readonly, nonatomic) NSString *key; // @synthesize key=_key;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToFilter:(id)arg1;
- (unsigned long long)hash;
- (_Bool)matchesUpsightData:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithKey:(id)arg1 values:(id)arg2;
- (id)init;

@end

@interface USUXMEnumerateEvent : USEvent
{
}

+ (id)eventWithParameters:(id)arg1 UXMSchema:(id)arg2;
@property(readonly, nonatomic) NSArray *UXMSchema;
- (id)initWithParameters:(id)arg1 UXMSchema:(id)arg2;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USAssociationDataProvider : NSObject
{
USEventDataAssociationMap *_oneTimeAssociationMap;
}

+ (id)sharedProvider;
@property(retain, nonatomic) USEventDataAssociationMap *oneTimeAssociationMap; // @synthesize oneTimeAssociationMap=_oneTimeAssociationMap;
- (void).cxx_destruct;
- (void)addOneTimeAssociation:(id)arg1;
- (id)obtainAndRemoveAssociatedUpsightDataForEventType:(id)arg1 upsightData:(id)arg2;
- (id)initWithAssociationMap:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface USPurchaseInfo : NSObject <NSCoding>
{
float _price;
float _totalPrice;
unsigned long long _resolution;
NSString *_product;
unsigned long long _quantity;
NSString *_currency;
}

+ (id)resolutionMap;
@property(nonatomic) float totalPrice; // @synthesize totalPrice=_totalPrice;
@property(nonatomic) float price; // @synthesize price=_price;
@property(retain, nonatomic) NSString *currency; // @synthesize currency=_currency;
@property(nonatomic) unsigned long long quantity; // @synthesize quantity=_quantity;
@property(retain, nonatomic) NSString *product; // @synthesize product=_product;
@property(nonatomic) unsigned long long resolution; // @synthesize resolution=_resolution;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithResolution:(unsigned long long)arg1 totalPrice:(float)arg2 currency:(id)arg3 quantity:(unsigned long long)arg4 product:(id)arg5 price:(float)arg6;
- (id)init;

@end

@interface USAssociationStorable : UpsightStorableObject
{
double _timestamp;
USEventDataAssociation *_association;
}

@property(readonly, nonatomic) USEventDataAssociation *association; // @synthesize association=_association;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (void)resetTimestamp;
- (id)initWithEventDataAssociation:(id)arg1;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;

@end

@interface USEventDataAssociationMap : NSObject
{
NSMutableDictionary *_typeToAssociationsMap;
id <UpsightDataStoreInterface> _dataStore;
double _expirationInterval;
}

@property(readonly, nonatomic) double expirationInterval; // @synthesize expirationInterval=_expirationInterval;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (_Bool)isStorableExpired:(id)arg1;
- (void)removeCachedStorables:(id)arg1;
- (void)cacheStorables:(id)arg1;
- (void)filterStorables:(id)arg1 expired:(id *)arg2 valid:(id *)arg3;
- (void)loadAndCacheAssociationStorables;
@property(readonly, nonatomic) NSMutableDictionary *typeToAssociationsMap; // @synthesize typeToAssociationsMap=_typeToAssociationsMap;
- (id)associationsForEventType:(id)arg1;
- (void)removeAssociation:(id)arg1;
- (void)addAssociation:(id)arg1;
- (id)init;
- (id)initWithDataStore:(id)arg1 expirationInterval:(double)arg2;

@end

@interface USDataCollectionEvent : USEvent
{
}

@property(readonly, copy, nonatomic) NSString *streamID;
@property(readonly, copy, nonatomic) NSString *dataBundle;
@property(readonly, copy, nonatomic) NSString *format;
- (id)initWithParameters:(id)arg1 format:(id)arg2 dataBundle:(id)arg3 streamID:(id)arg4;
- (id)initWithType:(id)arg1 parameters:(id)arg2;

@end

@interface USInAppPurchaseInfo : USPurchaseInfo
{
NSString *_transactionIdentifier;
NSDictionary *_IAPBundle;
}

+ (id)IAPInfoWithResolution:(unsigned long long)arg1 currency:(id)arg2 quantity:(unsigned long long)arg3 product:(id)arg4 price:(float)arg5 transactionIdentifier:(id)arg6;
@property(retain, nonatomic) NSDictionary *IAPBundle; // @synthesize IAPBundle=_IAPBundle;
@property(readonly, nonatomic) NSString *transactionIdentifier; // @synthesize transactionIdentifier=_transactionIdentifier;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSDictionary *dictionaryRepresentation;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithDictionaryRepresentation:(id)arg1;
- (id)initWithResolution:(unsigned long long)arg1 currency:(id)arg2 quantity:(unsigned long long)arg3 product:(id)arg4 price:(float)arg5 transactionIdentifier:(id)arg6;
- (id)initWithResolution:(unsigned long long)arg1 totalPrice:(float)arg2 currency:(id)arg3 quantity:(unsigned long long)arg4 product:(id)arg5 price:(float)arg6;

// Remaining properties
@property(retain, nonatomic) NSString *currency; // @dynamic currency;
@property(nonatomic) float price; // @dynamic price;
@property(readonly, nonatomic) NSString *product; // @dynamic product;
@property(readonly, nonatomic) unsigned long long quantity; // @dynamic quantity;
@property(readonly, nonatomic) unsigned long long resolution; // @dynamic resolution;
@property(nonatomic) float totalPrice; // @dynamic totalPrice;

@end

@interface UpsightLogger : NSObject
{
NSString *_name;
UpsightDataStore *_store;
}

+ (id)loggerForName:(id)arg1;
+ (void)setDefaultLogLevel:(long long)arg1;
+ (long long)defaultLogLevel;
+ (void)initialize;
@property(retain, nonatomic) UpsightDataStore *store; // @synthesize store=_store;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (void)observeLogDataStored:(id)arg1 action:(unsigned long long)arg2;
- (void)logDataWithLevel:(long long)arg1 fileName:(id)arg2 line:(long long)arg3 function:(id)arg4 message:(id)arg5;
- (void)logMessage:(id)arg1;
- (id)initWithName:(id)arg1 store:(id)arg2;
- (void)dealloc;

@end

@interface UpsightLogData : UpsightStorableObject
{
NSString *_name;
NSString *_message;
NSString *_file;
NSString *_function;
long long _lineNumber;
long long _level;
}

@property(nonatomic) long long level; // @synthesize level=_level;
@property(nonatomic) long long lineNumber; // @synthesize lineNumber=_lineNumber;
@property(retain, nonatomic) NSString *function; // @synthesize function=_function;
@property(retain, nonatomic) NSString *file; // @synthesize file=_file;
@property(retain, nonatomic) NSString *message; // @synthesize message=_message;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithMessage:(id)arg1 loggingLevel:(long long)arg2;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USTrashDeliveryQueue : NSObject <USDeliveryQueueInterface>
{
id <USDeliveryQueueDelegate> _delegate;
USQueueConfiguration *_queueConfiguration;
NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) USQueueConfiguration *queueConfiguration; // @synthesize queueConfiguration=_queueConfiguration;
@property(nonatomic) __weak id <USDeliveryQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)enqueuePacket:(id)arg1;
- (void)drain;
@property(readonly, nonatomic) NSString *name;
- (id)initWithQueueConfiguration:(id)arg1 operationQueue:(id)arg2;
- (id)init;

@end

@interface USStorableOptOut : UpsightStorableObject
{
_Bool _optOutStatus;
}

+ (_Bool)defaultOptOutStatus;
@property _Bool optOutStatus; // @synthesize optOutStatus=_optOutStatus;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USDeliveryQueue : NSObject <USBatcherDelegate, USDeliveryQueueInterface>
{
id <USDeliveryQueueDelegate> _delegate;
USQueueConfiguration *_queueConfiguration;
USRequestAttributeSetBuilder *_attributeBuilder;
id <USDataSenderInterface> _dataSender;
NSMutableDictionary *_attributeSetNameToBatcher;
NSMutableDictionary *_eventIdToPacket;
NSOperationQueue *_operationQueue;
}

@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSMutableDictionary *eventIdToPacket; // @synthesize eventIdToPacket=_eventIdToPacket;
@property(retain, nonatomic) NSMutableDictionary *attributeSetNameToBatcher; // @synthesize attributeSetNameToBatcher=_attributeSetNameToBatcher;
@property(retain, nonatomic) id <USDataSenderInterface> dataSender; // @synthesize dataSender=_dataSender;
@property(retain, nonatomic) USRequestAttributeSetBuilder *attributeBuilder; // @synthesize attributeBuilder=_attributeBuilder;
@property(retain, nonatomic) USQueueConfiguration *queueConfiguration; // @synthesize queueConfiguration=_queueConfiguration;
@property(nonatomic) __weak id <USDeliveryQueueDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)batcher:(id)arg1 didFailEventsDelivery:(id)arg2 error:(id)arg3;
- (void)batcher:(id)arg1 didDeliverEvents:(id)arg2 response:(id)arg3;
- (void)drain;
- (id)packetsForEventIDs:(id)arg1;
- (id)eventIDsFromEvents:(id)arg1;
- (void)enqueuePacket:(id)arg1;
@property(readonly, nonatomic) NSString *name;
- (id)initWithQueueConfiguration:(id)arg1 attributeBuilder:(id)arg2 operationQueue:(id)arg3 dataSender:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USRetryInfo : NSObject
{
unsigned long long _counter;
}

@property(nonatomic) unsigned long long counter; // @synthesize counter=_counter;

@end

@interface USBatcher : NSObject
{
id <USBatcherDelegate> _delegate;
NSOperationQueue *_operationQueue;
USEventBatch *_activeBatch;
NSMutableSet *_pendingBatches;
id <USDataSenderInterface> _dataSender;
NSTimer *_sendTimer;
NSTimer *_retryTimer;
NSMutableDictionary *_retryInfos;
USRequestAttributeSetBuilder *_attributeBuilder;
NSString *_attributeSetName;
USQueueConfiguration *_queueConfiguration;
}

@property(retain) USQueueConfiguration *queueConfiguration; // @synthesize queueConfiguration=_queueConfiguration;
@property(retain, nonatomic) NSString *attributeSetName; // @synthesize attributeSetName=_attributeSetName;
@property(retain, nonatomic) USRequestAttributeSetBuilder *attributeBuilder; // @synthesize attributeBuilder=_attributeBuilder;
@property(retain, nonatomic) NSMutableDictionary *retryInfos; // @synthesize retryInfos=_retryInfos;
@property(retain, nonatomic) NSTimer *retryTimer; // @synthesize retryTimer=_retryTimer;
@property(retain, nonatomic) NSTimer *sendTimer; // @synthesize sendTimer=_sendTimer;
@property(retain, nonatomic) id <USDataSenderInterface> dataSender; // @synthesize dataSender=_dataSender;
@property(retain, nonatomic) NSMutableSet *pendingBatches; // @synthesize pendingBatches=_pendingBatches;
@property(retain, nonatomic) USEventBatch *activeBatch; // @synthesize activeBatch=_activeBatch;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(nonatomic) __weak id <USBatcherDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onRetryTimerDidFire:(id)arg1;
- (void)installRetryTimer;
- (void)onSendTimerDidFire:(id)arg1;
- (void)invalidateSendTimer;
- (void)installSendTimer;
- (void)dispatchBatch:(id)arg1;
- (id)endpointURLForQueueConfiguration:(id)arg1;
- (_Bool)shouldRetryBatch:(id)arg1 afterError:(id)arg2;
- (void)removeRetryInfoForBatch:(id)arg1;
- (id)retryInfoForBatch:(id)arg1;
- (void)enqueueEvent:(id)arg1;
- (void)drain;
- (id)initWithQueueConfiguration:(id)arg1 attributeSetName:(id)arg2 attributeBuilder:(id)arg3 dataSender:(id)arg4 operationQueue:(id)arg5;
- (id)init;

@end

@interface USEventRouter : NSObject <USDeliveryQueueDelegate>
{
id <USEventRouterDelegate> _delegate;
NSDictionary *_queueNameToQueues;
NSDictionary *_eventTypeToRoutes;
NSMutableSet *_packetRegistry;
NSOperationQueue *_operationQueue;
NSArray *_sortedFilters;
}

+ (CDUnknownBlockType)filterSortingComparator;
+ (id)routerWithDispatcherConfiguration:(id)arg1 attributeBuilder:(id)arg2 operationQueue:(id)arg3 dataSender:(id)arg4;
@property(retain, nonatomic) NSArray *sortedFilters; // @synthesize sortedFilters=_sortedFilters;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSMutableSet *packetRegistry; // @synthesize packetRegistry=_packetRegistry;
@property(retain, nonatomic) NSDictionary *eventTypeToRoutes; // @synthesize eventTypeToRoutes=_eventTypeToRoutes;
@property(retain, nonatomic) NSDictionary *queueNameToQueues; // @synthesize queueNameToQueues=_queueNameToQueues;
@property(nonatomic) __weak id <USEventRouterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)deliveryQueue:(id)arg1 didFailPacketsDelivery:(id)arg2 error:(id)arg3;
- (void)deliveryQueue:(id)arg1 didDeliverPackets:(id)arg2 response:(id)arg3;
- (void)drain;
- (id)itemsFromPackets:(id)arg1;
- (void)unregisterPackets:(id)arg1;
- (void)registerPacket:(id)arg1;
@property(readonly, nonatomic, getter=isEmpty) _Bool empty;
- (_Bool)canRouteItem:(id)arg1;
- (void)routeItem:(id)arg1;
- (id)routeWithBestMatchForEvent:(id)arg1;
- (id)initWithDispatcherConfiguration:(id)arg1 attributeBuilder:(id)arg2 operationQueue:(id)arg3 dataSender:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USDeliveryQueueFactory : NSObject
{
}

+ (id)deliveryQueueWithConfiguration:(id)arg1 attributeBuilder:(id)arg2 operationQueue:(id)arg3 dataSender:(id)arg4;

@end

@interface USLocation : NSObject <NSCoding, NSCopying>
{
CLLocation *_coreLocation;
unsigned long long _validForSessionWithNumber;
}

@property(nonatomic) unsigned long long validForSessionWithNumber; // @synthesize validForSessionWithNumber=_validForSessionWithNumber;
@property(readonly, nonatomic) CLLocation *coreLocation; // @synthesize coreLocation=_coreLocation;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
@property(readonly, nonatomic, getter=isValid) _Bool valid;
- (id)initWithCoreLocation:(id)arg1;
- (id)init;

@end

@interface USConnectionInfo : NSObject
{
NSURLConnection *_connection;
NSMutableData *_responseData;
NSOperationQueue *_callbackQueue;
NSString *_referenceID;
NSString *_signature;
NSError *_error;
CDUnknownBlockType _completionHandler;
}

@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) NSString *signature; // @synthesize signature=_signature;
@property(retain, nonatomic) NSString *referenceID; // @synthesize referenceID=_referenceID;
@property(retain, nonatomic) NSOperationQueue *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSMutableData *responseData; // @synthesize responseData=_responseData;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
- (void).cxx_destruct;
- (void)notifyClientWithCompletionHandler:(CDUnknownBlockType)arg1;

@end

@interface USDataSender : NSObject <NSURLConnectionDataDelegate, USDataSenderInterface>
{
NSOperationQueue *_sendQueue;
NSMutableDictionary *_connections;
unsigned long long _taskIdentifier;
}

@property unsigned long long taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property(retain, nonatomic) NSMutableDictionary *connections; // @synthesize connections=_connections;
@property(readonly, nonatomic) NSOperationQueue *sendQueue; // @synthesize sendQueue=_sendQueue;
- (void).cxx_destruct;
- (_Bool)verifySignatureWithInfo:(id)arg1;
- (void)endBackgroundTask;
- (void)endBackgroundTaskIfIdle;
- (_Bool)hasIncompleteConnections;
- (void)onApplicationWillEnterForeground:(id)arg1;
- (void)startBackgroundTask;
- (void)onApplicationDidEnterBackground:(id)arg1;
- (void)installObservers;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)connection:(id)arg1 didReceiveData:(id)arg2;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connection:(id)arg1 didReceiveResponse:(id)arg2;
- (id)connection:(id)arg1 willSendRequest:(id)arg2 redirectResponse:(id)arg3;
- (void)sendData:(id)arg1 toURL:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 queue:(id)arg4;
- (void)dealloc;
- (id)initWithSendQueue:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USConfigurationBase : NSObject <USConfigurationInterface>
{
NSDictionary *_configurationDictionary;
}

+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (id)requiredKeys;
@property(retain, nonatomic) NSDictionary *configurationDictionary; // @synthesize configurationDictionary=_configurationDictionary;
- (void).cxx_destruct;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToConfiguration:(id)arg1;
- (id)initWithConfigurationDictionary:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USBatchItem : UpsightStorableObject
{
USEvent *_event;
}

@property(readonly, nonatomic) USEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)initWithEvent:(id)arg1;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USQueueConfiguration : USConfigurationBase
{
_Bool _countNetworkFailRetries;
NSString *_name;
double _sendInterval;
unsigned long long _batchSize;
double _retryInterval;
unsigned long long _maxRetryCount;
NSString *_URLFormat;
NSString *_protocol;
NSString *_host;
}

+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (id)requiredKeys;
+ (id)trashQueueConfigurationDictionary;
@property(retain, nonatomic) NSString *host; // @synthesize host=_host;
@property(retain, nonatomic) NSString *protocol; // @synthesize protocol=_protocol;
@property(retain, nonatomic) NSString *URLFormat; // @synthesize URLFormat=_URLFormat;
@property(nonatomic) unsigned long long maxRetryCount; // @synthesize maxRetryCount=_maxRetryCount;
@property(nonatomic) double retryInterval; // @synthesize retryInterval=_retryInterval;
@property(nonatomic) _Bool countNetworkFailRetries; // @synthesize countNetworkFailRetries=_countNetworkFailRetries;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
@property(nonatomic) double sendInterval; // @synthesize sendInterval=_sendInterval;
@property(copy, nonatomic) NSString *name; // @synthesize name=_name;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface USErrorAnalyzer : NSObject
{
}

+ (_Bool)isCriticalError:(id)arg1;
+ (_Bool)isNetworkError:(id)arg1;

@end

@interface USEventParameters : NSObject <NSCoding>
{
double _timestamp;
unsigned long long _eventNumber;
USSession *_session;
NSString *_eventType;
NSString *_attributeSetName;
NSDictionary *_userAttributes;
NSDictionary *_pubData;
NSDictionary *_upsightData;
}

@property(copy, nonatomic) NSDictionary *upsightData; // @synthesize upsightData=_upsightData;
@property(copy, nonatomic) NSDictionary *pubData; // @synthesize pubData=_pubData;
@property(readonly, copy, nonatomic) NSDictionary *userAttributes; // @synthesize userAttributes=_userAttributes;
@property(copy, nonatomic) NSString *attributeSetName; // @synthesize attributeSetName=_attributeSetName;
@property(copy, nonatomic) NSString *eventType; // @synthesize eventType=_eventType;
@property(readonly, nonatomic) USSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) unsigned long long eventNumber; // @synthesize eventNumber=_eventNumber;
@property(readonly, nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
- (void).cxx_destruct;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (_Bool)isEqualToParameters:(id)arg1;
- (unsigned long long)hash;
- (id)initWithTimestamp:(double)arg1 eventType:(id)arg2 eventNumber:(unsigned long long)arg3 session:(id)arg4 attributeSetName:(id)arg5 userAttributes:(id)arg6 pubData:(id)arg7 upsightData:(id)arg8;
- (id)init;

@end

@interface USAttributeSet : USConfigurationBase
{
NSArray *_excludes;
NSArray *_includes;
NSString *_name;
}

+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (id)requiredKeys;
@property(retain, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *includes; // @synthesize includes=_includes;
@property(retain, nonatomic) NSArray *excludes; // @synthesize excludes=_excludes;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface USRequestAttributeSetBuilder : NSObject
{
NSArray *_attributeSets;
NSArray *_attributeSetFilters;
USParametersProvider *_parameterProvider;
NSMutableDictionary *_modifiedFiltersToOriginals;
NSMutableDictionary *_filtersToAttributeSetNames;
NSDictionary *_baseParameterToSelectorMap;
NSDictionary *_optionalParameterToSelectorMap;
NSMutableDictionary *_parameterProvidersCache;
}

@property(retain, nonatomic) NSMutableDictionary *parameterProvidersCache; // @synthesize parameterProvidersCache=_parameterProvidersCache;
@property(retain, nonatomic) NSDictionary *optionalParameterToSelectorMap; // @synthesize optionalParameterToSelectorMap=_optionalParameterToSelectorMap;
@property(retain, nonatomic) NSDictionary *baseParameterToSelectorMap; // @synthesize baseParameterToSelectorMap=_baseParameterToSelectorMap;
@property(retain, nonatomic) NSMutableDictionary *filtersToAttributeSetNames; // @synthesize filtersToAttributeSetNames=_filtersToAttributeSetNames;
@property(retain, nonatomic) NSMutableDictionary *modifiedFiltersToOriginals; // @synthesize modifiedFiltersToOriginals=_modifiedFiltersToOriginals;
@property(retain, nonatomic) USParametersProvider *parameterProvider; // @synthesize parameterProvider=_parameterProvider;
@property(retain, nonatomic) NSArray *attributeSetFilters; // @synthesize attributeSetFilters=_attributeSetFilters;
@property(retain, nonatomic) NSArray *attributeSets; // @synthesize attributeSets=_attributeSets;
- (void).cxx_destruct;
- (id)parametersFromProviders:(id)arg1;
- (id)includeAttributes:(id)arg1 inSet:(id)arg2;
- (id)excludeAttributes:(id)arg1 fromSet:(id)arg2;
- (id)includesForAttributeSetWithName:(id)arg1;
- (id)excludesForAttributeSetWithName:(id)arg1;
- (id)parametersForAttributeSetNamed:(id)arg1;
- (id)attributeSetNameForEvent:(id)arg1;
- (id)initWithAttributeSets:(id)arg1 attributeSetFilters:(id)arg2 parameterProvider:(id)arg3;
- (id)init;

@end

@interface USRSASigningHelper : NSObject
{
struct __SecKey *_publicKeyReference;
struct __SecKey *_privateKeyReference;
NSString *_publicKey;
NSString *_privateKey;
}

@property(retain, nonatomic) NSString *privateKey; // @synthesize privateKey=_privateKey;
@property(retain, nonatomic) NSString *publicKey; // @synthesize publicKey=_publicKey;
- (void).cxx_destruct;
- (id)signatureForMessage:(id)arg1;
@property(readonly) struct __SecKey *privateKeyReference; // @synthesize privateKeyReference=_privateKeyReference;
- (_Bool)verifySignature:(id)arg1 forMessage:(id)arg2;
- (id)stripPublicKeyHeader:(id)arg1;
@property(readonly) struct __SecKey *publicKeyReference; // @synthesize publicKeyReference=_publicKeyReference;
- (struct __SecKey *)keychainItemWithKey:(id)arg1 keyType:(void *)arg2 withTag:(id)arg3;
- (void)dealloc;
- (id)initWithPublicKey:(id)arg1 privateKey:(id)arg2;

@end

@interface USRouteFilterConfiguration : USConfigurationBase
{
NSString *_filter;
NSArray *_queues;
}

+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (id)requiredKeys;
@property(retain, nonatomic) NSArray *queues; // @synthesize queues=_queues;
@property(retain, nonatomic) NSString *filter; // @synthesize filter=_filter;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface USLocationProvider : NSObject
{
}

+ (id)location;
+ (void)setLocation:(id)arg1;

@end

@interface USEventResponse : UpsightStorableObject
{
USEvent *_event;
NSError *_error;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) USEvent *event; // @synthesize event=_event;
- (void).cxx_destruct;
- (id)initWithEvent:(id)arg1 error:(id)arg2;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USDeliveryPacket : NSObject
{
USBatchItem *_batchItem;
NSArray *_route;
}

@property(retain, nonatomic) NSArray *route; // @synthesize route=_route;
@property(retain, nonatomic) USBatchItem *batchItem; // @synthesize batchItem=_batchItem;
- (void).cxx_destruct;
- (id)initWithBatchItem:(id)arg1 route:(id)arg2;
- (id)init;

@end

@interface USDispatcher : NSObject <USEventRouterDelegate>
{
_Bool _accumulatingEvents;
USDispatcherConfiguration *_currentConfiguration;
id <UpsightDataStoreInterface> _dataStore;
USDataSender *_dataSender;
USEventRouter *_eventRouter;
NSMutableSet *_disposedRouters;
NSOperationQueue *_operationQueue;
NSMutableSet *_enqueuedItems;
unsigned long long _taskIdentifier;
}

@property unsigned long long taskIdentifier; // @synthesize taskIdentifier=_taskIdentifier;
@property(retain, nonatomic) NSMutableSet *enqueuedItems; // @synthesize enqueuedItems=_enqueuedItems;
@property(nonatomic, getter=isAccumulatingEvents) _Bool accumulatingEvents; // @synthesize accumulatingEvents=_accumulatingEvents;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain, nonatomic) NSMutableSet *disposedRouters; // @synthesize disposedRouters=_disposedRouters;
@property(retain, nonatomic) USEventRouter *eventRouter; // @synthesize eventRouter=_eventRouter;
@property(retain, nonatomic) USDataSender *dataSender; // @synthesize dataSender=_dataSender;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
- (void).cxx_destruct;
- (void)eventRouterDidDrain:(id)arg1;
- (void)eventRouter:(id)arg1 didFailWithError:(id)arg2 items:(id)arg3;
- (void)eventRouter:(id)arg1 didDeliverItems:(id)arg2 response:(id)arg3;
- (void)onDidUpdateConfiguration:(id)arg1 action:(unsigned long long)arg2;
- (void)onDidUpdateEvent:(id)arg1 action:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long minSessionNumberWithNonExpiredConfiguration;
- (void)storeResponsesForItems:(id)arg1 error:(id)arg2;
- (id)processResponse:(id)arg1;
- (void)processResponseSections:(id)arg1;
- (void)cleanupBatchItems:(id)arg1;
- (void)unregisterBatchItems:(id)arg1;
- (void)restoreBatches;
@property(retain, nonatomic) USDispatcherConfiguration *currentConfiguration; // @synthesize currentConfiguration=_currentConfiguration;
- (void)setupEventRouter;
- (void)endBackgroundTask;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (_Bool)enqueueItem:(id)arg1;
- (id)initWithDataStore:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

@interface USEventBatch : NSObject
{
NSMutableArray *_itemsArray;
unsigned long long _batchSize;
}

@property(readonly, nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSMutableArray *itemsArray; // @synthesize itemsArray=_itemsArray;
@property(readonly, nonatomic) NSArray *items;
- (void)addEventsFromArray:(id)arg1;
- (void)addEvent:(id)arg1;
- (id)dictionaryRepresentationWithBatchParameters:(id)arg1;
@property(readonly, nonatomic, getter=isFull) _Bool full;
- (id)initWithBatchSize:(unsigned long long)arg1;

@end

@interface USEventNumberProvider : NSObject
{
}

+ (id)sharedInstance;
+ (unsigned long long)nextEventNumber;
- (unsigned long long)incrementEventNumber;

@end

@interface USStorableSID : UpsightStorableObject
{
NSString *_SID;
}

+ (id)storableSIDWithSID:(id)arg1;
@property(readonly, nonatomic) NSString *SID; // @synthesize SID=_SID;
- (void).cxx_destruct;
- (id)initWithSID:(id)arg1;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;

@end

@interface USDispatcherConfiguration : USConfigurationBase
{
NSArray *_queues;
NSArray *_routeFilters;
NSArray *_attributeSets;
NSArray *_attributeFilters;
}

+ (id)defaultConfiguration;
+ (id)defaultConfigurationDictionary;
+ (id)loadConfigurationDictionaryFromPlist;
+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (_Bool)isValidArrayOfConfigurationDictionaries:(id)arg1 forClass:(Class)arg2;
@property(retain, nonatomic) NSArray *attributeFilters; // @synthesize attributeFilters=_attributeFilters;
@property(retain, nonatomic) NSArray *attributeSets; // @synthesize attributeSets=_attributeSets;
@property(retain, nonatomic) NSArray *routeFilters; // @synthesize routeFilters=_routeFilters;
@property(retain, nonatomic) NSArray *queues; // @synthesize queues=_queues;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface USPluginVersionProvider : NSObject
{
}

+ (id)pluginVersion;
+ (void)setPluginVersion:(id)arg1;

@end

@interface USSIDProvider : NSObject
{
}

+ (void)migrateSIDFromStoreIfNeeded:(id)arg1;
+ (id)SID;
+ (void)removeSID;
+ (id)loadSID;
+ (id)generateSID;

@end

@interface USEvent : UpsightStorableObject <NSCoding>
{
USEventParameters *_parameters;
}

@property(readonly, nonatomic) USEventParameters *parameters; // @synthesize parameters=_parameters;
- (void).cxx_destruct;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USOptOutProvider : NSObject
{
}

+ (void)migrateOptOutStatusFromStoreIfNeeded:(id)arg1;
+ (_Bool)optOutStatus;
+ (void)setOptOutStatus:(_Bool)arg1;

@end

@interface USParametersProvider : NSObject
{
NSString *_bundleID;
NSString *_bundleVersion;
NSString *_token;
NSString *_deviceID;
NSString *_OSVersion;
NSString *_deviceType;
NSDateFormatter *_timezoneDateFormatter;
}

+ (id)sharedProvider;
- (void).cxx_destruct;
@property(readonly, nonatomic) NSString *UXMSchemaHash;
@property(readonly, nonatomic) NSString *UXMBundleHash;
@property(readonly, nonatomic) NSString *UXMBundleID;
- (id)performBlockSyncOnMainThread:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *SID;
@property(readonly, nonatomic) NSNumber *requestTimestamp;
@property(readonly, nonatomic) NSNumber *locationHeight;
@property(readonly, nonatomic) NSString *locationLongitude;
@property(readonly, nonatomic) NSString *locationLatitude;
- (id)currentLocation;
@property(readonly, nonatomic) NSString *locationTimezone;
@property(readonly, nonatomic) NSDateFormatter *timezoneDateFormatter; // @synthesize timezoneDateFormatter=_timezoneDateFormatter;
@property(readonly, nonatomic, getter=isOptOut) NSNumber *optOut;
- (_Bool)isInterfaceAvailableWithName:(id)arg1;
- (_Bool)isLANAvailable;
- (_Bool)isLocalWiFiAvailable;
@property(readonly, nonatomic) unsigned long long networkReachabilityStatus;
@property(readonly, nonatomic) NSString *networkReachabilityStatusString;
@property(readonly, nonatomic) NSString *localeIdentifier;
@property(readonly, nonatomic) NSString *idfaString;
@property(readonly, nonatomic) NSString *idfvString;
@property(readonly, nonatomic) NSString *SDKPluginVersion;
@property(readonly, nonatomic) NSString *SDKBuild;
@property(readonly, nonatomic) NSString *SDKVersion;
@property(readonly, nonatomic) NSString *manufacturer;
@property(readonly, nonatomic) NSString *deviceType; // @synthesize deviceType=_deviceType;
@property(readonly, nonatomic) NSNumber *screenScale;
@property(readonly, nonatomic) NSNumber *screenWidth;
@property(readonly, nonatomic) NSNumber *screenHeight;
@property(readonly, nonatomic) NSString *OSVersion; // @synthesize OSVersion=_OSVersion;
@property(readonly, nonatomic) NSString *OSName;
@property(readonly, nonatomic, getter=isAdvertisingTrackingLimited) NSNumber *advertisingTrackingLimited;
@property(readonly, nonatomic, getter=isJailbroken) NSNumber *jailbroken;
@property(readonly, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(readonly, nonatomic) NSString *carrierString;
@property(readonly, nonatomic) NSString *token; // @synthesize token=_token;
@property(readonly, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(readonly, nonatomic) NSString *bundleID; // @synthesize bundleID=_bundleID;
- (id)copyWithZone:(struct _NSZone *)arg1;

@end

@interface USResponseSection : UpsightStorableObject
{
NSString *_sectionType;
NSDictionary *_content;
}

@property(readonly, nonatomic) NSDictionary *content; // @synthesize content=_content;
@property(readonly, nonatomic) NSString *sectionType; // @synthesize sectionType=_sectionType;
- (void).cxx_destruct;
- (id)initWithSectionType:(id)arg1 content:(id)arg2;
- (id)initWithType:(id)arg1 version:(id)arg2 ID:(id)arg3;
- (id)init;

@end

@interface USEventSerializer : NSObject
{
}

+ (id)JSONObjectWithParameters:(id)arg1;

@end

@interface USAttributeSetFilterConfiguration : USConfigurationBase
{
NSString *_filter;
NSString *_attributeSet;
}

+ (_Bool)isValidConfigurationDictionary:(id)arg1;
+ (id)requiredKeys;
@property(retain, nonatomic) NSString *attributeSet; // @synthesize attributeSet=_attributeSet;
@property(retain, nonatomic) NSString *filter; // @synthesize filter=_filter;
- (void).cxx_destruct;
- (id)initWithConfigurationDictionary:(id)arg1;

@end

@interface USSessionStartEvent : USEvent
{
NSDictionary *_properties;
}

+ (id)eventWithParameters:(id)arg1;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USSessionPauseEvent : USEvent
{
NSDictionary *_properties;
}

+ (id)eventWithParameters:(id)arg1;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface USStateDefinition : NSObject
{
CDUnknownBlockType _enterBlock;
CDUnknownBlockType _executeBlock;
CDUnknownBlockType _exitBlock;
}

@property(copy, nonatomic) CDUnknownBlockType exitBlock; // @synthesize exitBlock=_exitBlock;
@property(copy, nonatomic) CDUnknownBlockType executeBlock; // @synthesize executeBlock=_executeBlock;
@property(copy, nonatomic) CDUnknownBlockType enterBlock; // @synthesize enterBlock=_enterBlock;
- (void).cxx_destruct;

@end

@interface USSessionManager : NSObject
{
id <USAnalyticsInterface> _analytics;
USSession *_currentSession;
id <UpsightDataStoreInterface> _dataStore;
double _timeToNewSession;
NSDictionary *_stateTable;
NSString *_currentState;
NSNumber *_messageID;
NSNumber *_campaignID;
}

+ (void)startWithMessageID:(id)arg1 campaignID:(id)arg2;
+ (id)defaultConfiguration;
+ (id)sharedSessionManager;
@property(retain, nonatomic) NSNumber *campaignID; // @synthesize campaignID=_campaignID;
@property(retain, nonatomic) NSNumber *messageID; // @synthesize messageID=_messageID;
@property(nonatomic) NSString *currentState; // @synthesize currentState=_currentState;
@property(retain, nonatomic) NSDictionary *stateTable; // @synthesize stateTable=_stateTable;
@property(nonatomic) double timeToNewSession; // @synthesize timeToNewSession=_timeToNewSession;
@property(readonly, nonatomic) id <UpsightDataStoreInterface> dataStore; // @synthesize dataStore=_dataStore;
@property(retain) USSession *currentSession; // @synthesize currentSession=_currentSession;
- (void).cxx_destruct;
- (void)saveSession:(id)arg1;
- (void)setMessageID:(id)arg1 campaignID:(id)arg2;
@property(readonly, nonatomic) id <USAnalyticsInterface> analytics; // @synthesize analytics=_analytics;
@property(readonly, copy, nonatomic) USSession *session;
- (void)applyConfiguration:(id)arg1;
- (void)sessionManagerConfigurationDidUpdate:(id)arg1 action:(unsigned long long)arg2;
- (void)checkForConfiguration;
- (id)exitPaused;
- (void)executePaused;
- (void)enterPaused;
- (id)exitResumed;
- (void)executeResumed;
- (void)enterResumed;
- (id)exitStarted;
- (void)executeStarted;
- (void)enterStarted;
- (id)exitLaunched;
- (void)executeLaunched;
- (void)transition;
- (void)startWithMessageID:(id)arg1 campaignID:(id)arg2;
- (void)dealloc;
- (id)initWithDataStore:(id)arg1;
- (id)init;

@end

@interface USSession : NSObject <NSCoding, NSCopying>
{
double _startTime;
double _sessionDuration;
double _previousSessionsDuration;
unsigned long long _sessionNumber;
NSNumber *_messageID;
NSNumber *_campaignID;
}

@property(retain, nonatomic) NSNumber *campaignID; // @synthesize campaignID=_campaignID;
@property(retain, nonatomic) NSNumber *messageID; // @synthesize messageID=_messageID;
@property(nonatomic) unsigned long long sessionNumber; // @synthesize sessionNumber=_sessionNumber;
@property(nonatomic) double previousSessionsDuration; // @synthesize previousSessionsDuration=_previousSessionsDuration;
@property(nonatomic) double sessionDuration; // @synthesize sessionDuration=_sessionDuration;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
- (void).cxx_destruct;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (_Bool)isEqualToSession:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithStartTime:(double)arg1 sessionDuration:(double)arg2 previousSessionsDuration:(double)arg3 sessionNumber:(unsigned long long)arg4 messageID:(id)arg5 campaignID:(id)arg6;
- (id)init;

@end

@interface USSessionResumeEvent : USEvent
{
NSDictionary *_properties;
}

+ (id)eventWithParameters:(id)arg1;
@property(retain, nonatomic) NSDictionary *properties; // @synthesize properties=_properties;
- (void).cxx_destruct;
- (id)initWithParameters:(id)arg1;
- (id)initWithType:(id)arg1 parameters:(id)arg2;
- (id)init;

@end

@interface UnityAppController (UnityInterface)
@property(nonatomic) _Bool paused;
@end

@interface UnityAppController (Rendering)
@property(readonly, nonatomic) int renderingAPI;
- (void)selectRenderingAPI;
- (void)callbackFramerateChange:(int)arg1;
- (void)callbackPresent:(const struct UnityFrameStats *)arg1;
- (void)callbackGfxInited;
- (void)repaint;
- (void)repaintDisplayLink;
- (void)createDisplayLink;
@end

@interface UnityAppController (ViewHandling)
- (void)checkOrientationRequest;
- (void)orientUnity:(long long)arg1;
- (void)orientInterface:(long long)arg1;
- (void)transitionToViewController:(id)arg1;
- (void)showGameUI;
- (void)createUI;
- (id)createSnapshotView;
- (void)interfaceDidChangeOrientationFrom:(long long)arg1;
- (void)interfaceWillChangeOrientationTo:(long long)arg1;
- (void)willTransitionToViewController:(id)arg1 fromViewController:(id)arg2;
- (void)willStartWithViewController:(id)arg1;
- (id)createRootViewController;
- (id)topMostController;
- (id)createRootViewControllerForOrientation:(long long)arg1;
- (id)createUnityViewControllerForOrientation:(long long)arg1;
- (id)createAutorotatingUnityViewController;
- (id)createUnityView;
- (void)updateAppOrientation:(long long)arg1;
@end

@interface NIAMyAppController (OverrideAppDelegate)
+ (void)load;
@end

@interface UnityAppController (PushAdditions)
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
@end

@interface NSURLConnection (NSURLConnectionExtended)
+ (void)customSendAsynchronousRequest:(id)arg1 queue:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
@end

@interface UnityPLCrashReporter (PrivateMethods)
- (id)crashReportPath;
- (id)queuedCrashReportDirectory;
- (id)crashReportDirectory;
- (_Bool)populateCrashReportDirectoryAndReturnError:(id *)arg1;
- (int)mapToAsyncSymbolicationStrategy:(unsigned long long)arg1;
- (void)dealloc;
- (id)enableMachExceptionServerWithPreviousPortSet:(id *)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (id)initWithBundle:(id)arg1 configuration:(id)arg2;
- (id)initWithApplicationIdentifier:(id)arg1 appVersion:(id)arg2 configuration:(id)arg3;
@end

@interface UnityPLCrashReport (PrivateMethods)
- (id)extractMachExceptionInfo:(struct _Plcrash__CrashReport__Signal__MachException *)arg1 error:(id *)arg2;
- (id)extractSignalInfo:(struct _Plcrash__CrashReport__Signal *)arg1 error:(id *)arg2;
- (id)extractExceptionInfo:(struct _Plcrash__CrashReport__Exception *)arg1 error:(id *)arg2;
- (id)extractImageInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractThreadInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractStackFrameInfo:(struct _Plcrash__CrashReport__Thread__StackFrame *)arg1 error:(id *)arg2;
- (id)extractSymbolInfo:(struct _Plcrash__CrashReport__Symbol *)arg1 error:(id *)arg2;
- (id)extractProcessInfo:(struct _Plcrash__CrashReport__ProcessInfo *)arg1 error:(id *)arg2;
- (id)extractApplicationInfo:(struct _Plcrash__CrashReport__ApplicationInfo *)arg1 error:(id *)arg2;
- (id)extractMachineInfo:(struct _Plcrash__CrashReport__MachineInfo *)arg1 error:(id *)arg2;
- (id)extractProcessorInfo:(struct _Plcrash__CrashReport__Processor *)arg1 error:(id *)arg2;
- (id)extractSystemInfo:(struct _Plcrash__CrashReport__SystemInfo *)arg1 error:(id *)arg2;
- (struct _Plcrash__CrashReport *)decodeCrashData:(id)arg1 error:(id *)arg2;
@end

@interface UnityPLCrashReportTextFormatter (PrivateMethods)
+ (id)formatStackFrame:(id)arg1 frameIndex:(unsigned long long)arg2 report:(id)arg3 lp64:(_Bool)arg4;
@end

@interface GTMSessionFetcher (BackwardsCompatibilityOnly)
- (void)setCookieStorageMethod:(long long)arg1;
@end

@interface GTMSessionFetcher (GTMSessionFetcherLogging)
+ (void)deleteLogDirectoriesOlderThanDate:(id)arg1;
+ (id)htmlFileName;
+ (id)symlinkNameSuffix;
+ (id)processNameLogPrefix;
+ (id)loggingDateStamp;
+ (void)setLoggingDateStamp:(id)arg1;
+ (id)loggingProcessName;
+ (void)setLoggingProcessName:(id)arg1;
+ (_Bool)isLoggingToFileEnabled;
+ (void)setLoggingToFileEnabled:(_Bool)arg1;
+ (_Bool)isLoggingEnabled;
+ (void)setLoggingEnabled:(_Bool)arg1;
+ (id)logDirectoryForCurrentRun;
+ (void)setLogDirectoryForCurrentRun:(id)arg1;
+ (id)loggingDirectory;
+ (void)setLoggingDirectory:(id)arg1;
- (CDUnknownBlockType)loggedStreamProviderForStreamProvider:(CDUnknownBlockType)arg1;
- (id)loggedInputStreamForInputStream:(id)arg1;
- (void)logFetchWithError:(id)arg1;
- (id)stringFromStreamData:(id)arg1 contentType:(id)arg2;
- (id)formattedStringFromData:(id)arg1 contentType:(id)arg2 JSON:(id *)arg3;
@end

@interface GTMSessionFetcher (GTMSessionFetcherLoggingUtilities)
+ (id)headersStringForDictionary:(id)arg1;
+ (id)snipSubstringOfString:(id)arg1 betweenStartString:(id)arg2 endString:(id)arg3;
- (void)inputStream:(id)arg1 readIntoBuffer:(void *)arg2 length:(long long)arg3;
@end

@interface GTMSessionFetcherService (TestingSupport)
+ (id)mockFetcherServiceWithFakedData:(id)arg1 fakedError:(id)arg2;
- (_Bool)waitForCompletionOfAllFetchersWithTimeout:(double)arg1;
@end

@interface GTMSessionFetcherService (BackwardsCompatibilityOnly)
@property long long cookieStorageMethod;
@end

@interface GTMSessionFetcher (GTMSessionUploadFetcherMethods)
@property(readonly) GTMSessionUploadFetcher *parentUploadFetcher;
@end

@interface NSString (Encoding)
+ (id)hexStringWithData:(char *)arg1 length:(unsigned long long)arg2;
- (id)MD5String;
@end

@interface PLCrashReporter (PrivateMethods)
- (id)crashReportPath;
- (id)queuedCrashReportDirectory;
- (id)crashReportDirectory;
- (_Bool)populateCrashReportDirectoryAndReturnError:(id *)arg1;
- (int)mapToAsyncSymbolicationStrategy:(unsigned long long)arg1;
- (void)dealloc;
- (id)enableMachExceptionServerWithPreviousPortSet:(id *)arg1 callback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3 error:(id *)arg4;
- (id)initWithBundle:(id)arg1 configuration:(id)arg2;
- (id)initWithApplicationIdentifier:(id)arg1 appVersion:(id)arg2 appMarketingVersion:(id)arg3 configuration:(id)arg4;
@end

@interface PLCrashReport (PrivateMethods)
- (id)extractMachExceptionInfo:(struct _Plcrash__CrashReport__Signal__MachException *)arg1 error:(id *)arg2;
- (id)extractSignalInfo:(struct _Plcrash__CrashReport__Signal *)arg1 error:(id *)arg2;
- (id)extractExceptionInfo:(struct _Plcrash__CrashReport__Exception *)arg1 error:(id *)arg2;
- (id)extractImageInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractThreadInfo:(struct _Plcrash__CrashReport *)arg1 error:(id *)arg2;
- (id)extractStackFrameInfo:(struct _Plcrash__CrashReport__Thread__StackFrame *)arg1 error:(id *)arg2;
- (id)extractSymbolInfo:(struct _Plcrash__CrashReport__Symbol *)arg1 error:(id *)arg2;
- (id)extractProcessInfo:(struct _Plcrash__CrashReport__ProcessInfo *)arg1 error:(id *)arg2;
- (id)extractApplicationInfo:(struct _Plcrash__CrashReport__ApplicationInfo *)arg1 error:(id *)arg2;
- (id)extractMachineInfo:(struct _Plcrash__CrashReport__MachineInfo *)arg1 error:(id *)arg2;
- (id)synthesizeProcessorInfoFromArchitecture:(int)arg1 error:(id *)arg2;
- (id)extractProcessorInfo:(struct _Plcrash__CrashReport__Processor *)arg1 error:(id *)arg2;
- (id)extractSystemInfo:(struct _Plcrash__CrashReport__SystemInfo *)arg1 processorInfo:(id)arg2 error:(id *)arg3;
- (struct _Plcrash__CrashReport *)decodeCrashData:(id)arg1 error:(id *)arg2;
@end

@interface PLCrashReportTextFormatter (PrivateMethods)
+ (id)formatStackFrame:(id)arg1 frameIndex:(unsigned long long)arg2 report:(id)arg3 lp64:(_Bool)arg4;
@end

@interface Upsight (PluginSupport)
+ (void)setPluginVersion:(id)arg1;
@end

@interface Upsight (ServerEventsSupport)
+ (id)senderID;
@end

@interface NSTimer (WeakTimer)
+ (id)scheduledWeakTimerWithTimeInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(_Bool)arg5;
@end

@interface NSString (QueryComponents)
- (id)dictionaryFromQueryComponents;
- (id)stringByEncodingURLFormat;
- (id)stringByDecodingURLFormat;
@end

@interface NSURL (QueryComponents)
- (id)queryComponents;
@end

@interface NSDictionary (QueryComponents)
- (id)stringFromQueryComponents;
@end

@interface NSString (QueryComponents)
- (id)dictionaryFromQueryComponents;
- (id)stringByEncodingURLFormat;
- (id)stringByDecodingURLFormat;
@end

@interface NSURL (QueryComponents)
- (id)queryComponents;
@end

@interface NSDictionary (QueryComponents)
- (id)stringFromQueryComponents;
@end

@interface SKStoreProductViewController (USAutorotationFix)
- (_Bool)shouldAutorotate;
@end

@interface NSString (USBase64Encoding)
- (id)com_upsight_convertFromBase64URLToBase64EncodedString;
- (id)com_upsight_repaddedBase64URLEncodedString;
@end

@interface NSString (USFilterMatching)
- (id)com_upsight_firstMatchingFilter:(id)arg1;
- (id)com_upsight_sortedMatchingExpressionsFromArray:(id)arg1;
@end

